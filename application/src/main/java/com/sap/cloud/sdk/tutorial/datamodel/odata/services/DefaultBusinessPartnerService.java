
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.1.0
 */

package com.sap.cloud.sdk.tutorial.datamodel.odata.services;

import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import javax.annotation.Nonnull;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.Address;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressUsage;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressUsageByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressUsageCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressUsageDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressUsageFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.AddressUsageUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BPInternationalAddressVersion;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BPInternationalAddressVersionByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BPInternationalAddressVersionCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BPInternationalAddressVersionDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BPInternationalAddressVersionFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BPInternationalAddressVersionUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.Bank;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BankByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BankCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BankDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BankFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BankUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartner;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentILN;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentILNByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentILNCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentILNDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentILNFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentILNUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentTaxNumbers;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentTaxNumbersByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentTaxNumbersCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentTaxNumbersDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentTaxNumbersFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerAddressDependentTaxNumbersUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerDataController;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerDataControllerByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerDataControllerCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerDataControllerFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerDataControllerUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerPaymentCard;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerPaymentCardByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerPaymentCardCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerPaymentCardDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerPaymentCardFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerPaymentCardUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerRelationship;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerRelationshipByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerRelationshipCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerRelationshipDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerRelationshipFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerRelationshipUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.BusinessPartnerUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CompanyWithholdingTax;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CompanyWithholdingTaxByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CompanyWithholdingTaxCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CompanyWithholdingTaxDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CompanyWithholdingTaxFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CompanyWithholdingTaxUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.Contact;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.ContactByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.ContactCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.ContactDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.ContactFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.ContactPersonAddress;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.ContactPersonAddressByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.ContactPersonAddressCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.ContactPersonAddressFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.ContactPersonAddressUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.ContactUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CreditWorthiness;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CreditWorthinessByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CreditWorthinessCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CreditWorthinessFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CreditWorthinessUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.Customer;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentExternalIdentifier;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentExternalIdentifierByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentExternalIdentifierCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentExternalIdentifierDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentExternalIdentifierFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentExternalIdentifierUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentInfomation;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentInfomationByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentInfomationCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentInfomationDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentInfomationFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerAddressDependentInfomationUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompany;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompanyByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompanyCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompanyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompanyText;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompanyTextByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompanyTextCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompanyTextDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompanyTextFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompanyTextUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerCompanyUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerDunning;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerDunningByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerDunningCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerDunningDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerDunningFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerDunningUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentInformation;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentInformationByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentInformationCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentInformationDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentInformationFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentInformationUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentTaxInfo;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentTaxInfoByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentTaxInfoCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentTaxInfoDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentTaxInfoFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaAddressDependentTaxInfoUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaText;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaTextByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaTextCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaTextDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaTextFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerSalesAreaTextUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerTaxGrouping;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerTaxGroupingByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerTaxGroupingDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerTaxGroupingFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerTaxGroupingUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerText;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerTextByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerTextCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerTextDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerTextFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerTextUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPoint;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointAddressDependentInformation;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointAddressDependentInformationByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointAddressDependentInformationCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointAddressDependentInformationDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointAddressDependentInformationFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointAddressDependentInformationUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUnloadingPointUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.CustomerUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.EmailAddress;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.EmailAddressByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.EmailAddressCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.EmailAddressDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.EmailAddressFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.EmailAddressUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FaxNumber;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FaxNumberByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FaxNumberCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FaxNumberDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FaxNumberFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FaxNumberUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FinancialServicesDetails;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FinancialServicesDetailsByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FinancialServicesDetailsCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FinancialServicesDetailsFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FinancialServicesDetailsUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FinancialServicesReporting;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FinancialServicesReportingByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FinancialServicesReportingCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FinancialServicesReportingFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FinancialServicesReportingUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FiscalYearInformation;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FiscalYearInformationByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FiscalYearInformationCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FiscalYearInformationDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FiscalYearInformationFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FiscalYearInformationUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FunctionAndDepartment;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FunctionAndDepartmentByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FunctionAndDepartmentFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.FunctionAndDepartmentUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.HomePageURL;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.HomePageURLByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.HomePageURLCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.HomePageURLDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.HomePageURLFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.HomePageURLUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.Identification;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.IdentificationByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.IdentificationCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.IdentificationDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.IdentificationFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.IdentificationUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.Industry;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.IndustryByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.IndustryCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.IndustryDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.IndustryFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.IndustryUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PhoneNumber;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PhoneNumberByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PhoneNumberCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PhoneNumberDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PhoneNumberFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PhoneNumberUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganization;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganizationByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganizationCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganizationFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganizationText;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganizationTextByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganizationTextCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganizationTextDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganizationTextFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganizationTextUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingOrganizationUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingPartnerFunctions;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingPartnerFunctionsByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingPartnerFunctionsCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingPartnerFunctionsDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingPartnerFunctionsFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.PurchasingPartnerFunctionsUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.Ratings;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.RatingsByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.RatingsCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.RatingsDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.RatingsFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.RatingsUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.Role;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.RoleByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.RoleCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.RoleFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.RoleUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesArea;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesAreaByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesAreaCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesAreaFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesAreaTax;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesAreaTaxByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesAreaTaxCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesAreaTaxFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesAreaTaxUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesAreaUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesPartnerFunctions;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesPartnerFunctionsByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesPartnerFunctionsCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesPartnerFunctionsDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesPartnerFunctionsFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SalesPartnerFunctionsUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.Supplier;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompany;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompanyByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompanyCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompanyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompanyText;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompanyTextByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompanyTextCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompanyTextDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompanyTextFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompanyTextUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierCompanyUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierDunning;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierDunningByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierDunningCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierDunningDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierDunningFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierDunningUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierText;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierTextByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierTextCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierTextDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierTextFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierTextUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.SupplierUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.TaxNumber;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.TaxNumberByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.TaxNumberCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.TaxNumberDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.TaxNumberFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.TaxNumberUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.WithholdingTax;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.WithholdingTaxByKeyFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.WithholdingTaxCreateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.WithholdingTaxDeleteFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.WithholdingTaxFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.WithholdingTaxUpdateFluentHelper;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.batch.DefaultBusinessPartnerServiceBatch;


/**
 * <h3>Details:</h3><table summary='Details'><tr><td align='right'>OData Service:</td><td>API_BUSINESS_PARTNER</td></tr></table>
 * 
 */
public class DefaultBusinessPartnerService
    implements BusinessPartnerService
{

    @Nonnull
    private final String servicePath;

    /**
     * Creates a service using {@link BusinessPartnerService#DEFAULT_SERVICE_PATH} to send the requests.
     * 
     */
    public DefaultBusinessPartnerService() {
        servicePath = BusinessPartnerService.DEFAULT_SERVICE_PATH;
    }

    /**
     * Creates a service using the provided service path to send the requests.
     * <p>
     * Used by the fluent {@link #withServicePath(String)} method.
     * 
     */
    private DefaultBusinessPartnerService(
        @Nonnull
        final String servicePath) {
        this.servicePath = servicePath;
    }

    @Override
    @Nonnull
    public DefaultBusinessPartnerService withServicePath(
        @Nonnull
        final String servicePath) {
        return new DefaultBusinessPartnerService(servicePath);
    }

    @Override
    @Nonnull
    public DefaultBusinessPartnerServiceBatch batch() {
        return new DefaultBusinessPartnerServiceBatch(this, servicePath);
    }

    @Override
    @Nonnull
    public EmailAddressFluentHelper getAllEmailAddress() {
        return new EmailAddressFluentHelper(servicePath, "A_AddressEmailAddress");
    }

    @Override
    @Nonnull
    public EmailAddressByKeyFluentHelper getEmailAddressByKey(final String addressNumber, final String personNumber, final String sequenceNumber) {
        return new EmailAddressByKeyFluentHelper(servicePath, "A_AddressEmailAddress", addressNumber, personNumber, sequenceNumber);
    }

    @Override
    @Nonnull
    public EmailAddressCreateFluentHelper createEmailAddress(
        @Nonnull
        final EmailAddress emailAddress) {
        return new EmailAddressCreateFluentHelper(servicePath, emailAddress, "A_AddressEmailAddress");
    }

    @Override
    @Nonnull
    public EmailAddressUpdateFluentHelper updateEmailAddress(
        @Nonnull
        final EmailAddress emailAddress) {
        return new EmailAddressUpdateFluentHelper(servicePath, emailAddress, "A_AddressEmailAddress");
    }

    @Override
    @Nonnull
    public EmailAddressDeleteFluentHelper deleteEmailAddress(
        @Nonnull
        final EmailAddress emailAddress) {
        return new EmailAddressDeleteFluentHelper(servicePath, emailAddress, "A_AddressEmailAddress");
    }

    @Override
    @Nonnull
    public FaxNumberFluentHelper getAllFaxNumber() {
        return new FaxNumberFluentHelper(servicePath, "A_AddressFaxNumber");
    }

    @Override
    @Nonnull
    public FaxNumberByKeyFluentHelper getFaxNumberByKey(final String addressNumber, final String personNumber, final String sequenceNumber) {
        return new FaxNumberByKeyFluentHelper(servicePath, "A_AddressFaxNumber", addressNumber, personNumber, sequenceNumber);
    }

    @Override
    @Nonnull
    public FaxNumberCreateFluentHelper createFaxNumber(
        @Nonnull
        final FaxNumber faxNumber) {
        return new FaxNumberCreateFluentHelper(servicePath, faxNumber, "A_AddressFaxNumber");
    }

    @Override
    @Nonnull
    public FaxNumberUpdateFluentHelper updateFaxNumber(
        @Nonnull
        final FaxNumber faxNumber) {
        return new FaxNumberUpdateFluentHelper(servicePath, faxNumber, "A_AddressFaxNumber");
    }

    @Override
    @Nonnull
    public FaxNumberDeleteFluentHelper deleteFaxNumber(
        @Nonnull
        final FaxNumber faxNumber) {
        return new FaxNumberDeleteFluentHelper(servicePath, faxNumber, "A_AddressFaxNumber");
    }

    @Override
    @Nonnull
    public HomePageURLFluentHelper getAllHomePageURL() {
        return new HomePageURLFluentHelper(servicePath, "A_AddressHomePageURL");
    }

    @Override
    @Nonnull
    public HomePageURLByKeyFluentHelper getHomePageURLByKey(final String addressNumber, final String personNumber, final String sequenceNumber, final LocalDateTime from, final Boolean standardAddr) {
        return new HomePageURLByKeyFluentHelper(servicePath, "A_AddressHomePageURL", addressNumber, personNumber, sequenceNumber, from, standardAddr);
    }

    @Override
    @Nonnull
    public HomePageURLCreateFluentHelper createHomePageURL(
        @Nonnull
        final HomePageURL homePageURL) {
        return new HomePageURLCreateFluentHelper(servicePath, homePageURL, "A_AddressHomePageURL");
    }

    @Override
    @Nonnull
    public HomePageURLUpdateFluentHelper updateHomePageURL(
        @Nonnull
        final HomePageURL homePageURL) {
        return new HomePageURLUpdateFluentHelper(servicePath, homePageURL, "A_AddressHomePageURL");
    }

    @Override
    @Nonnull
    public HomePageURLDeleteFluentHelper deleteHomePageURL(
        @Nonnull
        final HomePageURL homePageURL) {
        return new HomePageURLDeleteFluentHelper(servicePath, homePageURL, "A_AddressHomePageURL");
    }

    @Override
    @Nonnull
    public PhoneNumberFluentHelper getAllPhoneNumber() {
        return new PhoneNumberFluentHelper(servicePath, "A_AddressPhoneNumber");
    }

    @Override
    @Nonnull
    public PhoneNumberByKeyFluentHelper getPhoneNumberByKey(final String addressNumber, final String personNumber, final String sequenceNumber) {
        return new PhoneNumberByKeyFluentHelper(servicePath, "A_AddressPhoneNumber", addressNumber, personNumber, sequenceNumber);
    }

    @Override
    @Nonnull
    public PhoneNumberCreateFluentHelper createPhoneNumber(
        @Nonnull
        final PhoneNumber phoneNumber) {
        return new PhoneNumberCreateFluentHelper(servicePath, phoneNumber, "A_AddressPhoneNumber");
    }

    @Override
    @Nonnull
    public PhoneNumberUpdateFluentHelper updatePhoneNumber(
        @Nonnull
        final PhoneNumber phoneNumber) {
        return new PhoneNumberUpdateFluentHelper(servicePath, phoneNumber, "A_AddressPhoneNumber");
    }

    @Override
    @Nonnull
    public PhoneNumberDeleteFluentHelper deletePhoneNumber(
        @Nonnull
        final PhoneNumber phoneNumber) {
        return new PhoneNumberDeleteFluentHelper(servicePath, phoneNumber, "A_AddressPhoneNumber");
    }

    @Override
    @Nonnull
    public BusinessPartnerAddressDependentILNFluentHelper getAllBusinessPartnerAddressDependentILN() {
        return new BusinessPartnerAddressDependentILNFluentHelper(servicePath, "A_BPAddrDepdntIntlLocNumber");
    }

    @Override
    @Nonnull
    public BusinessPartnerAddressDependentILNByKeyFluentHelper getBusinessPartnerAddressDependentILNByKey(final String businessPartner, final String addressNumber) {
        return new BusinessPartnerAddressDependentILNByKeyFluentHelper(servicePath, "A_BPAddrDepdntIntlLocNumber", businessPartner, addressNumber);
    }

    @Override
    @Nonnull
    public BusinessPartnerAddressDependentILNCreateFluentHelper createBusinessPartnerAddressDependentILN(
        @Nonnull
        final BusinessPartnerAddressDependentILN businessPartnerAddressDependentILN) {
        return new BusinessPartnerAddressDependentILNCreateFluentHelper(servicePath, businessPartnerAddressDependentILN, "A_BPAddrDepdntIntlLocNumber");
    }

    @Override
    @Nonnull
    public BusinessPartnerAddressDependentILNUpdateFluentHelper updateBusinessPartnerAddressDependentILN(
        @Nonnull
        final BusinessPartnerAddressDependentILN businessPartnerAddressDependentILN) {
        return new BusinessPartnerAddressDependentILNUpdateFluentHelper(servicePath, businessPartnerAddressDependentILN, "A_BPAddrDepdntIntlLocNumber");
    }

    @Override
    @Nonnull
    public BusinessPartnerAddressDependentILNDeleteFluentHelper deleteBusinessPartnerAddressDependentILN(
        @Nonnull
        final BusinessPartnerAddressDependentILN businessPartnerAddressDependentILN) {
        return new BusinessPartnerAddressDependentILNDeleteFluentHelper(servicePath, businessPartnerAddressDependentILN, "A_BPAddrDepdntIntlLocNumber");
    }

    @Override
    @Nonnull
    public ContactPersonAddressFluentHelper getAllContactPersonAddress() {
        return new ContactPersonAddressFluentHelper(servicePath, "A_BPContactToAddress");
    }

    @Override
    @Nonnull
    public ContactPersonAddressByKeyFluentHelper getContactPersonAddressByKey(final String bPRelationshipNo, final String businessPartner, final String businessPartner_2, final LocalDateTime validTo, final String addressNumber) {
        return new ContactPersonAddressByKeyFluentHelper(servicePath, "A_BPContactToAddress", bPRelationshipNo, businessPartner, businessPartner_2, validTo, addressNumber);
    }

    @Override
    @Nonnull
    public ContactPersonAddressCreateFluentHelper createContactPersonAddress(
        @Nonnull
        final ContactPersonAddress contactPersonAddress) {
        return new ContactPersonAddressCreateFluentHelper(servicePath, contactPersonAddress, "A_BPContactToAddress");
    }

    @Override
    @Nonnull
    public ContactPersonAddressUpdateFluentHelper updateContactPersonAddress(
        @Nonnull
        final ContactPersonAddress contactPersonAddress) {
        return new ContactPersonAddressUpdateFluentHelper(servicePath, contactPersonAddress, "A_BPContactToAddress");
    }

    @Override
    @Nonnull
    public FunctionAndDepartmentFluentHelper getAllFunctionAndDepartment() {
        return new FunctionAndDepartmentFluentHelper(servicePath, "A_BPContactToFuncAndDept");
    }

    @Override
    @Nonnull
    public FunctionAndDepartmentByKeyFluentHelper getFunctionAndDepartmentByKey(final String bPRelationshipNo, final String businessPartner, final String businessPartner_2, final LocalDateTime validTo) {
        return new FunctionAndDepartmentByKeyFluentHelper(servicePath, "A_BPContactToFuncAndDept", bPRelationshipNo, businessPartner, businessPartner_2, validTo);
    }

    @Override
    @Nonnull
    public FunctionAndDepartmentUpdateFluentHelper updateFunctionAndDepartment(
        @Nonnull
        final FunctionAndDepartment functionAndDepartment) {
        return new FunctionAndDepartmentUpdateFluentHelper(servicePath, functionAndDepartment, "A_BPContactToFuncAndDept");
    }

    @Override
    @Nonnull
    public CreditWorthinessFluentHelper getAllCreditWorthiness() {
        return new CreditWorthinessFluentHelper(servicePath, "A_BPCreditWorthiness");
    }

    @Override
    @Nonnull
    public CreditWorthinessByKeyFluentHelper getCreditWorthinessByKey(final String businessPartner) {
        return new CreditWorthinessByKeyFluentHelper(servicePath, "A_BPCreditWorthiness", businessPartner);
    }

    @Override
    @Nonnull
    public CreditWorthinessCreateFluentHelper createCreditWorthiness(
        @Nonnull
        final CreditWorthiness creditWorthiness) {
        return new CreditWorthinessCreateFluentHelper(servicePath, creditWorthiness, "A_BPCreditWorthiness");
    }

    @Override
    @Nonnull
    public CreditWorthinessUpdateFluentHelper updateCreditWorthiness(
        @Nonnull
        final CreditWorthiness creditWorthiness) {
        return new CreditWorthinessUpdateFluentHelper(servicePath, creditWorthiness, "A_BPCreditWorthiness");
    }

    @Override
    @Nonnull
    public BusinessPartnerDataControllerFluentHelper getAllBusinessPartnerDataController() {
        return new BusinessPartnerDataControllerFluentHelper(servicePath, "A_BPDataController");
    }

    @Override
    @Nonnull
    public BusinessPartnerDataControllerByKeyFluentHelper getBusinessPartnerDataControllerByKey(final String businessPartner, final String dataController, final String purpose) {
        return new BusinessPartnerDataControllerByKeyFluentHelper(servicePath, "A_BPDataController", businessPartner, dataController, purpose);
    }

    @Override
    @Nonnull
    public BusinessPartnerDataControllerCreateFluentHelper createBusinessPartnerDataController(
        @Nonnull
        final BusinessPartnerDataController businessPartnerDataController) {
        return new BusinessPartnerDataControllerCreateFluentHelper(servicePath, businessPartnerDataController, "A_BPDataController");
    }

    @Override
    @Nonnull
    public BusinessPartnerDataControllerUpdateFluentHelper updateBusinessPartnerDataController(
        @Nonnull
        final BusinessPartnerDataController businessPartnerDataController) {
        return new BusinessPartnerDataControllerUpdateFluentHelper(servicePath, businessPartnerDataController, "A_BPDataController");
    }

    @Override
    @Nonnull
    public FinancialServicesDetailsFluentHelper getAllFinancialServicesDetails() {
        return new FinancialServicesDetailsFluentHelper(servicePath, "A_BPFinancialServicesExtn");
    }

    @Override
    @Nonnull
    public FinancialServicesDetailsByKeyFluentHelper getFinancialServicesDetailsByKey(final String businessPartner) {
        return new FinancialServicesDetailsByKeyFluentHelper(servicePath, "A_BPFinancialServicesExtn", businessPartner);
    }

    @Override
    @Nonnull
    public FinancialServicesDetailsCreateFluentHelper createFinancialServicesDetails(
        @Nonnull
        final FinancialServicesDetails financialServicesDetails) {
        return new FinancialServicesDetailsCreateFluentHelper(servicePath, financialServicesDetails, "A_BPFinancialServicesExtn");
    }

    @Override
    @Nonnull
    public FinancialServicesDetailsUpdateFluentHelper updateFinancialServicesDetails(
        @Nonnull
        final FinancialServicesDetails financialServicesDetails) {
        return new FinancialServicesDetailsUpdateFluentHelper(servicePath, financialServicesDetails, "A_BPFinancialServicesExtn");
    }

    @Override
    @Nonnull
    public FinancialServicesReportingFluentHelper getAllFinancialServicesReporting() {
        return new FinancialServicesReportingFluentHelper(servicePath, "A_BPFinancialServicesReporting");
    }

    @Override
    @Nonnull
    public FinancialServicesReportingByKeyFluentHelper getFinancialServicesReportingByKey(final String businessPartner) {
        return new FinancialServicesReportingByKeyFluentHelper(servicePath, "A_BPFinancialServicesReporting", businessPartner);
    }

    @Override
    @Nonnull
    public FinancialServicesReportingCreateFluentHelper createFinancialServicesReporting(
        @Nonnull
        final FinancialServicesReporting financialServicesReporting) {
        return new FinancialServicesReportingCreateFluentHelper(servicePath, financialServicesReporting, "A_BPFinancialServicesReporting");
    }

    @Override
    @Nonnull
    public FinancialServicesReportingUpdateFluentHelper updateFinancialServicesReporting(
        @Nonnull
        final FinancialServicesReporting financialServicesReporting) {
        return new FinancialServicesReportingUpdateFluentHelper(servicePath, financialServicesReporting, "A_BPFinancialServicesReporting");
    }

    @Override
    @Nonnull
    public FiscalYearInformationFluentHelper getAllFiscalYearInformation() {
        return new FiscalYearInformationFluentHelper(servicePath, "A_BPFiscalYearInformation");
    }

    @Override
    @Nonnull
    public FiscalYearInformationByKeyFluentHelper getFiscalYearInformationByKey(final String businessPartner, final String fiscalYear) {
        return new FiscalYearInformationByKeyFluentHelper(servicePath, "A_BPFiscalYearInformation", businessPartner, fiscalYear);
    }

    @Override
    @Nonnull
    public FiscalYearInformationCreateFluentHelper createFiscalYearInformation(
        @Nonnull
        final FiscalYearInformation fiscalYearInformation) {
        return new FiscalYearInformationCreateFluentHelper(servicePath, fiscalYearInformation, "A_BPFiscalYearInformation");
    }

    @Override
    @Nonnull
    public FiscalYearInformationUpdateFluentHelper updateFiscalYearInformation(
        @Nonnull
        final FiscalYearInformation fiscalYearInformation) {
        return new FiscalYearInformationUpdateFluentHelper(servicePath, fiscalYearInformation, "A_BPFiscalYearInformation");
    }

    @Override
    @Nonnull
    public FiscalYearInformationDeleteFluentHelper deleteFiscalYearInformation(
        @Nonnull
        final FiscalYearInformation fiscalYearInformation) {
        return new FiscalYearInformationDeleteFluentHelper(servicePath, fiscalYearInformation, "A_BPFiscalYearInformation");
    }

    @Override
    @Nonnull
    public BPInternationalAddressVersionFluentHelper getAllBPInternationalAddressVersion() {
        return new BPInternationalAddressVersionFluentHelper(servicePath, "A_BPIntlAddressVersion");
    }

    @Override
    @Nonnull
    public BPInternationalAddressVersionByKeyFluentHelper getBPInternationalAddressVersionByKey(final String businessPartner, final String addressNumber, final String addressVersion) {
        return new BPInternationalAddressVersionByKeyFluentHelper(servicePath, "A_BPIntlAddressVersion", businessPartner, addressNumber, addressVersion);
    }

    @Override
    @Nonnull
    public BPInternationalAddressVersionCreateFluentHelper createBPInternationalAddressVersion(
        @Nonnull
        final BPInternationalAddressVersion bPInternationalAddressVersion) {
        return new BPInternationalAddressVersionCreateFluentHelper(servicePath, bPInternationalAddressVersion, "A_BPIntlAddressVersion");
    }

    @Override
    @Nonnull
    public BPInternationalAddressVersionUpdateFluentHelper updateBPInternationalAddressVersion(
        @Nonnull
        final BPInternationalAddressVersion bPInternationalAddressVersion) {
        return new BPInternationalAddressVersionUpdateFluentHelper(servicePath, bPInternationalAddressVersion, "A_BPIntlAddressVersion");
    }

    @Override
    @Nonnull
    public BPInternationalAddressVersionDeleteFluentHelper deleteBPInternationalAddressVersion(
        @Nonnull
        final BPInternationalAddressVersion bPInternationalAddressVersion) {
        return new BPInternationalAddressVersionDeleteFluentHelper(servicePath, bPInternationalAddressVersion, "A_BPIntlAddressVersion");
    }

    @Override
    @Nonnull
    public BusinessPartnerRelationshipFluentHelper getAllBusinessPartnerRelationship() {
        return new BusinessPartnerRelationshipFluentHelper(servicePath, "A_BPRelationship");
    }

    @Override
    @Nonnull
    public BusinessPartnerRelationshipByKeyFluentHelper getBusinessPartnerRelationshipByKey(final String bPRelationshipNo, final String businessPartner, final String businessPartner_2, final LocalDateTime validTo) {
        return new BusinessPartnerRelationshipByKeyFluentHelper(servicePath, "A_BPRelationship", bPRelationshipNo, businessPartner, businessPartner_2, validTo);
    }

    @Override
    @Nonnull
    public BusinessPartnerRelationshipCreateFluentHelper createBusinessPartnerRelationship(
        @Nonnull
        final BusinessPartnerRelationship businessPartnerRelationship) {
        return new BusinessPartnerRelationshipCreateFluentHelper(servicePath, businessPartnerRelationship, "A_BPRelationship");
    }

    @Override
    @Nonnull
    public BusinessPartnerRelationshipUpdateFluentHelper updateBusinessPartnerRelationship(
        @Nonnull
        final BusinessPartnerRelationship businessPartnerRelationship) {
        return new BusinessPartnerRelationshipUpdateFluentHelper(servicePath, businessPartnerRelationship, "A_BPRelationship");
    }

    @Override
    @Nonnull
    public BusinessPartnerRelationshipDeleteFluentHelper deleteBusinessPartnerRelationship(
        @Nonnull
        final BusinessPartnerRelationship businessPartnerRelationship) {
        return new BusinessPartnerRelationshipDeleteFluentHelper(servicePath, businessPartnerRelationship, "A_BPRelationship");
    }

    @Override
    @Nonnull
    public AddressUsageFluentHelper getAllAddressUsage() {
        return new AddressUsageFluentHelper(servicePath, "A_BuPaAddressUsage");
    }

    @Override
    @Nonnull
    public AddressUsageByKeyFluentHelper getAddressUsageByKey(final String businessPartner, final ZonedDateTime validTo, final String addressType, final String addressNumber) {
        return new AddressUsageByKeyFluentHelper(servicePath, "A_BuPaAddressUsage", businessPartner, validTo, addressType, addressNumber);
    }

    @Override
    @Nonnull
    public AddressUsageCreateFluentHelper createAddressUsage(
        @Nonnull
        final AddressUsage addressUsage) {
        return new AddressUsageCreateFluentHelper(servicePath, addressUsage, "A_BuPaAddressUsage");
    }

    @Override
    @Nonnull
    public AddressUsageUpdateFluentHelper updateAddressUsage(
        @Nonnull
        final AddressUsage addressUsage) {
        return new AddressUsageUpdateFluentHelper(servicePath, addressUsage, "A_BuPaAddressUsage");
    }

    @Override
    @Nonnull
    public AddressUsageDeleteFluentHelper deleteAddressUsage(
        @Nonnull
        final AddressUsage addressUsage) {
        return new AddressUsageDeleteFluentHelper(servicePath, addressUsage, "A_BuPaAddressUsage");
    }

    @Override
    @Nonnull
    public IdentificationFluentHelper getAllIdentification() {
        return new IdentificationFluentHelper(servicePath, "A_BuPaIdentification");
    }

    @Override
    @Nonnull
    public IdentificationByKeyFluentHelper getIdentificationByKey(final String businessPartner, final String identificationType, final String iDNumber) {
        return new IdentificationByKeyFluentHelper(servicePath, "A_BuPaIdentification", businessPartner, identificationType, iDNumber);
    }

    @Override
    @Nonnull
    public IdentificationCreateFluentHelper createIdentification(
        @Nonnull
        final Identification identification) {
        return new IdentificationCreateFluentHelper(servicePath, identification, "A_BuPaIdentification");
    }

    @Override
    @Nonnull
    public IdentificationUpdateFluentHelper updateIdentification(
        @Nonnull
        final Identification identification) {
        return new IdentificationUpdateFluentHelper(servicePath, identification, "A_BuPaIdentification");
    }

    @Override
    @Nonnull
    public IdentificationDeleteFluentHelper deleteIdentification(
        @Nonnull
        final Identification identification) {
        return new IdentificationDeleteFluentHelper(servicePath, identification, "A_BuPaIdentification");
    }

    @Override
    @Nonnull
    public IndustryFluentHelper getAllIndustry() {
        return new IndustryFluentHelper(servicePath, "A_BuPaIndustry");
    }

    @Override
    @Nonnull
    public IndustryByKeyFluentHelper getIndustryByKey(final String industry, final String industrySystem, final String businessPartner) {
        return new IndustryByKeyFluentHelper(servicePath, "A_BuPaIndustry", industry, industrySystem, businessPartner);
    }

    @Override
    @Nonnull
    public IndustryCreateFluentHelper createIndustry(
        @Nonnull
        final Industry industry) {
        return new IndustryCreateFluentHelper(servicePath, industry, "A_BuPaIndustry");
    }

    @Override
    @Nonnull
    public IndustryUpdateFluentHelper updateIndustry(
        @Nonnull
        final Industry industry) {
        return new IndustryUpdateFluentHelper(servicePath, industry, "A_BuPaIndustry");
    }

    @Override
    @Nonnull
    public IndustryDeleteFluentHelper deleteIndustry(
        @Nonnull
        final Industry industry) {
        return new IndustryDeleteFluentHelper(servicePath, industry, "A_BuPaIndustry");
    }

    @Override
    @Nonnull
    public BusinessPartnerFluentHelper getAllBusinessPartner() {
        return new BusinessPartnerFluentHelper(servicePath, "A_BusinessPartner");
    }

    @Override
    @Nonnull
    public BusinessPartnerByKeyFluentHelper getBusinessPartnerByKey(final String businessPartner) {
        return new BusinessPartnerByKeyFluentHelper(servicePath, "A_BusinessPartner", businessPartner);
    }

    @Override
    @Nonnull
    public BusinessPartnerCreateFluentHelper createBusinessPartner(
        @Nonnull
        final BusinessPartner businessPartner) {
        return new BusinessPartnerCreateFluentHelper(servicePath, businessPartner, "A_BusinessPartner");
    }

    @Override
    @Nonnull
    public BusinessPartnerUpdateFluentHelper updateBusinessPartner(
        @Nonnull
        final BusinessPartner businessPartner) {
        return new BusinessPartnerUpdateFluentHelper(servicePath, businessPartner, "A_BusinessPartner");
    }

    @Override
    @Nonnull
    public AddressFluentHelper getAllAddress() {
        return new AddressFluentHelper(servicePath, "A_BusinessPartnerAddress");
    }

    @Override
    @Nonnull
    public AddressByKeyFluentHelper getAddressByKey(final String businessPartner, final String addressNumber) {
        return new AddressByKeyFluentHelper(servicePath, "A_BusinessPartnerAddress", businessPartner, addressNumber);
    }

    @Override
    @Nonnull
    public AddressCreateFluentHelper createAddress(
        @Nonnull
        final Address address) {
        return new AddressCreateFluentHelper(servicePath, address, "A_BusinessPartnerAddress");
    }

    @Override
    @Nonnull
    public AddressUpdateFluentHelper updateAddress(
        @Nonnull
        final Address address) {
        return new AddressUpdateFluentHelper(servicePath, address, "A_BusinessPartnerAddress");
    }

    @Override
    @Nonnull
    public AddressDeleteFluentHelper deleteAddress(
        @Nonnull
        final Address address) {
        return new AddressDeleteFluentHelper(servicePath, address, "A_BusinessPartnerAddress");
    }

    @Override
    @Nonnull
    public BankFluentHelper getAllBank() {
        return new BankFluentHelper(servicePath, "A_BusinessPartnerBank");
    }

    @Override
    @Nonnull
    public BankByKeyFluentHelper getBankByKey(final String businessPartner, final String bankDetailsID) {
        return new BankByKeyFluentHelper(servicePath, "A_BusinessPartnerBank", businessPartner, bankDetailsID);
    }

    @Override
    @Nonnull
    public BankCreateFluentHelper createBank(
        @Nonnull
        final Bank bank) {
        return new BankCreateFluentHelper(servicePath, bank, "A_BusinessPartnerBank");
    }

    @Override
    @Nonnull
    public BankUpdateFluentHelper updateBank(
        @Nonnull
        final Bank bank) {
        return new BankUpdateFluentHelper(servicePath, bank, "A_BusinessPartnerBank");
    }

    @Override
    @Nonnull
    public BankDeleteFluentHelper deleteBank(
        @Nonnull
        final Bank bank) {
        return new BankDeleteFluentHelper(servicePath, bank, "A_BusinessPartnerBank");
    }

    @Override
    @Nonnull
    public ContactFluentHelper getAllContact() {
        return new ContactFluentHelper(servicePath, "A_BusinessPartnerContact");
    }

    @Override
    @Nonnull
    public ContactByKeyFluentHelper getContactByKey(final String bPRelationshipNo, final String businessPartner, final String businessPartner_2, final LocalDateTime validTo) {
        return new ContactByKeyFluentHelper(servicePath, "A_BusinessPartnerContact", bPRelationshipNo, businessPartner, businessPartner_2, validTo);
    }

    @Override
    @Nonnull
    public ContactCreateFluentHelper createContact(
        @Nonnull
        final Contact contact) {
        return new ContactCreateFluentHelper(servicePath, contact, "A_BusinessPartnerContact");
    }

    @Override
    @Nonnull
    public ContactUpdateFluentHelper updateContact(
        @Nonnull
        final Contact contact) {
        return new ContactUpdateFluentHelper(servicePath, contact, "A_BusinessPartnerContact");
    }

    @Override
    @Nonnull
    public ContactDeleteFluentHelper deleteContact(
        @Nonnull
        final Contact contact) {
        return new ContactDeleteFluentHelper(servicePath, contact, "A_BusinessPartnerContact");
    }

    @Override
    @Nonnull
    public BusinessPartnerPaymentCardFluentHelper getAllBusinessPartnerPaymentCard() {
        return new BusinessPartnerPaymentCardFluentHelper(servicePath, "A_BusinessPartnerPaymentCard");
    }

    @Override
    @Nonnull
    public BusinessPartnerPaymentCardByKeyFluentHelper getBusinessPartnerPaymentCardByKey(final String businessPartner, final String paymentCardID, final String paymentCardType, final String cardNumber) {
        return new BusinessPartnerPaymentCardByKeyFluentHelper(servicePath, "A_BusinessPartnerPaymentCard", businessPartner, paymentCardID, paymentCardType, cardNumber);
    }

    @Override
    @Nonnull
    public BusinessPartnerPaymentCardCreateFluentHelper createBusinessPartnerPaymentCard(
        @Nonnull
        final BusinessPartnerPaymentCard businessPartnerPaymentCard) {
        return new BusinessPartnerPaymentCardCreateFluentHelper(servicePath, businessPartnerPaymentCard, "A_BusinessPartnerPaymentCard");
    }

    @Override
    @Nonnull
    public BusinessPartnerPaymentCardUpdateFluentHelper updateBusinessPartnerPaymentCard(
        @Nonnull
        final BusinessPartnerPaymentCard businessPartnerPaymentCard) {
        return new BusinessPartnerPaymentCardUpdateFluentHelper(servicePath, businessPartnerPaymentCard, "A_BusinessPartnerPaymentCard");
    }

    @Override
    @Nonnull
    public BusinessPartnerPaymentCardDeleteFluentHelper deleteBusinessPartnerPaymentCard(
        @Nonnull
        final BusinessPartnerPaymentCard businessPartnerPaymentCard) {
        return new BusinessPartnerPaymentCardDeleteFluentHelper(servicePath, businessPartnerPaymentCard, "A_BusinessPartnerPaymentCard");
    }

    @Override
    @Nonnull
    public RatingsFluentHelper getAllRatings() {
        return new RatingsFluentHelper(servicePath, "A_BusinessPartnerRating");
    }

    @Override
    @Nonnull
    public RatingsByKeyFluentHelper getRatingsByKey(final String businessPartner, final String ratingProcedure, final LocalDateTime ratingValidTo) {
        return new RatingsByKeyFluentHelper(servicePath, "A_BusinessPartnerRating", businessPartner, ratingProcedure, ratingValidTo);
    }

    @Override
    @Nonnull
    public RatingsCreateFluentHelper createRatings(
        @Nonnull
        final Ratings ratings) {
        return new RatingsCreateFluentHelper(servicePath, ratings, "A_BusinessPartnerRating");
    }

    @Override
    @Nonnull
    public RatingsUpdateFluentHelper updateRatings(
        @Nonnull
        final Ratings ratings) {
        return new RatingsUpdateFluentHelper(servicePath, ratings, "A_BusinessPartnerRating");
    }

    @Override
    @Nonnull
    public RatingsDeleteFluentHelper deleteRatings(
        @Nonnull
        final Ratings ratings) {
        return new RatingsDeleteFluentHelper(servicePath, ratings, "A_BusinessPartnerRating");
    }

    @Override
    @Nonnull
    public RoleFluentHelper getAllRole() {
        return new RoleFluentHelper(servicePath, "A_BusinessPartnerRole");
    }

    @Override
    @Nonnull
    public RoleByKeyFluentHelper getRoleByKey(final String businessPartner, final String bPRole) {
        return new RoleByKeyFluentHelper(servicePath, "A_BusinessPartnerRole", businessPartner, bPRole);
    }

    @Override
    @Nonnull
    public RoleCreateFluentHelper createRole(
        @Nonnull
        final Role role) {
        return new RoleCreateFluentHelper(servicePath, role, "A_BusinessPartnerRole");
    }

    @Override
    @Nonnull
    public RoleUpdateFluentHelper updateRole(
        @Nonnull
        final Role role) {
        return new RoleUpdateFluentHelper(servicePath, role, "A_BusinessPartnerRole");
    }

    @Override
    @Nonnull
    public TaxNumberFluentHelper getAllTaxNumber() {
        return new TaxNumberFluentHelper(servicePath, "A_BusinessPartnerTaxNumber");
    }

    @Override
    @Nonnull
    public TaxNumberByKeyFluentHelper getTaxNumberByKey(final String businessPartner, final String taxNumberCategory) {
        return new TaxNumberByKeyFluentHelper(servicePath, "A_BusinessPartnerTaxNumber", businessPartner, taxNumberCategory);
    }

    @Override
    @Nonnull
    public TaxNumberCreateFluentHelper createTaxNumber(
        @Nonnull
        final TaxNumber taxNumber) {
        return new TaxNumberCreateFluentHelper(servicePath, taxNumber, "A_BusinessPartnerTaxNumber");
    }

    @Override
    @Nonnull
    public TaxNumberUpdateFluentHelper updateTaxNumber(
        @Nonnull
        final TaxNumber taxNumber) {
        return new TaxNumberUpdateFluentHelper(servicePath, taxNumber, "A_BusinessPartnerTaxNumber");
    }

    @Override
    @Nonnull
    public TaxNumberDeleteFluentHelper deleteTaxNumber(
        @Nonnull
        final TaxNumber taxNumber) {
        return new TaxNumberDeleteFluentHelper(servicePath, taxNumber, "A_BusinessPartnerTaxNumber");
    }

    @Override
    @Nonnull
    public BusinessPartnerAddressDependentTaxNumbersFluentHelper getAllBusinessPartnerAddressDependentTaxNumbers() {
        return new BusinessPartnerAddressDependentTaxNumbersFluentHelper(servicePath, "A_BusPartAddrDepdntTaxNmbr");
    }

    @Override
    @Nonnull
    public BusinessPartnerAddressDependentTaxNumbersByKeyFluentHelper getBusinessPartnerAddressDependentTaxNumbersByKey(final String businessPartner, final String addressNumber, final String taxNumberCategory) {
        return new BusinessPartnerAddressDependentTaxNumbersByKeyFluentHelper(servicePath, "A_BusPartAddrDepdntTaxNmbr", businessPartner, addressNumber, taxNumberCategory);
    }

    @Override
    @Nonnull
    public BusinessPartnerAddressDependentTaxNumbersCreateFluentHelper createBusinessPartnerAddressDependentTaxNumbers(
        @Nonnull
        final BusinessPartnerAddressDependentTaxNumbers businessPartnerAddressDependentTaxNumbers) {
        return new BusinessPartnerAddressDependentTaxNumbersCreateFluentHelper(servicePath, businessPartnerAddressDependentTaxNumbers, "A_BusPartAddrDepdntTaxNmbr");
    }

    @Override
    @Nonnull
    public BusinessPartnerAddressDependentTaxNumbersUpdateFluentHelper updateBusinessPartnerAddressDependentTaxNumbers(
        @Nonnull
        final BusinessPartnerAddressDependentTaxNumbers businessPartnerAddressDependentTaxNumbers) {
        return new BusinessPartnerAddressDependentTaxNumbersUpdateFluentHelper(servicePath, businessPartnerAddressDependentTaxNumbers, "A_BusPartAddrDepdntTaxNmbr");
    }

    @Override
    @Nonnull
    public BusinessPartnerAddressDependentTaxNumbersDeleteFluentHelper deleteBusinessPartnerAddressDependentTaxNumbers(
        @Nonnull
        final BusinessPartnerAddressDependentTaxNumbers businessPartnerAddressDependentTaxNumbers) {
        return new BusinessPartnerAddressDependentTaxNumbersDeleteFluentHelper(servicePath, businessPartnerAddressDependentTaxNumbers, "A_BusPartAddrDepdntTaxNmbr");
    }

    @Override
    @Nonnull
    public CustomerAddressDependentExternalIdentifierFluentHelper getAllCustomerAddressDependentExternalIdentifier() {
        return new CustomerAddressDependentExternalIdentifierFluentHelper(servicePath, "A_CustAddrDepdntExtIdentifier");
    }

    @Override
    @Nonnull
    public CustomerAddressDependentExternalIdentifierByKeyFluentHelper getCustomerAddressDependentExternalIdentifierByKey(final String customer, final String addressNumber) {
        return new CustomerAddressDependentExternalIdentifierByKeyFluentHelper(servicePath, "A_CustAddrDepdntExtIdentifier", customer, addressNumber);
    }

    @Override
    @Nonnull
    public CustomerAddressDependentExternalIdentifierCreateFluentHelper createCustomerAddressDependentExternalIdentifier(
        @Nonnull
        final CustomerAddressDependentExternalIdentifier customerAddressDependentExternalIdentifier) {
        return new CustomerAddressDependentExternalIdentifierCreateFluentHelper(servicePath, customerAddressDependentExternalIdentifier, "A_CustAddrDepdntExtIdentifier");
    }

    @Override
    @Nonnull
    public CustomerAddressDependentExternalIdentifierUpdateFluentHelper updateCustomerAddressDependentExternalIdentifier(
        @Nonnull
        final CustomerAddressDependentExternalIdentifier customerAddressDependentExternalIdentifier) {
        return new CustomerAddressDependentExternalIdentifierUpdateFluentHelper(servicePath, customerAddressDependentExternalIdentifier, "A_CustAddrDepdntExtIdentifier");
    }

    @Override
    @Nonnull
    public CustomerAddressDependentExternalIdentifierDeleteFluentHelper deleteCustomerAddressDependentExternalIdentifier(
        @Nonnull
        final CustomerAddressDependentExternalIdentifier customerAddressDependentExternalIdentifier) {
        return new CustomerAddressDependentExternalIdentifierDeleteFluentHelper(servicePath, customerAddressDependentExternalIdentifier, "A_CustAddrDepdntExtIdentifier");
    }

    @Override
    @Nonnull
    public CustomerAddressDependentInfomationFluentHelper getAllCustomerAddressDependentInfomation() {
        return new CustomerAddressDependentInfomationFluentHelper(servicePath, "A_CustAddrDepdntInformation");
    }

    @Override
    @Nonnull
    public CustomerAddressDependentInfomationByKeyFluentHelper getCustomerAddressDependentInfomationByKey(final String customer, final String addressNumber) {
        return new CustomerAddressDependentInfomationByKeyFluentHelper(servicePath, "A_CustAddrDepdntInformation", customer, addressNumber);
    }

    @Override
    @Nonnull
    public CustomerAddressDependentInfomationCreateFluentHelper createCustomerAddressDependentInfomation(
        @Nonnull
        final CustomerAddressDependentInfomation customerAddressDependentInfomation) {
        return new CustomerAddressDependentInfomationCreateFluentHelper(servicePath, customerAddressDependentInfomation, "A_CustAddrDepdntInformation");
    }

    @Override
    @Nonnull
    public CustomerAddressDependentInfomationUpdateFluentHelper updateCustomerAddressDependentInfomation(
        @Nonnull
        final CustomerAddressDependentInfomation customerAddressDependentInfomation) {
        return new CustomerAddressDependentInfomationUpdateFluentHelper(servicePath, customerAddressDependentInfomation, "A_CustAddrDepdntInformation");
    }

    @Override
    @Nonnull
    public CustomerAddressDependentInfomationDeleteFluentHelper deleteCustomerAddressDependentInfomation(
        @Nonnull
        final CustomerAddressDependentInfomation customerAddressDependentInfomation) {
        return new CustomerAddressDependentInfomationDeleteFluentHelper(servicePath, customerAddressDependentInfomation, "A_CustAddrDepdntInformation");
    }

    @Override
    @Nonnull
    public CustomerFluentHelper getAllCustomer() {
        return new CustomerFluentHelper(servicePath, "A_Customer");
    }

    @Override
    @Nonnull
    public CustomerByKeyFluentHelper getCustomerByKey(final String customer) {
        return new CustomerByKeyFluentHelper(servicePath, "A_Customer", customer);
    }

    @Override
    @Nonnull
    public CustomerUpdateFluentHelper updateCustomer(
        @Nonnull
        final Customer customer) {
        return new CustomerUpdateFluentHelper(servicePath, customer, "A_Customer");
    }

    @Override
    @Nonnull
    public CustomerCompanyFluentHelper getAllCustomerCompany() {
        return new CustomerCompanyFluentHelper(servicePath, "A_CustomerCompany");
    }

    @Override
    @Nonnull
    public CustomerCompanyByKeyFluentHelper getCustomerCompanyByKey(final String customer, final String companyCode) {
        return new CustomerCompanyByKeyFluentHelper(servicePath, "A_CustomerCompany", customer, companyCode);
    }

    @Override
    @Nonnull
    public CustomerCompanyCreateFluentHelper createCustomerCompany(
        @Nonnull
        final CustomerCompany customerCompany) {
        return new CustomerCompanyCreateFluentHelper(servicePath, customerCompany, "A_CustomerCompany");
    }

    @Override
    @Nonnull
    public CustomerCompanyUpdateFluentHelper updateCustomerCompany(
        @Nonnull
        final CustomerCompany customerCompany) {
        return new CustomerCompanyUpdateFluentHelper(servicePath, customerCompany, "A_CustomerCompany");
    }

    @Override
    @Nonnull
    public CustomerCompanyTextFluentHelper getAllCustomerCompanyText() {
        return new CustomerCompanyTextFluentHelper(servicePath, "A_CustomerCompanyText");
    }

    @Override
    @Nonnull
    public CustomerCompanyTextByKeyFluentHelper getCustomerCompanyTextByKey(final String customer, final String companyCode, final String language, final String textID) {
        return new CustomerCompanyTextByKeyFluentHelper(servicePath, "A_CustomerCompanyText", customer, companyCode, language, textID);
    }

    @Override
    @Nonnull
    public CustomerCompanyTextCreateFluentHelper createCustomerCompanyText(
        @Nonnull
        final CustomerCompanyText customerCompanyText) {
        return new CustomerCompanyTextCreateFluentHelper(servicePath, customerCompanyText, "A_CustomerCompanyText");
    }

    @Override
    @Nonnull
    public CustomerCompanyTextUpdateFluentHelper updateCustomerCompanyText(
        @Nonnull
        final CustomerCompanyText customerCompanyText) {
        return new CustomerCompanyTextUpdateFluentHelper(servicePath, customerCompanyText, "A_CustomerCompanyText");
    }

    @Override
    @Nonnull
    public CustomerCompanyTextDeleteFluentHelper deleteCustomerCompanyText(
        @Nonnull
        final CustomerCompanyText customerCompanyText) {
        return new CustomerCompanyTextDeleteFluentHelper(servicePath, customerCompanyText, "A_CustomerCompanyText");
    }

    @Override
    @Nonnull
    public CustomerDunningFluentHelper getAllCustomerDunning() {
        return new CustomerDunningFluentHelper(servicePath, "A_CustomerDunning");
    }

    @Override
    @Nonnull
    public CustomerDunningByKeyFluentHelper getCustomerDunningByKey(final String customer, final String companyCode, final String dunningArea) {
        return new CustomerDunningByKeyFluentHelper(servicePath, "A_CustomerDunning", customer, companyCode, dunningArea);
    }

    @Override
    @Nonnull
    public CustomerDunningCreateFluentHelper createCustomerDunning(
        @Nonnull
        final CustomerDunning customerDunning) {
        return new CustomerDunningCreateFluentHelper(servicePath, customerDunning, "A_CustomerDunning");
    }

    @Override
    @Nonnull
    public CustomerDunningUpdateFluentHelper updateCustomerDunning(
        @Nonnull
        final CustomerDunning customerDunning) {
        return new CustomerDunningUpdateFluentHelper(servicePath, customerDunning, "A_CustomerDunning");
    }

    @Override
    @Nonnull
    public CustomerDunningDeleteFluentHelper deleteCustomerDunning(
        @Nonnull
        final CustomerDunning customerDunning) {
        return new CustomerDunningDeleteFluentHelper(servicePath, customerDunning, "A_CustomerDunning");
    }

    @Override
    @Nonnull
    public SalesAreaFluentHelper getAllSalesArea() {
        return new SalesAreaFluentHelper(servicePath, "A_CustomerSalesArea");
    }

    @Override
    @Nonnull
    public SalesAreaByKeyFluentHelper getSalesAreaByKey(final String customer, final String salesOrganization, final String distributionChannel, final String division) {
        return new SalesAreaByKeyFluentHelper(servicePath, "A_CustomerSalesArea", customer, salesOrganization, distributionChannel, division);
    }

    @Override
    @Nonnull
    public SalesAreaCreateFluentHelper createSalesArea(
        @Nonnull
        final SalesArea salesArea) {
        return new SalesAreaCreateFluentHelper(servicePath, salesArea, "A_CustomerSalesArea");
    }

    @Override
    @Nonnull
    public SalesAreaUpdateFluentHelper updateSalesArea(
        @Nonnull
        final SalesArea salesArea) {
        return new SalesAreaUpdateFluentHelper(servicePath, salesArea, "A_CustomerSalesArea");
    }

    @Override
    @Nonnull
    public SalesAreaTaxFluentHelper getAllSalesAreaTax() {
        return new SalesAreaTaxFluentHelper(servicePath, "A_CustomerSalesAreaTax");
    }

    @Override
    @Nonnull
    public SalesAreaTaxByKeyFluentHelper getSalesAreaTaxByKey(final String customer, final String salesOrganization, final String refDistChCustMat, final String division, final String departureCtryReg, final String taxConditionType) {
        return new SalesAreaTaxByKeyFluentHelper(servicePath, "A_CustomerSalesAreaTax", customer, salesOrganization, refDistChCustMat, division, departureCtryReg, taxConditionType);
    }

    @Override
    @Nonnull
    public SalesAreaTaxCreateFluentHelper createSalesAreaTax(
        @Nonnull
        final SalesAreaTax salesAreaTax) {
        return new SalesAreaTaxCreateFluentHelper(servicePath, salesAreaTax, "A_CustomerSalesAreaTax");
    }

    @Override
    @Nonnull
    public SalesAreaTaxUpdateFluentHelper updateSalesAreaTax(
        @Nonnull
        final SalesAreaTax salesAreaTax) {
        return new SalesAreaTaxUpdateFluentHelper(servicePath, salesAreaTax, "A_CustomerSalesAreaTax");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaTextFluentHelper getAllCustomerSalesAreaText() {
        return new CustomerSalesAreaTextFluentHelper(servicePath, "A_CustomerSalesAreaText");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaTextByKeyFluentHelper getCustomerSalesAreaTextByKey(final String customer, final String salesOrganization, final String distributionChannel, final String division, final String language, final String textID) {
        return new CustomerSalesAreaTextByKeyFluentHelper(servicePath, "A_CustomerSalesAreaText", customer, salesOrganization, distributionChannel, division, language, textID);
    }

    @Override
    @Nonnull
    public CustomerSalesAreaTextCreateFluentHelper createCustomerSalesAreaText(
        @Nonnull
        final CustomerSalesAreaText customerSalesAreaText) {
        return new CustomerSalesAreaTextCreateFluentHelper(servicePath, customerSalesAreaText, "A_CustomerSalesAreaText");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaTextUpdateFluentHelper updateCustomerSalesAreaText(
        @Nonnull
        final CustomerSalesAreaText customerSalesAreaText) {
        return new CustomerSalesAreaTextUpdateFluentHelper(servicePath, customerSalesAreaText, "A_CustomerSalesAreaText");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaTextDeleteFluentHelper deleteCustomerSalesAreaText(
        @Nonnull
        final CustomerSalesAreaText customerSalesAreaText) {
        return new CustomerSalesAreaTextDeleteFluentHelper(servicePath, customerSalesAreaText, "A_CustomerSalesAreaText");
    }

    @Override
    @Nonnull
    public CustomerTaxGroupingFluentHelper getAllCustomerTaxGrouping() {
        return new CustomerTaxGroupingFluentHelper(servicePath, "A_CustomerTaxGrouping");
    }

    @Override
    @Nonnull
    public CustomerTaxGroupingByKeyFluentHelper getCustomerTaxGroupingByKey(final String customer, final String taxCategory) {
        return new CustomerTaxGroupingByKeyFluentHelper(servicePath, "A_CustomerTaxGrouping", customer, taxCategory);
    }

    @Override
    @Nonnull
    public CustomerTaxGroupingUpdateFluentHelper updateCustomerTaxGrouping(
        @Nonnull
        final CustomerTaxGrouping customerTaxGrouping) {
        return new CustomerTaxGroupingUpdateFluentHelper(servicePath, customerTaxGrouping, "A_CustomerTaxGrouping");
    }

    @Override
    @Nonnull
    public CustomerTaxGroupingDeleteFluentHelper deleteCustomerTaxGrouping(
        @Nonnull
        final CustomerTaxGrouping customerTaxGrouping) {
        return new CustomerTaxGroupingDeleteFluentHelper(servicePath, customerTaxGrouping, "A_CustomerTaxGrouping");
    }

    @Override
    @Nonnull
    public CustomerTextFluentHelper getAllCustomerText() {
        return new CustomerTextFluentHelper(servicePath, "A_CustomerText");
    }

    @Override
    @Nonnull
    public CustomerTextByKeyFluentHelper getCustomerTextByKey(final String customer, final String language, final String textID) {
        return new CustomerTextByKeyFluentHelper(servicePath, "A_CustomerText", customer, language, textID);
    }

    @Override
    @Nonnull
    public CustomerTextCreateFluentHelper createCustomerText(
        @Nonnull
        final CustomerText customerText) {
        return new CustomerTextCreateFluentHelper(servicePath, customerText, "A_CustomerText");
    }

    @Override
    @Nonnull
    public CustomerTextUpdateFluentHelper updateCustomerText(
        @Nonnull
        final CustomerText customerText) {
        return new CustomerTextUpdateFluentHelper(servicePath, customerText, "A_CustomerText");
    }

    @Override
    @Nonnull
    public CustomerTextDeleteFluentHelper deleteCustomerText(
        @Nonnull
        final CustomerText customerText) {
        return new CustomerTextDeleteFluentHelper(servicePath, customerText, "A_CustomerText");
    }

    @Override
    @Nonnull
    public CustomerUnloadingPointFluentHelper getAllCustomerUnloadingPoint() {
        return new CustomerUnloadingPointFluentHelper(servicePath, "A_CustomerUnloadingPoint");
    }

    @Override
    @Nonnull
    public CustomerUnloadingPointByKeyFluentHelper getCustomerUnloadingPointByKey(final String customer, final String unloadingPoint) {
        return new CustomerUnloadingPointByKeyFluentHelper(servicePath, "A_CustomerUnloadingPoint", customer, unloadingPoint);
    }

    @Override
    @Nonnull
    public CustomerUnloadingPointCreateFluentHelper createCustomerUnloadingPoint(
        @Nonnull
        final CustomerUnloadingPoint customerUnloadingPoint) {
        return new CustomerUnloadingPointCreateFluentHelper(servicePath, customerUnloadingPoint, "A_CustomerUnloadingPoint");
    }

    @Override
    @Nonnull
    public CustomerUnloadingPointUpdateFluentHelper updateCustomerUnloadingPoint(
        @Nonnull
        final CustomerUnloadingPoint customerUnloadingPoint) {
        return new CustomerUnloadingPointUpdateFluentHelper(servicePath, customerUnloadingPoint, "A_CustomerUnloadingPoint");
    }

    @Override
    @Nonnull
    public CustomerUnloadingPointDeleteFluentHelper deleteCustomerUnloadingPoint(
        @Nonnull
        final CustomerUnloadingPoint customerUnloadingPoint) {
        return new CustomerUnloadingPointDeleteFluentHelper(servicePath, customerUnloadingPoint, "A_CustomerUnloadingPoint");
    }

    @Override
    @Nonnull
    public WithholdingTaxFluentHelper getAllWithholdingTax() {
        return new WithholdingTaxFluentHelper(servicePath, "A_CustomerWithHoldingTax");
    }

    @Override
    @Nonnull
    public WithholdingTaxByKeyFluentHelper getWithholdingTaxByKey(final String customer, final String companyCode, final String withholdingTaxType) {
        return new WithholdingTaxByKeyFluentHelper(servicePath, "A_CustomerWithHoldingTax", customer, companyCode, withholdingTaxType);
    }

    @Override
    @Nonnull
    public WithholdingTaxCreateFluentHelper createWithholdingTax(
        @Nonnull
        final WithholdingTax withholdingTax) {
        return new WithholdingTaxCreateFluentHelper(servicePath, withholdingTax, "A_CustomerWithHoldingTax");
    }

    @Override
    @Nonnull
    public WithholdingTaxUpdateFluentHelper updateWithholdingTax(
        @Nonnull
        final WithholdingTax withholdingTax) {
        return new WithholdingTaxUpdateFluentHelper(servicePath, withholdingTax, "A_CustomerWithHoldingTax");
    }

    @Override
    @Nonnull
    public WithholdingTaxDeleteFluentHelper deleteWithholdingTax(
        @Nonnull
        final WithholdingTax withholdingTax) {
        return new WithholdingTaxDeleteFluentHelper(servicePath, withholdingTax, "A_CustomerWithHoldingTax");
    }

    @Override
    @Nonnull
    public SalesPartnerFunctionsFluentHelper getAllSalesPartnerFunctions() {
        return new SalesPartnerFunctionsFluentHelper(servicePath, "A_CustSalesPartnerFunc");
    }

    @Override
    @Nonnull
    public SalesPartnerFunctionsByKeyFluentHelper getSalesPartnerFunctionsByKey(final String customer, final String salesOrganization, final String distributionChannel, final String division, final String partnerCounter, final String partnerFunction) {
        return new SalesPartnerFunctionsByKeyFluentHelper(servicePath, "A_CustSalesPartnerFunc", customer, salesOrganization, distributionChannel, division, partnerCounter, partnerFunction);
    }

    @Override
    @Nonnull
    public SalesPartnerFunctionsCreateFluentHelper createSalesPartnerFunctions(
        @Nonnull
        final SalesPartnerFunctions salesPartnerFunctions) {
        return new SalesPartnerFunctionsCreateFluentHelper(servicePath, salesPartnerFunctions, "A_CustSalesPartnerFunc");
    }

    @Override
    @Nonnull
    public SalesPartnerFunctionsUpdateFluentHelper updateSalesPartnerFunctions(
        @Nonnull
        final SalesPartnerFunctions salesPartnerFunctions) {
        return new SalesPartnerFunctionsUpdateFluentHelper(servicePath, salesPartnerFunctions, "A_CustSalesPartnerFunc");
    }

    @Override
    @Nonnull
    public SalesPartnerFunctionsDeleteFluentHelper deleteSalesPartnerFunctions(
        @Nonnull
        final SalesPartnerFunctions salesPartnerFunctions) {
        return new SalesPartnerFunctionsDeleteFluentHelper(servicePath, salesPartnerFunctions, "A_CustSalesPartnerFunc");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaAddressDependentInformationFluentHelper getAllCustomerSalesAreaAddressDependentInformation() {
        return new CustomerSalesAreaAddressDependentInformationFluentHelper(servicePath, "A_CustSlsAreaAddrDepdntInfo");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaAddressDependentInformationByKeyFluentHelper getCustomerSalesAreaAddressDependentInformationByKey(final String customer, final String salesOrganization, final String distributionChannel, final String division, final String addressNumber) {
        return new CustomerSalesAreaAddressDependentInformationByKeyFluentHelper(servicePath, "A_CustSlsAreaAddrDepdntInfo", customer, salesOrganization, distributionChannel, division, addressNumber);
    }

    @Override
    @Nonnull
    public CustomerSalesAreaAddressDependentInformationCreateFluentHelper createCustomerSalesAreaAddressDependentInformation(
        @Nonnull
        final CustomerSalesAreaAddressDependentInformation customerSalesAreaAddressDependentInformation) {
        return new CustomerSalesAreaAddressDependentInformationCreateFluentHelper(servicePath, customerSalesAreaAddressDependentInformation, "A_CustSlsAreaAddrDepdntInfo");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaAddressDependentInformationUpdateFluentHelper updateCustomerSalesAreaAddressDependentInformation(
        @Nonnull
        final CustomerSalesAreaAddressDependentInformation customerSalesAreaAddressDependentInformation) {
        return new CustomerSalesAreaAddressDependentInformationUpdateFluentHelper(servicePath, customerSalesAreaAddressDependentInformation, "A_CustSlsAreaAddrDepdntInfo");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaAddressDependentInformationDeleteFluentHelper deleteCustomerSalesAreaAddressDependentInformation(
        @Nonnull
        final CustomerSalesAreaAddressDependentInformation customerSalesAreaAddressDependentInformation) {
        return new CustomerSalesAreaAddressDependentInformationDeleteFluentHelper(servicePath, customerSalesAreaAddressDependentInformation, "A_CustSlsAreaAddrDepdntInfo");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaAddressDependentTaxInfoFluentHelper getAllCustomerSalesAreaAddressDependentTaxInfo() {
        return new CustomerSalesAreaAddressDependentTaxInfoFluentHelper(servicePath, "A_CustSlsAreaAddrDepdntTaxInfo");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaAddressDependentTaxInfoByKeyFluentHelper getCustomerSalesAreaAddressDependentTaxInfoByKey(final String customer, final String salesOrganization, final String refDistChCustMat, final String division, final String addressNumber, final String departureCtryReg, final String taxConditionType) {
        return new CustomerSalesAreaAddressDependentTaxInfoByKeyFluentHelper(servicePath, "A_CustSlsAreaAddrDepdntTaxInfo", customer, salesOrganization, refDistChCustMat, division, addressNumber, departureCtryReg, taxConditionType);
    }

    @Override
    @Nonnull
    public CustomerSalesAreaAddressDependentTaxInfoCreateFluentHelper createCustomerSalesAreaAddressDependentTaxInfo(
        @Nonnull
        final CustomerSalesAreaAddressDependentTaxInfo customerSalesAreaAddressDependentTaxInfo) {
        return new CustomerSalesAreaAddressDependentTaxInfoCreateFluentHelper(servicePath, customerSalesAreaAddressDependentTaxInfo, "A_CustSlsAreaAddrDepdntTaxInfo");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaAddressDependentTaxInfoUpdateFluentHelper updateCustomerSalesAreaAddressDependentTaxInfo(
        @Nonnull
        final CustomerSalesAreaAddressDependentTaxInfo customerSalesAreaAddressDependentTaxInfo) {
        return new CustomerSalesAreaAddressDependentTaxInfoUpdateFluentHelper(servicePath, customerSalesAreaAddressDependentTaxInfo, "A_CustSlsAreaAddrDepdntTaxInfo");
    }

    @Override
    @Nonnull
    public CustomerSalesAreaAddressDependentTaxInfoDeleteFluentHelper deleteCustomerSalesAreaAddressDependentTaxInfo(
        @Nonnull
        final CustomerSalesAreaAddressDependentTaxInfo customerSalesAreaAddressDependentTaxInfo) {
        return new CustomerSalesAreaAddressDependentTaxInfoDeleteFluentHelper(servicePath, customerSalesAreaAddressDependentTaxInfo, "A_CustSlsAreaAddrDepdntTaxInfo");
    }

    @Override
    @Nonnull
    public CustomerUnloadingPointAddressDependentInformationFluentHelper getAllCustomerUnloadingPointAddressDependentInformation() {
        return new CustomerUnloadingPointAddressDependentInformationFluentHelper(servicePath, "A_CustUnldgPtAddrDepdntInfo");
    }

    @Override
    @Nonnull
    public CustomerUnloadingPointAddressDependentInformationByKeyFluentHelper getCustomerUnloadingPointAddressDependentInformationByKey(final String customer, final String addressNumber, final String unloadingPoint) {
        return new CustomerUnloadingPointAddressDependentInformationByKeyFluentHelper(servicePath, "A_CustUnldgPtAddrDepdntInfo", customer, addressNumber, unloadingPoint);
    }

    @Override
    @Nonnull
    public CustomerUnloadingPointAddressDependentInformationCreateFluentHelper createCustomerUnloadingPointAddressDependentInformation(
        @Nonnull
        final CustomerUnloadingPointAddressDependentInformation customerUnloadingPointAddressDependentInformation) {
        return new CustomerUnloadingPointAddressDependentInformationCreateFluentHelper(servicePath, customerUnloadingPointAddressDependentInformation, "A_CustUnldgPtAddrDepdntInfo");
    }

    @Override
    @Nonnull
    public CustomerUnloadingPointAddressDependentInformationUpdateFluentHelper updateCustomerUnloadingPointAddressDependentInformation(
        @Nonnull
        final CustomerUnloadingPointAddressDependentInformation customerUnloadingPointAddressDependentInformation) {
        return new CustomerUnloadingPointAddressDependentInformationUpdateFluentHelper(servicePath, customerUnloadingPointAddressDependentInformation, "A_CustUnldgPtAddrDepdntInfo");
    }

    @Override
    @Nonnull
    public CustomerUnloadingPointAddressDependentInformationDeleteFluentHelper deleteCustomerUnloadingPointAddressDependentInformation(
        @Nonnull
        final CustomerUnloadingPointAddressDependentInformation customerUnloadingPointAddressDependentInformation) {
        return new CustomerUnloadingPointAddressDependentInformationDeleteFluentHelper(servicePath, customerUnloadingPointAddressDependentInformation, "A_CustUnldgPtAddrDepdntInfo");
    }

    @Override
    @Nonnull
    public SupplierFluentHelper getAllSupplier() {
        return new SupplierFluentHelper(servicePath, "A_Supplier");
    }

    @Override
    @Nonnull
    public SupplierByKeyFluentHelper getSupplierByKey(final String supplier) {
        return new SupplierByKeyFluentHelper(servicePath, "A_Supplier", supplier);
    }

    @Override
    @Nonnull
    public SupplierUpdateFluentHelper updateSupplier(
        @Nonnull
        final Supplier supplier) {
        return new SupplierUpdateFluentHelper(servicePath, supplier, "A_Supplier");
    }

    @Override
    @Nonnull
    public SupplierCompanyFluentHelper getAllSupplierCompany() {
        return new SupplierCompanyFluentHelper(servicePath, "A_SupplierCompany");
    }

    @Override
    @Nonnull
    public SupplierCompanyByKeyFluentHelper getSupplierCompanyByKey(final String supplier, final String companyCode) {
        return new SupplierCompanyByKeyFluentHelper(servicePath, "A_SupplierCompany", supplier, companyCode);
    }

    @Override
    @Nonnull
    public SupplierCompanyCreateFluentHelper createSupplierCompany(
        @Nonnull
        final SupplierCompany supplierCompany) {
        return new SupplierCompanyCreateFluentHelper(servicePath, supplierCompany, "A_SupplierCompany");
    }

    @Override
    @Nonnull
    public SupplierCompanyUpdateFluentHelper updateSupplierCompany(
        @Nonnull
        final SupplierCompany supplierCompany) {
        return new SupplierCompanyUpdateFluentHelper(servicePath, supplierCompany, "A_SupplierCompany");
    }

    @Override
    @Nonnull
    public SupplierCompanyTextFluentHelper getAllSupplierCompanyText() {
        return new SupplierCompanyTextFluentHelper(servicePath, "A_SupplierCompanyText");
    }

    @Override
    @Nonnull
    public SupplierCompanyTextByKeyFluentHelper getSupplierCompanyTextByKey(final String supplier, final String companyCode, final String language, final String textID) {
        return new SupplierCompanyTextByKeyFluentHelper(servicePath, "A_SupplierCompanyText", supplier, companyCode, language, textID);
    }

    @Override
    @Nonnull
    public SupplierCompanyTextCreateFluentHelper createSupplierCompanyText(
        @Nonnull
        final SupplierCompanyText supplierCompanyText) {
        return new SupplierCompanyTextCreateFluentHelper(servicePath, supplierCompanyText, "A_SupplierCompanyText");
    }

    @Override
    @Nonnull
    public SupplierCompanyTextUpdateFluentHelper updateSupplierCompanyText(
        @Nonnull
        final SupplierCompanyText supplierCompanyText) {
        return new SupplierCompanyTextUpdateFluentHelper(servicePath, supplierCompanyText, "A_SupplierCompanyText");
    }

    @Override
    @Nonnull
    public SupplierCompanyTextDeleteFluentHelper deleteSupplierCompanyText(
        @Nonnull
        final SupplierCompanyText supplierCompanyText) {
        return new SupplierCompanyTextDeleteFluentHelper(servicePath, supplierCompanyText, "A_SupplierCompanyText");
    }

    @Override
    @Nonnull
    public SupplierDunningFluentHelper getAllSupplierDunning() {
        return new SupplierDunningFluentHelper(servicePath, "A_SupplierDunning");
    }

    @Override
    @Nonnull
    public SupplierDunningByKeyFluentHelper getSupplierDunningByKey(final String supplier, final String companyCode, final String dunningArea) {
        return new SupplierDunningByKeyFluentHelper(servicePath, "A_SupplierDunning", supplier, companyCode, dunningArea);
    }

    @Override
    @Nonnull
    public SupplierDunningCreateFluentHelper createSupplierDunning(
        @Nonnull
        final SupplierDunning supplierDunning) {
        return new SupplierDunningCreateFluentHelper(servicePath, supplierDunning, "A_SupplierDunning");
    }

    @Override
    @Nonnull
    public SupplierDunningUpdateFluentHelper updateSupplierDunning(
        @Nonnull
        final SupplierDunning supplierDunning) {
        return new SupplierDunningUpdateFluentHelper(servicePath, supplierDunning, "A_SupplierDunning");
    }

    @Override
    @Nonnull
    public SupplierDunningDeleteFluentHelper deleteSupplierDunning(
        @Nonnull
        final SupplierDunning supplierDunning) {
        return new SupplierDunningDeleteFluentHelper(servicePath, supplierDunning, "A_SupplierDunning");
    }

    @Override
    @Nonnull
    public PurchasingPartnerFunctionsFluentHelper getAllPurchasingPartnerFunctions() {
        return new PurchasingPartnerFunctionsFluentHelper(servicePath, "A_SupplierPartnerFunc");
    }

    @Override
    @Nonnull
    public PurchasingPartnerFunctionsByKeyFluentHelper getPurchasingPartnerFunctionsByKey(final String supplier, final String purchOrganization, final String supplierSubrange, final String plant, final String partnerFunction, final String partnerCounter) {
        return new PurchasingPartnerFunctionsByKeyFluentHelper(servicePath, "A_SupplierPartnerFunc", supplier, purchOrganization, supplierSubrange, plant, partnerFunction, partnerCounter);
    }

    @Override
    @Nonnull
    public PurchasingPartnerFunctionsCreateFluentHelper createPurchasingPartnerFunctions(
        @Nonnull
        final PurchasingPartnerFunctions purchasingPartnerFunctions) {
        return new PurchasingPartnerFunctionsCreateFluentHelper(servicePath, purchasingPartnerFunctions, "A_SupplierPartnerFunc");
    }

    @Override
    @Nonnull
    public PurchasingPartnerFunctionsUpdateFluentHelper updatePurchasingPartnerFunctions(
        @Nonnull
        final PurchasingPartnerFunctions purchasingPartnerFunctions) {
        return new PurchasingPartnerFunctionsUpdateFluentHelper(servicePath, purchasingPartnerFunctions, "A_SupplierPartnerFunc");
    }

    @Override
    @Nonnull
    public PurchasingPartnerFunctionsDeleteFluentHelper deletePurchasingPartnerFunctions(
        @Nonnull
        final PurchasingPartnerFunctions purchasingPartnerFunctions) {
        return new PurchasingPartnerFunctionsDeleteFluentHelper(servicePath, purchasingPartnerFunctions, "A_SupplierPartnerFunc");
    }

    @Override
    @Nonnull
    public PurchasingOrganizationFluentHelper getAllPurchasingOrganization() {
        return new PurchasingOrganizationFluentHelper(servicePath, "A_SupplierPurchasingOrg");
    }

    @Override
    @Nonnull
    public PurchasingOrganizationByKeyFluentHelper getPurchasingOrganizationByKey(final String supplier, final String purchOrganization) {
        return new PurchasingOrganizationByKeyFluentHelper(servicePath, "A_SupplierPurchasingOrg", supplier, purchOrganization);
    }

    @Override
    @Nonnull
    public PurchasingOrganizationCreateFluentHelper createPurchasingOrganization(
        @Nonnull
        final PurchasingOrganization purchasingOrganization) {
        return new PurchasingOrganizationCreateFluentHelper(servicePath, purchasingOrganization, "A_SupplierPurchasingOrg");
    }

    @Override
    @Nonnull
    public PurchasingOrganizationUpdateFluentHelper updatePurchasingOrganization(
        @Nonnull
        final PurchasingOrganization purchasingOrganization) {
        return new PurchasingOrganizationUpdateFluentHelper(servicePath, purchasingOrganization, "A_SupplierPurchasingOrg");
    }

    @Override
    @Nonnull
    public PurchasingOrganizationTextFluentHelper getAllPurchasingOrganizationText() {
        return new PurchasingOrganizationTextFluentHelper(servicePath, "A_SupplierPurchasingOrgText");
    }

    @Override
    @Nonnull
    public PurchasingOrganizationTextByKeyFluentHelper getPurchasingOrganizationTextByKey(final String supplier, final String purchOrganization, final String language, final String textID) {
        return new PurchasingOrganizationTextByKeyFluentHelper(servicePath, "A_SupplierPurchasingOrgText", supplier, purchOrganization, language, textID);
    }

    @Override
    @Nonnull
    public PurchasingOrganizationTextCreateFluentHelper createPurchasingOrganizationText(
        @Nonnull
        final PurchasingOrganizationText purchasingOrganizationText) {
        return new PurchasingOrganizationTextCreateFluentHelper(servicePath, purchasingOrganizationText, "A_SupplierPurchasingOrgText");
    }

    @Override
    @Nonnull
    public PurchasingOrganizationTextUpdateFluentHelper updatePurchasingOrganizationText(
        @Nonnull
        final PurchasingOrganizationText purchasingOrganizationText) {
        return new PurchasingOrganizationTextUpdateFluentHelper(servicePath, purchasingOrganizationText, "A_SupplierPurchasingOrgText");
    }

    @Override
    @Nonnull
    public PurchasingOrganizationTextDeleteFluentHelper deletePurchasingOrganizationText(
        @Nonnull
        final PurchasingOrganizationText purchasingOrganizationText) {
        return new PurchasingOrganizationTextDeleteFluentHelper(servicePath, purchasingOrganizationText, "A_SupplierPurchasingOrgText");
    }

    @Override
    @Nonnull
    public SupplierTextFluentHelper getAllSupplierText() {
        return new SupplierTextFluentHelper(servicePath, "A_SupplierText");
    }

    @Override
    @Nonnull
    public SupplierTextByKeyFluentHelper getSupplierTextByKey(final String supplier, final String language, final String textID) {
        return new SupplierTextByKeyFluentHelper(servicePath, "A_SupplierText", supplier, language, textID);
    }

    @Override
    @Nonnull
    public SupplierTextCreateFluentHelper createSupplierText(
        @Nonnull
        final SupplierText supplierText) {
        return new SupplierTextCreateFluentHelper(servicePath, supplierText, "A_SupplierText");
    }

    @Override
    @Nonnull
    public SupplierTextUpdateFluentHelper updateSupplierText(
        @Nonnull
        final SupplierText supplierText) {
        return new SupplierTextUpdateFluentHelper(servicePath, supplierText, "A_SupplierText");
    }

    @Override
    @Nonnull
    public SupplierTextDeleteFluentHelper deleteSupplierText(
        @Nonnull
        final SupplierText supplierText) {
        return new SupplierTextDeleteFluentHelper(servicePath, supplierText, "A_SupplierText");
    }

    @Override
    @Nonnull
    public CompanyWithholdingTaxFluentHelper getAllCompanyWithholdingTax() {
        return new CompanyWithholdingTaxFluentHelper(servicePath, "A_SupplierWithHoldingTax");
    }

    @Override
    @Nonnull
    public CompanyWithholdingTaxByKeyFluentHelper getCompanyWithholdingTaxByKey(final String supplier, final String companyCode, final String withholdingTaxType) {
        return new CompanyWithholdingTaxByKeyFluentHelper(servicePath, "A_SupplierWithHoldingTax", supplier, companyCode, withholdingTaxType);
    }

    @Override
    @Nonnull
    public CompanyWithholdingTaxCreateFluentHelper createCompanyWithholdingTax(
        @Nonnull
        final CompanyWithholdingTax companyWithholdingTax) {
        return new CompanyWithholdingTaxCreateFluentHelper(servicePath, companyWithholdingTax, "A_SupplierWithHoldingTax");
    }

    @Override
    @Nonnull
    public CompanyWithholdingTaxUpdateFluentHelper updateCompanyWithholdingTax(
        @Nonnull
        final CompanyWithholdingTax companyWithholdingTax) {
        return new CompanyWithholdingTaxUpdateFluentHelper(servicePath, companyWithholdingTax, "A_SupplierWithHoldingTax");
    }

    @Override
    @Nonnull
    public CompanyWithholdingTaxDeleteFluentHelper deleteCompanyWithholdingTax(
        @Nonnull
        final CompanyWithholdingTax companyWithholdingTax) {
        return new CompanyWithholdingTaxDeleteFluentHelper(servicePath, companyWithholdingTax, "A_SupplierWithHoldingTax");
    }

}
