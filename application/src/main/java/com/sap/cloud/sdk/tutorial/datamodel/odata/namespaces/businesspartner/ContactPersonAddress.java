
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.1.0
 */

package com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.sap.cloud.sdk.cloudplatform.connectivity.Destination;
import com.sap.cloud.sdk.datamodel.odata.client.exception.ODataException;
import com.sap.cloud.sdk.datamodel.odata.helper.VdmEntity;
import com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataField;
import com.sap.cloud.sdk.s4hana.datamodel.odata.annotation.Key;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.field.ContactPersonAddressField;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.link.ContactPersonAddressLink;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.selectable.ContactPersonAddressSelectable;
import com.sap.cloud.sdk.typeconverter.TypeConverter;
import io.vavr.control.Option;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;


/**
 * Contact Person Address<p></p><p>Original entity name from the Odata EDM: <b>A_BPContactToAddressType</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataVdmEntityAdapterFactory.class)
public class ContactPersonAddress
    extends VdmEntity<ContactPersonAddress>
{

    /**
     * Selector for all available fields of ContactPersonAddress.
     * 
     */
    public final static ContactPersonAddressSelectable ALL_FIELDS = () -> "*";
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>RelationshipNumber</b></p>
     * 
     * @return
     *     BP Relationship Number
     */
    @Key
    @SerializedName("RelationshipNumber")
    @JsonProperty("RelationshipNumber")
    @Nullable
    @ODataField(odataName = "RelationshipNumber")
    private String bPRelationshipNo;
    /**
     * Use with available fluent helpers to apply the <b>RelationshipNumber</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> BP_RELATIONSHIP_NO = new ContactPersonAddressField<String>("RelationshipNumber");
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartnerCompany</b></p>
     * 
     * @return
     *     Business Partner Number
     */
    @Key
    @SerializedName("BusinessPartnerCompany")
    @JsonProperty("BusinessPartnerCompany")
    @Nullable
    @ODataField(odataName = "BusinessPartnerCompany")
    private String businessPartner;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerCompany</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> BUSINESS_PARTNER = new ContactPersonAddressField<String>("BusinessPartnerCompany");
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartnerPerson</b></p>
     * 
     * @return
     *     Business Partner Number
     */
    @Key
    @SerializedName("BusinessPartnerPerson")
    @JsonProperty("BusinessPartnerPerson")
    @Nullable
    @ODataField(odataName = "BusinessPartnerPerson")
    private String businessPartner_2;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerPerson</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> BUSINESS_PARTNER_2 = new ContactPersonAddressField<String>("BusinessPartnerPerson");
    /**
     * (Key Field) Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>ValidityEndDate</b></p>
     * 
     * @return
     *     Validity Date (Valid To)
     */
    @Key
    @SerializedName("ValidityEndDate")
    @JsonProperty("ValidityEndDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "ValidityEndDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime validTo;
    /**
     * Use with available fluent helpers to apply the <b>ValidityEndDate</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<LocalDateTime> VALID_TO = new ContactPersonAddressField<LocalDateTime>("ValidityEndDate");
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>AddressID</b></p>
     * 
     * @return
     *     Address Number
     */
    @Key
    @SerializedName("AddressID")
    @JsonProperty("AddressID")
    @Nullable
    @ODataField(odataName = "AddressID")
    private String addressNumber;
    /**
     * Use with available fluent helpers to apply the <b>AddressID</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> ADDRESS_NUMBER = new ContactPersonAddressField<String>("AddressID");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>AddressNumber</b></p>
     * 
     * @return
     *     Address Number
     */
    @SerializedName("AddressNumber")
    @JsonProperty("AddressNumber")
    @Nullable
    @ODataField(odataName = "AddressNumber")
    private String addressNumber_2;
    /**
     * Use with available fluent helpers to apply the <b>AddressNumber</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> ADDRESS_NUMBER_2 = new ContactPersonAddressField<String>("AddressNumber");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>AdditionalStreetPrefixName</b></p>
     * 
     * @return
     *     Street 3
     */
    @SerializedName("AdditionalStreetPrefixName")
    @JsonProperty("AdditionalStreetPrefixName")
    @Nullable
    @ODataField(odataName = "AdditionalStreetPrefixName")
    private String street3;
    /**
     * Use with available fluent helpers to apply the <b>AdditionalStreetPrefixName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> STREET3 = new ContactPersonAddressField<String>("AdditionalStreetPrefixName");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>AdditionalStreetSuffixName</b></p>
     * 
     * @return
     *     Street 5
     */
    @SerializedName("AdditionalStreetSuffixName")
    @JsonProperty("AdditionalStreetSuffixName")
    @Nullable
    @ODataField(odataName = "AdditionalStreetSuffixName")
    private String street5;
    /**
     * Use with available fluent helpers to apply the <b>AdditionalStreetSuffixName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> STREET5 = new ContactPersonAddressField<String>("AdditionalStreetSuffixName");
    /**
     * Constraints: Not nullable, Maximum length: 6 <p>Original property name from the Odata EDM: <b>AddressTimeZone</b></p>
     * 
     * @return
     *     Address Time Zone
     */
    @SerializedName("AddressTimeZone")
    @JsonProperty("AddressTimeZone")
    @Nullable
    @ODataField(odataName = "AddressTimeZone")
    private String timeZone;
    /**
     * Use with available fluent helpers to apply the <b>AddressTimeZone</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> TIME_ZONE = new ContactPersonAddressField<String>("AddressTimeZone");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>CareOfName</b></p>
     * 
     * @return
     *     c/o name
     */
    @SerializedName("CareOfName")
    @JsonProperty("CareOfName")
    @Nullable
    @ODataField(odataName = "CareOfName")
    private String co;
    /**
     * Use with available fluent helpers to apply the <b>CareOfName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> CO = new ContactPersonAddressField<String>("CareOfName");
    /**
     * Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>CityCode</b></p>
     * 
     * @return
     *     City code for city/street file
     */
    @SerializedName("CityCode")
    @JsonProperty("CityCode")
    @Nullable
    @ODataField(odataName = "CityCode")
    private String cityCode;
    /**
     * Use with available fluent helpers to apply the <b>CityCode</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> CITY_CODE = new ContactPersonAddressField<String>("CityCode");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>CityName</b></p>
     * 
     * @return
     *     City
     */
    @SerializedName("CityName")
    @JsonProperty("CityName")
    @Nullable
    @ODataField(odataName = "CityName")
    private String city;
    /**
     * Use with available fluent helpers to apply the <b>CityName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> CITY = new ContactPersonAddressField<String>("CityName");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>CompanyPostalCode</b></p>
     * 
     * @return
     *     Company Postal Code (for Large Customers)
     */
    @SerializedName("CompanyPostalCode")
    @JsonProperty("CompanyPostalCode")
    @Nullable
    @ODataField(odataName = "CompanyPostalCode")
    private String companyPostalCode;
    /**
     * Use with available fluent helpers to apply the <b>CompanyPostalCode</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> COMPANY_POSTAL_CODE = new ContactPersonAddressField<String>("CompanyPostalCode");
    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>Country</b></p>
     * 
     * @return
     *     Country/Region Key
     */
    @SerializedName("Country")
    @JsonProperty("Country")
    @Nullable
    @ODataField(odataName = "Country")
    private String countryRegionKey;
    /**
     * Use with available fluent helpers to apply the <b>Country</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> COUNTRY_REGION_KEY = new ContactPersonAddressField<String>("Country");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>County</b></p>
     * 
     * @return
     *     County
     */
    @SerializedName("County")
    @JsonProperty("County")
    @Nullable
    @ODataField(odataName = "County")
    private String county;
    /**
     * Use with available fluent helpers to apply the <b>County</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> COUNTY = new ContactPersonAddressField<String>("County");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>DeliveryServiceNumber</b></p>
     * 
     * @return
     *     Number of Delivery Service
     */
    @SerializedName("DeliveryServiceNumber")
    @JsonProperty("DeliveryServiceNumber")
    @Nullable
    @ODataField(odataName = "DeliveryServiceNumber")
    private String deliveryServiceNo;
    /**
     * Use with available fluent helpers to apply the <b>DeliveryServiceNumber</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> DELIVERY_SERVICE_NO = new ContactPersonAddressField<String>("DeliveryServiceNumber");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>DeliveryServiceTypeCode</b></p>
     * 
     * @return
     *     Type of Delivery Service
     */
    @SerializedName("DeliveryServiceTypeCode")
    @JsonProperty("DeliveryServiceTypeCode")
    @Nullable
    @ODataField(odataName = "DeliveryServiceTypeCode")
    private String delvryServType;
    /**
     * Use with available fluent helpers to apply the <b>DeliveryServiceTypeCode</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> DELVRY_SERV_TYPE = new ContactPersonAddressField<String>("DeliveryServiceTypeCode");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>District</b></p>
     * 
     * @return
     *     District
     */
    @SerializedName("District")
    @JsonProperty("District")
    @Nullable
    @ODataField(odataName = "District")
    private String district;
    /**
     * Use with available fluent helpers to apply the <b>District</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> DISTRICT = new ContactPersonAddressField<String>("District");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>FormOfAddress</b></p>
     * 
     * @return
     *     Form-of-Address Key
     */
    @SerializedName("FormOfAddress")
    @JsonProperty("FormOfAddress")
    @Nullable
    @ODataField(odataName = "FormOfAddress")
    private String titleKey;
    /**
     * Use with available fluent helpers to apply the <b>FormOfAddress</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> TITLE_KEY = new ContactPersonAddressField<String>("FormOfAddress");
    /**
     * Constraints: Not nullable, Maximum length: 80 <p>Original property name from the Odata EDM: <b>FullName</b></p>
     * 
     * @return
     *     Full name of a party (Bus. Partner, Org. Unit, Doc. address)
     */
    @SerializedName("FullName")
    @JsonProperty("FullName")
    @Nullable
    @ODataField(odataName = "FullName")
    private String fullName;
    /**
     * Use with available fluent helpers to apply the <b>FullName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> FULL_NAME = new ContactPersonAddressField<String>("FullName");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>HomeCityName</b></p>
     * 
     * @return
     *     City (different from postal city)
     */
    @SerializedName("HomeCityName")
    @JsonProperty("HomeCityName")
    @Nullable
    @ODataField(odataName = "HomeCityName")
    private String differentCity;
    /**
     * Use with available fluent helpers to apply the <b>HomeCityName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> DIFFERENT_CITY = new ContactPersonAddressField<String>("HomeCityName");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>HouseNumber</b></p>
     * 
     * @return
     *     House Number
     */
    @SerializedName("HouseNumber")
    @JsonProperty("HouseNumber")
    @Nullable
    @ODataField(odataName = "HouseNumber")
    private String houseNumber;
    /**
     * Use with available fluent helpers to apply the <b>HouseNumber</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> HOUSE_NUMBER = new ContactPersonAddressField<String>("HouseNumber");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>HouseNumberSupplementText</b></p>
     * 
     * @return
     *     House number supplement
     */
    @SerializedName("HouseNumberSupplementText")
    @JsonProperty("HouseNumberSupplementText")
    @Nullable
    @ODataField(odataName = "HouseNumberSupplementText")
    private String supplement;
    /**
     * Use with available fluent helpers to apply the <b>HouseNumberSupplementText</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> SUPPLEMENT = new ContactPersonAddressField<String>("HouseNumberSupplementText");
    /**
     * Constraints: Not nullable, Maximum length: 2 <p>Original property name from the Odata EDM: <b>Language</b></p>
     * 
     * @return
     *     Language Key
     */
    @SerializedName("Language")
    @JsonProperty("Language")
    @Nullable
    @ODataField(odataName = "Language")
    private String languageKey;
    /**
     * Use with available fluent helpers to apply the <b>Language</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> LANGUAGE_KEY = new ContactPersonAddressField<String>("Language");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>POBox</b></p>
     * 
     * @return
     *     PO Box
     */
    @SerializedName("POBox")
    @JsonProperty("POBox")
    @Nullable
    @ODataField(odataName = "POBox")
    private String pOBox;
    /**
     * Use with available fluent helpers to apply the <b>POBox</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> PO_BOX = new ContactPersonAddressField<String>("POBox");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>POBoxDeviatingCityName</b></p>
     * 
     * @return
     *     PO Box city
     */
    @SerializedName("POBoxDeviatingCityName")
    @JsonProperty("POBoxDeviatingCityName")
    @Nullable
    @ODataField(odataName = "POBoxDeviatingCityName")
    private String pOBoxCity;
    /**
     * Use with available fluent helpers to apply the <b>POBoxDeviatingCityName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> PO_BOX_CITY = new ContactPersonAddressField<String>("POBoxDeviatingCityName");
    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>POBoxDeviatingCountry</b></p>
     * 
     * @return
     *     PO Box of Country/Region
     */
    @SerializedName("POBoxDeviatingCountry")
    @JsonProperty("POBoxDeviatingCountry")
    @Nullable
    @ODataField(odataName = "POBoxDeviatingCountry")
    private String pOBoxCtryRegion;
    /**
     * Use with available fluent helpers to apply the <b>POBoxDeviatingCountry</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> PO_BOX_CTRY_REGION = new ContactPersonAddressField<String>("POBoxDeviatingCountry");
    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>POBoxDeviatingRegion</b></p>
     * 
     * @return
     *     Region for PO Box (Country/Region, State, Province, ...)
     */
    @SerializedName("POBoxDeviatingRegion")
    @JsonProperty("POBoxDeviatingRegion")
    @Nullable
    @ODataField(odataName = "POBoxDeviatingRegion")
    private String pOBoxRegion;
    /**
     * Use with available fluent helpers to apply the <b>POBoxDeviatingRegion</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> PO_BOX_REGION = new ContactPersonAddressField<String>("POBoxDeviatingRegion");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>POBoxIsWithoutNumber</b></p>
     * 
     * @return
     *     Flag: PO Box Without Number
     */
    @SerializedName("POBoxIsWithoutNumber")
    @JsonProperty("POBoxIsWithoutNumber")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "POBoxIsWithoutNumber")
    private Boolean pOBoxWoNo;
    /**
     * Use with available fluent helpers to apply the <b>POBoxIsWithoutNumber</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<Boolean> PO_BOX_WO_NO = new ContactPersonAddressField<Boolean>("POBoxIsWithoutNumber");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>POBoxLobbyName</b></p>
     * 
     * @return
     *     PO Box Lobby
     */
    @SerializedName("POBoxLobbyName")
    @JsonProperty("POBoxLobbyName")
    @Nullable
    @ODataField(odataName = "POBoxLobbyName")
    private String pOBoxLobby;
    /**
     * Use with available fluent helpers to apply the <b>POBoxLobbyName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> PO_BOX_LOBBY = new ContactPersonAddressField<String>("POBoxLobbyName");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>POBoxPostalCode</b></p>
     * 
     * @return
     *     PO Box Postal Code
     */
    @SerializedName("POBoxPostalCode")
    @JsonProperty("POBoxPostalCode")
    @Nullable
    @ODataField(odataName = "POBoxPostalCode")
    private String pOBoxPostalCode;
    /**
     * Use with available fluent helpers to apply the <b>POBoxPostalCode</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> PO_BOX_POSTAL_CODE = new ContactPersonAddressField<String>("POBoxPostalCode");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Person</b></p>
     * 
     * @return
     *     Person Number
     */
    @SerializedName("Person")
    @JsonProperty("Person")
    @Nullable
    @ODataField(odataName = "Person")
    private String personNumber;
    /**
     * Use with available fluent helpers to apply the <b>Person</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> PERSON_NUMBER = new ContactPersonAddressField<String>("Person");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>PostalCode</b></p>
     * 
     * @return
     *     City Postal Code
     */
    @SerializedName("PostalCode")
    @JsonProperty("PostalCode")
    @Nullable
    @ODataField(odataName = "PostalCode")
    private String postalCode;
    /**
     * Use with available fluent helpers to apply the <b>PostalCode</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> POSTAL_CODE = new ContactPersonAddressField<String>("PostalCode");
    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>PrfrdCommMediumType</b></p>
     * 
     * @return
     *     Communication Method (Key) (Business Address Services)
     */
    @SerializedName("PrfrdCommMediumType")
    @JsonProperty("PrfrdCommMediumType")
    @Nullable
    @ODataField(odataName = "PrfrdCommMediumType")
    private String commMethod;
    /**
     * Use with available fluent helpers to apply the <b>PrfrdCommMediumType</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> COMM_METHOD = new ContactPersonAddressField<String>("PrfrdCommMediumType");
    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>Region</b></p>
     * 
     * @return
     *     Region (State, Province, County)
     */
    @SerializedName("Region")
    @JsonProperty("Region")
    @Nullable
    @ODataField(odataName = "Region")
    private String region;
    /**
     * Use with available fluent helpers to apply the <b>Region</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> REGION = new ContactPersonAddressField<String>("Region");
    /**
     * Constraints: Not nullable, Maximum length: 60 <p>Original property name from the Odata EDM: <b>StreetName</b></p>
     * 
     * @return
     *     Street
     */
    @SerializedName("StreetName")
    @JsonProperty("StreetName")
    @Nullable
    @ODataField(odataName = "StreetName")
    private String street;
    /**
     * Use with available fluent helpers to apply the <b>StreetName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> STREET = new ContactPersonAddressField<String>("StreetName");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>StreetPrefixName</b></p>
     * 
     * @return
     *     Street 2
     */
    @SerializedName("StreetPrefixName")
    @JsonProperty("StreetPrefixName")
    @Nullable
    @ODataField(odataName = "StreetPrefixName")
    private String street2;
    /**
     * Use with available fluent helpers to apply the <b>StreetPrefixName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> STREET2 = new ContactPersonAddressField<String>("StreetPrefixName");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>StreetSuffixName</b></p>
     * 
     * @return
     *     Street 4
     */
    @SerializedName("StreetSuffixName")
    @JsonProperty("StreetSuffixName")
    @Nullable
    @ODataField(odataName = "StreetSuffixName")
    private String street4;
    /**
     * Use with available fluent helpers to apply the <b>StreetSuffixName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> STREET4 = new ContactPersonAddressField<String>("StreetSuffixName");
    /**
     * Constraints: Not nullable, Maximum length: 15 <p>Original property name from the Odata EDM: <b>TaxJurisdiction</b></p>
     * 
     * @return
     *     Tax Jurisdiction
     */
    @SerializedName("TaxJurisdiction")
    @JsonProperty("TaxJurisdiction")
    @Nullable
    @ODataField(odataName = "TaxJurisdiction")
    private String taxJurisdiction;
    /**
     * Use with available fluent helpers to apply the <b>TaxJurisdiction</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> TAX_JURISDICTION = new ContactPersonAddressField<String>("TaxJurisdiction");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>TransportZone</b></p>
     * 
     * @return
     *     Transportation zone to or from which the goods are delivered
     */
    @SerializedName("TransportZone")
    @JsonProperty("TransportZone")
    @Nullable
    @ODataField(odataName = "TransportZone")
    private String transportationZone;
    /**
     * Use with available fluent helpers to apply the <b>TransportZone</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> TRANSPORTATION_ZONE = new ContactPersonAddressField<String>("TransportZone");
    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>AddressRepresentationCode</b></p>
     * 
     * @return
     *     Version ID for International Addresses
     */
    @SerializedName("AddressRepresentationCode")
    @JsonProperty("AddressRepresentationCode")
    @Nullable
    @ODataField(odataName = "AddressRepresentationCode")
    private String addressVersion;
    /**
     * Use with available fluent helpers to apply the <b>AddressRepresentationCode</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> ADDRESS_VERSION = new ContactPersonAddressField<String>("AddressRepresentationCode");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>ContactPersonBuilding</b></p>
     * 
     * @return
     *     Building (number or code)
     */
    @SerializedName("ContactPersonBuilding")
    @JsonProperty("ContactPersonBuilding")
    @Nullable
    @ODataField(odataName = "ContactPersonBuilding")
    private String buildingCode;
    /**
     * Use with available fluent helpers to apply the <b>ContactPersonBuilding</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> BUILDING_CODE = new ContactPersonAddressField<String>("ContactPersonBuilding");
    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>ContactPersonPrfrdCommMedium</b></p>
     * 
     * @return
     *     Communication Method (Key) (Business Address Services)
     */
    @SerializedName("ContactPersonPrfrdCommMedium")
    @JsonProperty("ContactPersonPrfrdCommMedium")
    @Nullable
    @ODataField(odataName = "ContactPersonPrfrdCommMedium")
    private String commMethod_2;
    /**
     * Use with available fluent helpers to apply the <b>ContactPersonPrfrdCommMedium</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> COMM_METHOD_2 = new ContactPersonAddressField<String>("ContactPersonPrfrdCommMedium");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>ContactRelationshipDepartment</b></p>
     * 
     * @return
     *     Department
     */
    @SerializedName("ContactRelationshipDepartment")
    @JsonProperty("ContactRelationshipDepartment")
    @Nullable
    @ODataField(odataName = "ContactRelationshipDepartment")
    private String department;
    /**
     * Use with available fluent helpers to apply the <b>ContactRelationshipDepartment</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> DEPARTMENT = new ContactPersonAddressField<String>("ContactRelationshipDepartment");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>ContactRelationshipFunction</b></p>
     * 
     * @return
     *     Function
     */
    @SerializedName("ContactRelationshipFunction")
    @JsonProperty("ContactRelationshipFunction")
    @Nullable
    @ODataField(odataName = "ContactRelationshipFunction")
    private String function;
    /**
     * Use with available fluent helpers to apply the <b>ContactRelationshipFunction</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> FUNCTION = new ContactPersonAddressField<String>("ContactRelationshipFunction");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>CorrespondenceShortName</b></p>
     * 
     * @return
     *     Short name for correspondence
     */
    @SerializedName("CorrespondenceShortName")
    @JsonProperty("CorrespondenceShortName")
    @Nullable
    @ODataField(odataName = "CorrespondenceShortName")
    private String shortName;
    /**
     * Use with available fluent helpers to apply the <b>CorrespondenceShortName</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> SHORT_NAME = new ContactPersonAddressField<String>("CorrespondenceShortName");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Floor</b></p>
     * 
     * @return
     *     Floor in building
     */
    @SerializedName("Floor")
    @JsonProperty("Floor")
    @Nullable
    @ODataField(odataName = "Floor")
    private String floor;
    /**
     * Use with available fluent helpers to apply the <b>Floor</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> FLOOR = new ContactPersonAddressField<String>("Floor");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>InhouseMail</b></p>
     * 
     * @return
     *     Internal Mail Postal Code
     */
    @SerializedName("InhouseMail")
    @JsonProperty("InhouseMail")
    @Nullable
    @ODataField(odataName = "InhouseMail")
    private String internalMail;
    /**
     * Use with available fluent helpers to apply the <b>InhouseMail</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> INTERNAL_MAIL = new ContactPersonAddressField<String>("InhouseMail");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsDefaultAddress</b></p>
     * 
     * @return
     *     Indicator: Address is standard address
     */
    @SerializedName("IsDefaultAddress")
    @JsonProperty("IsDefaultAddress")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "IsDefaultAddress")
    private Boolean standAddress;
    /**
     * Use with available fluent helpers to apply the <b>IsDefaultAddress</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<Boolean> STAND_ADDRESS = new ContactPersonAddressField<Boolean>("IsDefaultAddress");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>RoomNumber</b></p>
     * 
     * @return
     *     Room or Apartment Number
     */
    @SerializedName("RoomNumber")
    @JsonProperty("RoomNumber")
    @Nullable
    @ODataField(odataName = "RoomNumber")
    private String roomNumber;
    /**
     * Use with available fluent helpers to apply the <b>RoomNumber</b> field to query operations.
     * 
     */
    public final static ContactPersonAddressField<String> ROOM_NUMBER = new ContactPersonAddressField<String>("RoomNumber");
    /**
     * Navigation property <b>to_EmailAddress</b> for <b>ContactPersonAddress</b> to multiple <b>EmailAddress</b>.
     * 
     */
    @SerializedName("to_EmailAddress")
    @JsonProperty("to_EmailAddress")
    @ODataField(odataName = "to_EmailAddress")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<EmailAddress> toEmailAddress;
    /**
     * Navigation property <b>to_FaxNumber</b> for <b>ContactPersonAddress</b> to multiple <b>FaxNumber</b>.
     * 
     */
    @SerializedName("to_FaxNumber")
    @JsonProperty("to_FaxNumber")
    @ODataField(odataName = "to_FaxNumber")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<FaxNumber> toFaxNumber;
    /**
     * Navigation property <b>to_MobilePhoneNumber</b> for <b>ContactPersonAddress</b> to multiple <b>PhoneNumber</b>.
     * 
     */
    @SerializedName("to_MobilePhoneNumber")
    @JsonProperty("to_MobilePhoneNumber")
    @ODataField(odataName = "to_MobilePhoneNumber")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<PhoneNumber> toMobilePhoneNumber;
    /**
     * Navigation property <b>to_PhoneNumber</b> for <b>ContactPersonAddress</b> to multiple <b>PhoneNumber</b>.
     * 
     */
    @SerializedName("to_PhoneNumber")
    @JsonProperty("to_PhoneNumber")
    @ODataField(odataName = "to_PhoneNumber")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<PhoneNumber> toPhoneNumber;
    /**
     * Navigation property <b>to_URLAddress</b> for <b>ContactPersonAddress</b> to multiple <b>HomePageURL</b>.
     * 
     */
    @SerializedName("to_URLAddress")
    @JsonProperty("to_URLAddress")
    @ODataField(odataName = "to_URLAddress")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<HomePageURL> toURLAddress;
    /**
     * Use with available fluent helpers to apply the <b>to_EmailAddress</b> navigation property to query operations.
     * 
     */
    public final static ContactPersonAddressLink<EmailAddress> TO_EMAIL_ADDRESS = new ContactPersonAddressLink<EmailAddress>("to_EmailAddress");
    /**
     * Use with available fluent helpers to apply the <b>to_FaxNumber</b> navigation property to query operations.
     * 
     */
    public final static ContactPersonAddressLink<FaxNumber> TO_FAX_NUMBER = new ContactPersonAddressLink<FaxNumber>("to_FaxNumber");
    /**
     * Use with available fluent helpers to apply the <b>to_MobilePhoneNumber</b> navigation property to query operations.
     * 
     */
    public final static ContactPersonAddressLink<PhoneNumber> TO_MOBILE_PHONE_NUMBER = new ContactPersonAddressLink<PhoneNumber>("to_MobilePhoneNumber");
    /**
     * Use with available fluent helpers to apply the <b>to_PhoneNumber</b> navigation property to query operations.
     * 
     */
    public final static ContactPersonAddressLink<PhoneNumber> TO_PHONE_NUMBER = new ContactPersonAddressLink<PhoneNumber>("to_PhoneNumber");
    /**
     * Use with available fluent helpers to apply the <b>to_URLAddress</b> navigation property to query operations.
     * 
     */
    public final static ContactPersonAddressLink<HomePageURL> TO_URL_ADDRESS = new ContactPersonAddressLink<HomePageURL>("to_URLAddress");

    @Nonnull
    @Override
    public Class<ContactPersonAddress> getType() {
        return ContactPersonAddress.class;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>RelationshipNumber</b></p>
     * 
     * @param bPRelationshipNo
     *     BP Relationship Number
     */
    public void setBPRelationshipNo(
        @Nullable
        final String bPRelationshipNo) {
        rememberChangedField("RelationshipNumber", this.bPRelationshipNo);
        this.bPRelationshipNo = bPRelationshipNo;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartnerCompany</b></p>
     * 
     * @param businessPartner
     *     Business Partner Number
     */
    public void setBusinessPartner(
        @Nullable
        final String businessPartner) {
        rememberChangedField("BusinessPartnerCompany", this.businessPartner);
        this.businessPartner = businessPartner;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartnerPerson</b></p>
     * 
     * @param businessPartner_2
     *     Business Partner Number
     */
    public void setBusinessPartner_2(
        @Nullable
        final String businessPartner_2) {
        rememberChangedField("BusinessPartnerPerson", this.businessPartner_2);
        this.businessPartner_2 = businessPartner_2;
    }

    /**
     * (Key Field) Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>ValidityEndDate</b></p>
     * 
     * @param validTo
     *     Validity Date (Valid To)
     */
    public void setValidTo(
        @Nullable
        final LocalDateTime validTo) {
        rememberChangedField("ValidityEndDate", this.validTo);
        this.validTo = validTo;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>AddressID</b></p>
     * 
     * @param addressNumber
     *     Address Number
     */
    public void setAddressNumber(
        @Nullable
        final String addressNumber) {
        rememberChangedField("AddressID", this.addressNumber);
        this.addressNumber = addressNumber;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>AddressNumber</b></p>
     * 
     * @param addressNumber_2
     *     Address Number
     */
    public void setAddressNumber_2(
        @Nullable
        final String addressNumber_2) {
        rememberChangedField("AddressNumber", this.addressNumber_2);
        this.addressNumber_2 = addressNumber_2;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>AdditionalStreetPrefixName</b></p>
     * 
     * @param street3
     *     Street 3
     */
    public void setStreet3(
        @Nullable
        final String street3) {
        rememberChangedField("AdditionalStreetPrefixName", this.street3);
        this.street3 = street3;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>AdditionalStreetSuffixName</b></p>
     * 
     * @param street5
     *     Street 5
     */
    public void setStreet5(
        @Nullable
        final String street5) {
        rememberChangedField("AdditionalStreetSuffixName", this.street5);
        this.street5 = street5;
    }

    /**
     * Constraints: Not nullable, Maximum length: 6 <p>Original property name from the Odata EDM: <b>AddressTimeZone</b></p>
     * 
     * @param timeZone
     *     Address Time Zone
     */
    public void setTimeZone(
        @Nullable
        final String timeZone) {
        rememberChangedField("AddressTimeZone", this.timeZone);
        this.timeZone = timeZone;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>CareOfName</b></p>
     * 
     * @param co
     *     c/o name
     */
    public void setCo(
        @Nullable
        final String co) {
        rememberChangedField("CareOfName", this.co);
        this.co = co;
    }

    /**
     * Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>CityCode</b></p>
     * 
     * @param cityCode
     *     City code for city/street file
     */
    public void setCityCode(
        @Nullable
        final String cityCode) {
        rememberChangedField("CityCode", this.cityCode);
        this.cityCode = cityCode;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>CityName</b></p>
     * 
     * @param city
     *     City
     */
    public void setCity(
        @Nullable
        final String city) {
        rememberChangedField("CityName", this.city);
        this.city = city;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>CompanyPostalCode</b></p>
     * 
     * @param companyPostalCode
     *     Company Postal Code (for Large Customers)
     */
    public void setCompanyPostalCode(
        @Nullable
        final String companyPostalCode) {
        rememberChangedField("CompanyPostalCode", this.companyPostalCode);
        this.companyPostalCode = companyPostalCode;
    }

    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>Country</b></p>
     * 
     * @param countryRegionKey
     *     Country/Region Key
     */
    public void setCountryRegionKey(
        @Nullable
        final String countryRegionKey) {
        rememberChangedField("Country", this.countryRegionKey);
        this.countryRegionKey = countryRegionKey;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>County</b></p>
     * 
     * @param county
     *     County
     */
    public void setCounty(
        @Nullable
        final String county) {
        rememberChangedField("County", this.county);
        this.county = county;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>DeliveryServiceNumber</b></p>
     * 
     * @param deliveryServiceNo
     *     Number of Delivery Service
     */
    public void setDeliveryServiceNo(
        @Nullable
        final String deliveryServiceNo) {
        rememberChangedField("DeliveryServiceNumber", this.deliveryServiceNo);
        this.deliveryServiceNo = deliveryServiceNo;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>DeliveryServiceTypeCode</b></p>
     * 
     * @param delvryServType
     *     Type of Delivery Service
     */
    public void setDelvryServType(
        @Nullable
        final String delvryServType) {
        rememberChangedField("DeliveryServiceTypeCode", this.delvryServType);
        this.delvryServType = delvryServType;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>District</b></p>
     * 
     * @param district
     *     District
     */
    public void setDistrict(
        @Nullable
        final String district) {
        rememberChangedField("District", this.district);
        this.district = district;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>FormOfAddress</b></p>
     * 
     * @param titleKey
     *     Form-of-Address Key
     */
    public void setTitleKey(
        @Nullable
        final String titleKey) {
        rememberChangedField("FormOfAddress", this.titleKey);
        this.titleKey = titleKey;
    }

    /**
     * Constraints: Not nullable, Maximum length: 80 <p>Original property name from the Odata EDM: <b>FullName</b></p>
     * 
     * @param fullName
     *     Full name of a party (Bus. Partner, Org. Unit, Doc. address)
     */
    public void setFullName(
        @Nullable
        final String fullName) {
        rememberChangedField("FullName", this.fullName);
        this.fullName = fullName;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>HomeCityName</b></p>
     * 
     * @param differentCity
     *     City (different from postal city)
     */
    public void setDifferentCity(
        @Nullable
        final String differentCity) {
        rememberChangedField("HomeCityName", this.differentCity);
        this.differentCity = differentCity;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>HouseNumber</b></p>
     * 
     * @param houseNumber
     *     House Number
     */
    public void setHouseNumber(
        @Nullable
        final String houseNumber) {
        rememberChangedField("HouseNumber", this.houseNumber);
        this.houseNumber = houseNumber;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>HouseNumberSupplementText</b></p>
     * 
     * @param supplement
     *     House number supplement
     */
    public void setSupplement(
        @Nullable
        final String supplement) {
        rememberChangedField("HouseNumberSupplementText", this.supplement);
        this.supplement = supplement;
    }

    /**
     * Constraints: Not nullable, Maximum length: 2 <p>Original property name from the Odata EDM: <b>Language</b></p>
     * 
     * @param languageKey
     *     Language Key
     */
    public void setLanguageKey(
        @Nullable
        final String languageKey) {
        rememberChangedField("Language", this.languageKey);
        this.languageKey = languageKey;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>POBox</b></p>
     * 
     * @param pOBox
     *     PO Box
     */
    public void setPOBox(
        @Nullable
        final String pOBox) {
        rememberChangedField("POBox", this.pOBox);
        this.pOBox = pOBox;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>POBoxDeviatingCityName</b></p>
     * 
     * @param pOBoxCity
     *     PO Box city
     */
    public void setPOBoxCity(
        @Nullable
        final String pOBoxCity) {
        rememberChangedField("POBoxDeviatingCityName", this.pOBoxCity);
        this.pOBoxCity = pOBoxCity;
    }

    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>POBoxDeviatingCountry</b></p>
     * 
     * @param pOBoxCtryRegion
     *     PO Box of Country/Region
     */
    public void setPOBoxCtryRegion(
        @Nullable
        final String pOBoxCtryRegion) {
        rememberChangedField("POBoxDeviatingCountry", this.pOBoxCtryRegion);
        this.pOBoxCtryRegion = pOBoxCtryRegion;
    }

    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>POBoxDeviatingRegion</b></p>
     * 
     * @param pOBoxRegion
     *     Region for PO Box (Country/Region, State, Province, ...)
     */
    public void setPOBoxRegion(
        @Nullable
        final String pOBoxRegion) {
        rememberChangedField("POBoxDeviatingRegion", this.pOBoxRegion);
        this.pOBoxRegion = pOBoxRegion;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>POBoxIsWithoutNumber</b></p>
     * 
     * @param pOBoxWoNo
     *     Flag: PO Box Without Number
     */
    public void setPOBoxWoNo(
        @Nullable
        final Boolean pOBoxWoNo) {
        rememberChangedField("POBoxIsWithoutNumber", this.pOBoxWoNo);
        this.pOBoxWoNo = pOBoxWoNo;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>POBoxLobbyName</b></p>
     * 
     * @param pOBoxLobby
     *     PO Box Lobby
     */
    public void setPOBoxLobby(
        @Nullable
        final String pOBoxLobby) {
        rememberChangedField("POBoxLobbyName", this.pOBoxLobby);
        this.pOBoxLobby = pOBoxLobby;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>POBoxPostalCode</b></p>
     * 
     * @param pOBoxPostalCode
     *     PO Box Postal Code
     */
    public void setPOBoxPostalCode(
        @Nullable
        final String pOBoxPostalCode) {
        rememberChangedField("POBoxPostalCode", this.pOBoxPostalCode);
        this.pOBoxPostalCode = pOBoxPostalCode;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Person</b></p>
     * 
     * @param personNumber
     *     Person Number
     */
    public void setPersonNumber(
        @Nullable
        final String personNumber) {
        rememberChangedField("Person", this.personNumber);
        this.personNumber = personNumber;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>PostalCode</b></p>
     * 
     * @param postalCode
     *     City Postal Code
     */
    public void setPostalCode(
        @Nullable
        final String postalCode) {
        rememberChangedField("PostalCode", this.postalCode);
        this.postalCode = postalCode;
    }

    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>PrfrdCommMediumType</b></p>
     * 
     * @param commMethod
     *     Communication Method (Key) (Business Address Services)
     */
    public void setCommMethod(
        @Nullable
        final String commMethod) {
        rememberChangedField("PrfrdCommMediumType", this.commMethod);
        this.commMethod = commMethod;
    }

    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>Region</b></p>
     * 
     * @param region
     *     Region (State, Province, County)
     */
    public void setRegion(
        @Nullable
        final String region) {
        rememberChangedField("Region", this.region);
        this.region = region;
    }

    /**
     * Constraints: Not nullable, Maximum length: 60 <p>Original property name from the Odata EDM: <b>StreetName</b></p>
     * 
     * @param street
     *     Street
     */
    public void setStreet(
        @Nullable
        final String street) {
        rememberChangedField("StreetName", this.street);
        this.street = street;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>StreetPrefixName</b></p>
     * 
     * @param street2
     *     Street 2
     */
    public void setStreet2(
        @Nullable
        final String street2) {
        rememberChangedField("StreetPrefixName", this.street2);
        this.street2 = street2;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>StreetSuffixName</b></p>
     * 
     * @param street4
     *     Street 4
     */
    public void setStreet4(
        @Nullable
        final String street4) {
        rememberChangedField("StreetSuffixName", this.street4);
        this.street4 = street4;
    }

    /**
     * Constraints: Not nullable, Maximum length: 15 <p>Original property name from the Odata EDM: <b>TaxJurisdiction</b></p>
     * 
     * @param taxJurisdiction
     *     Tax Jurisdiction
     */
    public void setTaxJurisdiction(
        @Nullable
        final String taxJurisdiction) {
        rememberChangedField("TaxJurisdiction", this.taxJurisdiction);
        this.taxJurisdiction = taxJurisdiction;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>TransportZone</b></p>
     * 
     * @param transportationZone
     *     Transportation zone to or from which the goods are delivered
     */
    public void setTransportationZone(
        @Nullable
        final String transportationZone) {
        rememberChangedField("TransportZone", this.transportationZone);
        this.transportationZone = transportationZone;
    }

    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>AddressRepresentationCode</b></p>
     * 
     * @param addressVersion
     *     Version ID for International Addresses
     */
    public void setAddressVersion(
        @Nullable
        final String addressVersion) {
        rememberChangedField("AddressRepresentationCode", this.addressVersion);
        this.addressVersion = addressVersion;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>ContactPersonBuilding</b></p>
     * 
     * @param buildingCode
     *     Building (number or code)
     */
    public void setBuildingCode(
        @Nullable
        final String buildingCode) {
        rememberChangedField("ContactPersonBuilding", this.buildingCode);
        this.buildingCode = buildingCode;
    }

    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>ContactPersonPrfrdCommMedium</b></p>
     * 
     * @param commMethod_2
     *     Communication Method (Key) (Business Address Services)
     */
    public void setCommMethod_2(
        @Nullable
        final String commMethod_2) {
        rememberChangedField("ContactPersonPrfrdCommMedium", this.commMethod_2);
        this.commMethod_2 = commMethod_2;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>ContactRelationshipDepartment</b></p>
     * 
     * @param department
     *     Department
     */
    public void setDepartment(
        @Nullable
        final String department) {
        rememberChangedField("ContactRelationshipDepartment", this.department);
        this.department = department;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>ContactRelationshipFunction</b></p>
     * 
     * @param function
     *     Function
     */
    public void setFunction(
        @Nullable
        final String function) {
        rememberChangedField("ContactRelationshipFunction", this.function);
        this.function = function;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>CorrespondenceShortName</b></p>
     * 
     * @param shortName
     *     Short name for correspondence
     */
    public void setShortName(
        @Nullable
        final String shortName) {
        rememberChangedField("CorrespondenceShortName", this.shortName);
        this.shortName = shortName;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Floor</b></p>
     * 
     * @param floor
     *     Floor in building
     */
    public void setFloor(
        @Nullable
        final String floor) {
        rememberChangedField("Floor", this.floor);
        this.floor = floor;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>InhouseMail</b></p>
     * 
     * @param internalMail
     *     Internal Mail Postal Code
     */
    public void setInternalMail(
        @Nullable
        final String internalMail) {
        rememberChangedField("InhouseMail", this.internalMail);
        this.internalMail = internalMail;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsDefaultAddress</b></p>
     * 
     * @param standAddress
     *     Indicator: Address is standard address
     */
    public void setStandAddress(
        @Nullable
        final Boolean standAddress) {
        rememberChangedField("IsDefaultAddress", this.standAddress);
        this.standAddress = standAddress;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>RoomNumber</b></p>
     * 
     * @param roomNumber
     *     Room or Apartment Number
     */
    public void setRoomNumber(
        @Nullable
        final String roomNumber) {
        rememberChangedField("RoomNumber", this.roomNumber);
        this.roomNumber = roomNumber;
    }

    @Override
    protected String getEntityCollection() {
        return "A_BPContactToAddress";
    }

    @Nonnull
    @Override
    protected Map<String, Object> getKey() {
        final Map<String, Object> result = Maps.newHashMap();
        result.put("RelationshipNumber", getBPRelationshipNo());
        result.put("BusinessPartnerCompany", getBusinessPartner());
        result.put("BusinessPartnerPerson", getBusinessPartner_2());
        result.put("ValidityEndDate", getValidTo());
        result.put("AddressID", getAddressNumber());
        return result;
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfFields() {
        final Map<String, Object> values = super.toMapOfFields();
        values.put("RelationshipNumber", getBPRelationshipNo());
        values.put("BusinessPartnerCompany", getBusinessPartner());
        values.put("BusinessPartnerPerson", getBusinessPartner_2());
        values.put("ValidityEndDate", getValidTo());
        values.put("AddressID", getAddressNumber());
        values.put("AddressNumber", getAddressNumber_2());
        values.put("AdditionalStreetPrefixName", getStreet3());
        values.put("AdditionalStreetSuffixName", getStreet5());
        values.put("AddressTimeZone", getTimeZone());
        values.put("CareOfName", getCo());
        values.put("CityCode", getCityCode());
        values.put("CityName", getCity());
        values.put("CompanyPostalCode", getCompanyPostalCode());
        values.put("Country", getCountryRegionKey());
        values.put("County", getCounty());
        values.put("DeliveryServiceNumber", getDeliveryServiceNo());
        values.put("DeliveryServiceTypeCode", getDelvryServType());
        values.put("District", getDistrict());
        values.put("FormOfAddress", getTitleKey());
        values.put("FullName", getFullName());
        values.put("HomeCityName", getDifferentCity());
        values.put("HouseNumber", getHouseNumber());
        values.put("HouseNumberSupplementText", getSupplement());
        values.put("Language", getLanguageKey());
        values.put("POBox", getPOBox());
        values.put("POBoxDeviatingCityName", getPOBoxCity());
        values.put("POBoxDeviatingCountry", getPOBoxCtryRegion());
        values.put("POBoxDeviatingRegion", getPOBoxRegion());
        values.put("POBoxIsWithoutNumber", getPOBoxWoNo());
        values.put("POBoxLobbyName", getPOBoxLobby());
        values.put("POBoxPostalCode", getPOBoxPostalCode());
        values.put("Person", getPersonNumber());
        values.put("PostalCode", getPostalCode());
        values.put("PrfrdCommMediumType", getCommMethod());
        values.put("Region", getRegion());
        values.put("StreetName", getStreet());
        values.put("StreetPrefixName", getStreet2());
        values.put("StreetSuffixName", getStreet4());
        values.put("TaxJurisdiction", getTaxJurisdiction());
        values.put("TransportZone", getTransportationZone());
        values.put("AddressRepresentationCode", getAddressVersion());
        values.put("ContactPersonBuilding", getBuildingCode());
        values.put("ContactPersonPrfrdCommMedium", getCommMethod_2());
        values.put("ContactRelationshipDepartment", getDepartment());
        values.put("ContactRelationshipFunction", getFunction());
        values.put("CorrespondenceShortName", getShortName());
        values.put("Floor", getFloor());
        values.put("InhouseMail", getInternalMail());
        values.put("IsDefaultAddress", getStandAddress());
        values.put("RoomNumber", getRoomNumber());
        return values;
    }

    @Override
    protected void fromMap(final Map<String, Object> inputValues) {
        final Map<String, Object> values = Maps.newHashMap(inputValues);
        // simple properties
        {
            if (values.containsKey("RelationshipNumber")) {
                final Object value = values.remove("RelationshipNumber");
                if ((value == null)||(!value.equals(getBPRelationshipNo()))) {
                    setBPRelationshipNo(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerCompany")) {
                final Object value = values.remove("BusinessPartnerCompany");
                if ((value == null)||(!value.equals(getBusinessPartner()))) {
                    setBusinessPartner(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerPerson")) {
                final Object value = values.remove("BusinessPartnerPerson");
                if ((value == null)||(!value.equals(getBusinessPartner_2()))) {
                    setBusinessPartner_2(((String) value));
                }
            }
            if (values.containsKey("ValidityEndDate")) {
                final Object value = values.remove("ValidityEndDate");
                if ((value == null)||(!value.equals(getValidTo()))) {
                    setValidTo(((LocalDateTime) value));
                }
            }
            if (values.containsKey("AddressID")) {
                final Object value = values.remove("AddressID");
                if ((value == null)||(!value.equals(getAddressNumber()))) {
                    setAddressNumber(((String) value));
                }
            }
            if (values.containsKey("AddressNumber")) {
                final Object value = values.remove("AddressNumber");
                if ((value == null)||(!value.equals(getAddressNumber_2()))) {
                    setAddressNumber_2(((String) value));
                }
            }
            if (values.containsKey("AdditionalStreetPrefixName")) {
                final Object value = values.remove("AdditionalStreetPrefixName");
                if ((value == null)||(!value.equals(getStreet3()))) {
                    setStreet3(((String) value));
                }
            }
            if (values.containsKey("AdditionalStreetSuffixName")) {
                final Object value = values.remove("AdditionalStreetSuffixName");
                if ((value == null)||(!value.equals(getStreet5()))) {
                    setStreet5(((String) value));
                }
            }
            if (values.containsKey("AddressTimeZone")) {
                final Object value = values.remove("AddressTimeZone");
                if ((value == null)||(!value.equals(getTimeZone()))) {
                    setTimeZone(((String) value));
                }
            }
            if (values.containsKey("CareOfName")) {
                final Object value = values.remove("CareOfName");
                if ((value == null)||(!value.equals(getCo()))) {
                    setCo(((String) value));
                }
            }
            if (values.containsKey("CityCode")) {
                final Object value = values.remove("CityCode");
                if ((value == null)||(!value.equals(getCityCode()))) {
                    setCityCode(((String) value));
                }
            }
            if (values.containsKey("CityName")) {
                final Object value = values.remove("CityName");
                if ((value == null)||(!value.equals(getCity()))) {
                    setCity(((String) value));
                }
            }
            if (values.containsKey("CompanyPostalCode")) {
                final Object value = values.remove("CompanyPostalCode");
                if ((value == null)||(!value.equals(getCompanyPostalCode()))) {
                    setCompanyPostalCode(((String) value));
                }
            }
            if (values.containsKey("Country")) {
                final Object value = values.remove("Country");
                if ((value == null)||(!value.equals(getCountryRegionKey()))) {
                    setCountryRegionKey(((String) value));
                }
            }
            if (values.containsKey("County")) {
                final Object value = values.remove("County");
                if ((value == null)||(!value.equals(getCounty()))) {
                    setCounty(((String) value));
                }
            }
            if (values.containsKey("DeliveryServiceNumber")) {
                final Object value = values.remove("DeliveryServiceNumber");
                if ((value == null)||(!value.equals(getDeliveryServiceNo()))) {
                    setDeliveryServiceNo(((String) value));
                }
            }
            if (values.containsKey("DeliveryServiceTypeCode")) {
                final Object value = values.remove("DeliveryServiceTypeCode");
                if ((value == null)||(!value.equals(getDelvryServType()))) {
                    setDelvryServType(((String) value));
                }
            }
            if (values.containsKey("District")) {
                final Object value = values.remove("District");
                if ((value == null)||(!value.equals(getDistrict()))) {
                    setDistrict(((String) value));
                }
            }
            if (values.containsKey("FormOfAddress")) {
                final Object value = values.remove("FormOfAddress");
                if ((value == null)||(!value.equals(getTitleKey()))) {
                    setTitleKey(((String) value));
                }
            }
            if (values.containsKey("FullName")) {
                final Object value = values.remove("FullName");
                if ((value == null)||(!value.equals(getFullName()))) {
                    setFullName(((String) value));
                }
            }
            if (values.containsKey("HomeCityName")) {
                final Object value = values.remove("HomeCityName");
                if ((value == null)||(!value.equals(getDifferentCity()))) {
                    setDifferentCity(((String) value));
                }
            }
            if (values.containsKey("HouseNumber")) {
                final Object value = values.remove("HouseNumber");
                if ((value == null)||(!value.equals(getHouseNumber()))) {
                    setHouseNumber(((String) value));
                }
            }
            if (values.containsKey("HouseNumberSupplementText")) {
                final Object value = values.remove("HouseNumberSupplementText");
                if ((value == null)||(!value.equals(getSupplement()))) {
                    setSupplement(((String) value));
                }
            }
            if (values.containsKey("Language")) {
                final Object value = values.remove("Language");
                if ((value == null)||(!value.equals(getLanguageKey()))) {
                    setLanguageKey(((String) value));
                }
            }
            if (values.containsKey("POBox")) {
                final Object value = values.remove("POBox");
                if ((value == null)||(!value.equals(getPOBox()))) {
                    setPOBox(((String) value));
                }
            }
            if (values.containsKey("POBoxDeviatingCityName")) {
                final Object value = values.remove("POBoxDeviatingCityName");
                if ((value == null)||(!value.equals(getPOBoxCity()))) {
                    setPOBoxCity(((String) value));
                }
            }
            if (values.containsKey("POBoxDeviatingCountry")) {
                final Object value = values.remove("POBoxDeviatingCountry");
                if ((value == null)||(!value.equals(getPOBoxCtryRegion()))) {
                    setPOBoxCtryRegion(((String) value));
                }
            }
            if (values.containsKey("POBoxDeviatingRegion")) {
                final Object value = values.remove("POBoxDeviatingRegion");
                if ((value == null)||(!value.equals(getPOBoxRegion()))) {
                    setPOBoxRegion(((String) value));
                }
            }
            if (values.containsKey("POBoxIsWithoutNumber")) {
                final Object value = values.remove("POBoxIsWithoutNumber");
                if ((value == null)||(!value.equals(getPOBoxWoNo()))) {
                    setPOBoxWoNo(((Boolean) value));
                }
            }
            if (values.containsKey("POBoxLobbyName")) {
                final Object value = values.remove("POBoxLobbyName");
                if ((value == null)||(!value.equals(getPOBoxLobby()))) {
                    setPOBoxLobby(((String) value));
                }
            }
            if (values.containsKey("POBoxPostalCode")) {
                final Object value = values.remove("POBoxPostalCode");
                if ((value == null)||(!value.equals(getPOBoxPostalCode()))) {
                    setPOBoxPostalCode(((String) value));
                }
            }
            if (values.containsKey("Person")) {
                final Object value = values.remove("Person");
                if ((value == null)||(!value.equals(getPersonNumber()))) {
                    setPersonNumber(((String) value));
                }
            }
            if (values.containsKey("PostalCode")) {
                final Object value = values.remove("PostalCode");
                if ((value == null)||(!value.equals(getPostalCode()))) {
                    setPostalCode(((String) value));
                }
            }
            if (values.containsKey("PrfrdCommMediumType")) {
                final Object value = values.remove("PrfrdCommMediumType");
                if ((value == null)||(!value.equals(getCommMethod()))) {
                    setCommMethod(((String) value));
                }
            }
            if (values.containsKey("Region")) {
                final Object value = values.remove("Region");
                if ((value == null)||(!value.equals(getRegion()))) {
                    setRegion(((String) value));
                }
            }
            if (values.containsKey("StreetName")) {
                final Object value = values.remove("StreetName");
                if ((value == null)||(!value.equals(getStreet()))) {
                    setStreet(((String) value));
                }
            }
            if (values.containsKey("StreetPrefixName")) {
                final Object value = values.remove("StreetPrefixName");
                if ((value == null)||(!value.equals(getStreet2()))) {
                    setStreet2(((String) value));
                }
            }
            if (values.containsKey("StreetSuffixName")) {
                final Object value = values.remove("StreetSuffixName");
                if ((value == null)||(!value.equals(getStreet4()))) {
                    setStreet4(((String) value));
                }
            }
            if (values.containsKey("TaxJurisdiction")) {
                final Object value = values.remove("TaxJurisdiction");
                if ((value == null)||(!value.equals(getTaxJurisdiction()))) {
                    setTaxJurisdiction(((String) value));
                }
            }
            if (values.containsKey("TransportZone")) {
                final Object value = values.remove("TransportZone");
                if ((value == null)||(!value.equals(getTransportationZone()))) {
                    setTransportationZone(((String) value));
                }
            }
            if (values.containsKey("AddressRepresentationCode")) {
                final Object value = values.remove("AddressRepresentationCode");
                if ((value == null)||(!value.equals(getAddressVersion()))) {
                    setAddressVersion(((String) value));
                }
            }
            if (values.containsKey("ContactPersonBuilding")) {
                final Object value = values.remove("ContactPersonBuilding");
                if ((value == null)||(!value.equals(getBuildingCode()))) {
                    setBuildingCode(((String) value));
                }
            }
            if (values.containsKey("ContactPersonPrfrdCommMedium")) {
                final Object value = values.remove("ContactPersonPrfrdCommMedium");
                if ((value == null)||(!value.equals(getCommMethod_2()))) {
                    setCommMethod_2(((String) value));
                }
            }
            if (values.containsKey("ContactRelationshipDepartment")) {
                final Object value = values.remove("ContactRelationshipDepartment");
                if ((value == null)||(!value.equals(getDepartment()))) {
                    setDepartment(((String) value));
                }
            }
            if (values.containsKey("ContactRelationshipFunction")) {
                final Object value = values.remove("ContactRelationshipFunction");
                if ((value == null)||(!value.equals(getFunction()))) {
                    setFunction(((String) value));
                }
            }
            if (values.containsKey("CorrespondenceShortName")) {
                final Object value = values.remove("CorrespondenceShortName");
                if ((value == null)||(!value.equals(getShortName()))) {
                    setShortName(((String) value));
                }
            }
            if (values.containsKey("Floor")) {
                final Object value = values.remove("Floor");
                if ((value == null)||(!value.equals(getFloor()))) {
                    setFloor(((String) value));
                }
            }
            if (values.containsKey("InhouseMail")) {
                final Object value = values.remove("InhouseMail");
                if ((value == null)||(!value.equals(getInternalMail()))) {
                    setInternalMail(((String) value));
                }
            }
            if (values.containsKey("IsDefaultAddress")) {
                final Object value = values.remove("IsDefaultAddress");
                if ((value == null)||(!value.equals(getStandAddress()))) {
                    setStandAddress(((Boolean) value));
                }
            }
            if (values.containsKey("RoomNumber")) {
                final Object value = values.remove("RoomNumber");
                if ((value == null)||(!value.equals(getRoomNumber()))) {
                    setRoomNumber(((String) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
            if ((values).containsKey("to_EmailAddress")) {
                final Object value = (values).remove("to_EmailAddress");
                if (value instanceof Iterable) {
                    if (toEmailAddress == null) {
                        toEmailAddress = Lists.newArrayList();
                    } else {
                        toEmailAddress = Lists.newArrayList(toEmailAddress);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        EmailAddress entity;
                        if (toEmailAddress.size()>i) {
                            entity = toEmailAddress.get(i);
                        } else {
                            entity = new EmailAddress();
                            toEmailAddress.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_FaxNumber")) {
                final Object value = (values).remove("to_FaxNumber");
                if (value instanceof Iterable) {
                    if (toFaxNumber == null) {
                        toFaxNumber = Lists.newArrayList();
                    } else {
                        toFaxNumber = Lists.newArrayList(toFaxNumber);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        FaxNumber entity;
                        if (toFaxNumber.size()>i) {
                            entity = toFaxNumber.get(i);
                        } else {
                            entity = new FaxNumber();
                            toFaxNumber.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_MobilePhoneNumber")) {
                final Object value = (values).remove("to_MobilePhoneNumber");
                if (value instanceof Iterable) {
                    if (toMobilePhoneNumber == null) {
                        toMobilePhoneNumber = Lists.newArrayList();
                    } else {
                        toMobilePhoneNumber = Lists.newArrayList(toMobilePhoneNumber);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        PhoneNumber entity;
                        if (toMobilePhoneNumber.size()>i) {
                            entity = toMobilePhoneNumber.get(i);
                        } else {
                            entity = new PhoneNumber();
                            toMobilePhoneNumber.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_PhoneNumber")) {
                final Object value = (values).remove("to_PhoneNumber");
                if (value instanceof Iterable) {
                    if (toPhoneNumber == null) {
                        toPhoneNumber = Lists.newArrayList();
                    } else {
                        toPhoneNumber = Lists.newArrayList(toPhoneNumber);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        PhoneNumber entity;
                        if (toPhoneNumber.size()>i) {
                            entity = toPhoneNumber.get(i);
                        } else {
                            entity = new PhoneNumber();
                            toPhoneNumber.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_URLAddress")) {
                final Object value = (values).remove("to_URLAddress");
                if (value instanceof Iterable) {
                    if (toURLAddress == null) {
                        toURLAddress = Lists.newArrayList();
                    } else {
                        toURLAddress = Lists.newArrayList(toURLAddress);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        HomePageURL entity;
                        if (toURLAddress.size()>i) {
                            entity = toURLAddress.get(i);
                        } else {
                            entity = new HomePageURL();
                            toURLAddress.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
        }
        super.fromMap(values);
    }

    /**
     * Use with available fluent helpers to apply an extension field to query operations.
     * 
     * @param fieldName
     *     The name of the extension field as returned by the OData service.
     * @param <T>
     *     The type of the extension field when performing value comparisons.
     * @param fieldType
     *     The Java type to use for the extension field when performing value comparisons.
     * @return
     *     A representation of an extension field from this entity.
     */
    @Nonnull
    public static<T >ContactPersonAddressField<T> field(
        @Nonnull
        final String fieldName,
        @Nonnull
        final Class<T> fieldType) {
        return new ContactPersonAddressField<T>(fieldName);
    }

    /**
     * Use with available fluent helpers to apply an extension field to query operations.
     * 
     * @param typeConverter
     *     A TypeConverter<T, DomainT> instance whose first generic type matches the Java type of the field
     * @param fieldName
     *     The name of the extension field as returned by the OData service.
     * @param <T>
     *     The type of the extension field when performing value comparisons.
     * @param <DomainT>
     *     The type of the extension field as returned by the OData service.
     * @return
     *     A representation of an extension field from this entity, holding a reference to the given TypeConverter.
     */
    @Nonnull
    public static<T,DomainT >ContactPersonAddressField<T> field(
        @Nonnull
        final String fieldName,
        @Nonnull
        final TypeConverter<T, DomainT> typeConverter) {
        return new ContactPersonAddressField<T>(fieldName, typeConverter);
    }

    @Override
    @Nullable
    public Destination getDestinationForFetch() {
        return super.getDestinationForFetch();
    }

    @Override
    protected void setServicePathForFetch(
        @Nullable
        final String servicePathForFetch) {
        super.setServicePathForFetch(servicePathForFetch);
    }

    @Override
    public void attachToService(
        @Nullable
        final String servicePath,
        @Nonnull
        final Destination destination) {
        super.attachToService(servicePath, destination);
    }

    @Override
    protected String getDefaultServicePath() {
        return (com.sap.cloud.sdk.tutorial.datamodel.odata.services.BusinessPartnerService.DEFAULT_SERVICE_PATH);
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfNavigationProperties() {
        final Map<String, Object> values = super.toMapOfNavigationProperties();
        if (toEmailAddress!= null) {
            (values).put("to_EmailAddress", toEmailAddress);
        }
        if (toFaxNumber!= null) {
            (values).put("to_FaxNumber", toFaxNumber);
        }
        if (toMobilePhoneNumber!= null) {
            (values).put("to_MobilePhoneNumber", toMobilePhoneNumber);
        }
        if (toPhoneNumber!= null) {
            (values).put("to_PhoneNumber", toPhoneNumber);
        }
        if (toURLAddress!= null) {
            (values).put("to_URLAddress", toURLAddress);
        }
        return values;
    }

    /**
     * Fetches the <b>EmailAddress</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_EmailAddress</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>EmailAddress</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<EmailAddress> fetchEmailAddress() {
        return fetchFieldAsList("to_EmailAddress", EmailAddress.class);
    }

    /**
     * Retrieval of associated <b>EmailAddress</b> entities (one to many). This corresponds to the OData navigation property <b>to_EmailAddress</b>.
     * <p>
     * If the navigation property <b>to_EmailAddress</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>EmailAddress</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<EmailAddress> getEmailAddressOrFetch() {
        if (toEmailAddress == null) {
            toEmailAddress = fetchEmailAddress();
        }
        return toEmailAddress;
    }

    /**
     * Retrieval of associated <b>EmailAddress</b> entities (one to many). This corresponds to the OData navigation property <b>to_EmailAddress</b>.
     * <p>
     * If the navigation property for an entity <b>ContactPersonAddress</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_EmailAddress</b> is already loaded, the result will contain the <b>EmailAddress</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<EmailAddress>> getEmailAddressIfPresent() {
        return Option.of(toEmailAddress);
    }

    /**
     * Overwrites the list of associated <b>EmailAddress</b> entities for the loaded navigation property <b>to_EmailAddress</b>.
     * <p>
     * If the navigation property <b>to_EmailAddress</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>EmailAddress</b> entities.
     */
    public void setEmailAddress(
        @Nonnull
        final List<EmailAddress> value) {
        if (toEmailAddress == null) {
            toEmailAddress = Lists.newArrayList();
        }
        toEmailAddress.clear();
        toEmailAddress.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>EmailAddress</b> entities. This corresponds to the OData navigation property <b>to_EmailAddress</b>.
     * <p>
     * If the navigation property <b>to_EmailAddress</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>EmailAddress</b> entities.
     */
    public void addEmailAddress(EmailAddress... entity) {
        if (toEmailAddress == null) {
            toEmailAddress = Lists.newArrayList();
        }
        toEmailAddress.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>FaxNumber</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_FaxNumber</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>FaxNumber</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<FaxNumber> fetchFaxNumber() {
        return fetchFieldAsList("to_FaxNumber", FaxNumber.class);
    }

    /**
     * Retrieval of associated <b>FaxNumber</b> entities (one to many). This corresponds to the OData navigation property <b>to_FaxNumber</b>.
     * <p>
     * If the navigation property <b>to_FaxNumber</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>FaxNumber</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<FaxNumber> getFaxNumberOrFetch() {
        if (toFaxNumber == null) {
            toFaxNumber = fetchFaxNumber();
        }
        return toFaxNumber;
    }

    /**
     * Retrieval of associated <b>FaxNumber</b> entities (one to many). This corresponds to the OData navigation property <b>to_FaxNumber</b>.
     * <p>
     * If the navigation property for an entity <b>ContactPersonAddress</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_FaxNumber</b> is already loaded, the result will contain the <b>FaxNumber</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<FaxNumber>> getFaxNumberIfPresent() {
        return Option.of(toFaxNumber);
    }

    /**
     * Overwrites the list of associated <b>FaxNumber</b> entities for the loaded navigation property <b>to_FaxNumber</b>.
     * <p>
     * If the navigation property <b>to_FaxNumber</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>FaxNumber</b> entities.
     */
    public void setFaxNumber(
        @Nonnull
        final List<FaxNumber> value) {
        if (toFaxNumber == null) {
            toFaxNumber = Lists.newArrayList();
        }
        toFaxNumber.clear();
        toFaxNumber.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>FaxNumber</b> entities. This corresponds to the OData navigation property <b>to_FaxNumber</b>.
     * <p>
     * If the navigation property <b>to_FaxNumber</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>FaxNumber</b> entities.
     */
    public void addFaxNumber(FaxNumber... entity) {
        if (toFaxNumber == null) {
            toFaxNumber = Lists.newArrayList();
        }
        toFaxNumber.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>PhoneNumber</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_MobilePhoneNumber</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>PhoneNumber</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<PhoneNumber> fetchMobilePhoneNumber() {
        return fetchFieldAsList("to_MobilePhoneNumber", PhoneNumber.class);
    }

    /**
     * Retrieval of associated <b>PhoneNumber</b> entities (one to many). This corresponds to the OData navigation property <b>to_MobilePhoneNumber</b>.
     * <p>
     * If the navigation property <b>to_MobilePhoneNumber</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>PhoneNumber</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<PhoneNumber> getMobilePhoneNumberOrFetch() {
        if (toMobilePhoneNumber == null) {
            toMobilePhoneNumber = fetchMobilePhoneNumber();
        }
        return toMobilePhoneNumber;
    }

    /**
     * Retrieval of associated <b>PhoneNumber</b> entities (one to many). This corresponds to the OData navigation property <b>to_MobilePhoneNumber</b>.
     * <p>
     * If the navigation property for an entity <b>ContactPersonAddress</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_MobilePhoneNumber</b> is already loaded, the result will contain the <b>PhoneNumber</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<PhoneNumber>> getMobilePhoneNumberIfPresent() {
        return Option.of(toMobilePhoneNumber);
    }

    /**
     * Overwrites the list of associated <b>PhoneNumber</b> entities for the loaded navigation property <b>to_MobilePhoneNumber</b>.
     * <p>
     * If the navigation property <b>to_MobilePhoneNumber</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>PhoneNumber</b> entities.
     */
    public void setMobilePhoneNumber(
        @Nonnull
        final List<PhoneNumber> value) {
        if (toMobilePhoneNumber == null) {
            toMobilePhoneNumber = Lists.newArrayList();
        }
        toMobilePhoneNumber.clear();
        toMobilePhoneNumber.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>PhoneNumber</b> entities. This corresponds to the OData navigation property <b>to_MobilePhoneNumber</b>.
     * <p>
     * If the navigation property <b>to_MobilePhoneNumber</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>PhoneNumber</b> entities.
     */
    public void addMobilePhoneNumber(PhoneNumber... entity) {
        if (toMobilePhoneNumber == null) {
            toMobilePhoneNumber = Lists.newArrayList();
        }
        toMobilePhoneNumber.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>PhoneNumber</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_PhoneNumber</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>PhoneNumber</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<PhoneNumber> fetchPhoneNumber() {
        return fetchFieldAsList("to_PhoneNumber", PhoneNumber.class);
    }

    /**
     * Retrieval of associated <b>PhoneNumber</b> entities (one to many). This corresponds to the OData navigation property <b>to_PhoneNumber</b>.
     * <p>
     * If the navigation property <b>to_PhoneNumber</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>PhoneNumber</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<PhoneNumber> getPhoneNumberOrFetch() {
        if (toPhoneNumber == null) {
            toPhoneNumber = fetchPhoneNumber();
        }
        return toPhoneNumber;
    }

    /**
     * Retrieval of associated <b>PhoneNumber</b> entities (one to many). This corresponds to the OData navigation property <b>to_PhoneNumber</b>.
     * <p>
     * If the navigation property for an entity <b>ContactPersonAddress</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_PhoneNumber</b> is already loaded, the result will contain the <b>PhoneNumber</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<PhoneNumber>> getPhoneNumberIfPresent() {
        return Option.of(toPhoneNumber);
    }

    /**
     * Overwrites the list of associated <b>PhoneNumber</b> entities for the loaded navigation property <b>to_PhoneNumber</b>.
     * <p>
     * If the navigation property <b>to_PhoneNumber</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>PhoneNumber</b> entities.
     */
    public void setPhoneNumber(
        @Nonnull
        final List<PhoneNumber> value) {
        if (toPhoneNumber == null) {
            toPhoneNumber = Lists.newArrayList();
        }
        toPhoneNumber.clear();
        toPhoneNumber.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>PhoneNumber</b> entities. This corresponds to the OData navigation property <b>to_PhoneNumber</b>.
     * <p>
     * If the navigation property <b>to_PhoneNumber</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>PhoneNumber</b> entities.
     */
    public void addPhoneNumber(PhoneNumber... entity) {
        if (toPhoneNumber == null) {
            toPhoneNumber = Lists.newArrayList();
        }
        toPhoneNumber.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>HomePageURL</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_URLAddress</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>HomePageURL</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<HomePageURL> fetchURLAddress() {
        return fetchFieldAsList("to_URLAddress", HomePageURL.class);
    }

    /**
     * Retrieval of associated <b>HomePageURL</b> entities (one to many). This corresponds to the OData navigation property <b>to_URLAddress</b>.
     * <p>
     * If the navigation property <b>to_URLAddress</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>HomePageURL</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<HomePageURL> getURLAddressOrFetch() {
        if (toURLAddress == null) {
            toURLAddress = fetchURLAddress();
        }
        return toURLAddress;
    }

    /**
     * Retrieval of associated <b>HomePageURL</b> entities (one to many). This corresponds to the OData navigation property <b>to_URLAddress</b>.
     * <p>
     * If the navigation property for an entity <b>ContactPersonAddress</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_URLAddress</b> is already loaded, the result will contain the <b>HomePageURL</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<HomePageURL>> getURLAddressIfPresent() {
        return Option.of(toURLAddress);
    }

    /**
     * Overwrites the list of associated <b>HomePageURL</b> entities for the loaded navigation property <b>to_URLAddress</b>.
     * <p>
     * If the navigation property <b>to_URLAddress</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>HomePageURL</b> entities.
     */
    public void setURLAddress(
        @Nonnull
        final List<HomePageURL> value) {
        if (toURLAddress == null) {
            toURLAddress = Lists.newArrayList();
        }
        toURLAddress.clear();
        toURLAddress.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>HomePageURL</b> entities. This corresponds to the OData navigation property <b>to_URLAddress</b>.
     * <p>
     * If the navigation property <b>to_URLAddress</b> of a queried <b>ContactPersonAddress</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>HomePageURL</b> entities.
     */
    public void addURLAddress(HomePageURL... entity) {
        if (toURLAddress == null) {
            toURLAddress = Lists.newArrayList();
        }
        toURLAddress.addAll(Lists.newArrayList(entity));
    }


    /**
     * Helper class to allow for fluent creation of ContactPersonAddress instances.
     * 
     */
    public final static class ContactPersonAddressBuilder {

        private List<EmailAddress> toEmailAddress = Lists.newArrayList();
        private List<FaxNumber> toFaxNumber = Lists.newArrayList();
        private List<PhoneNumber> toMobilePhoneNumber = Lists.newArrayList();
        private List<PhoneNumber> toPhoneNumber = Lists.newArrayList();
        private List<HomePageURL> toURLAddress = Lists.newArrayList();

        private ContactPersonAddress.ContactPersonAddressBuilder toEmailAddress(final List<EmailAddress> value) {
            toEmailAddress.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_EmailAddress</b> for <b>ContactPersonAddress</b> to multiple <b>EmailAddress</b>.
         * 
         * @param value
         *     The EmailAddresss to build this ContactPersonAddress with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public ContactPersonAddress.ContactPersonAddressBuilder emailAddress(EmailAddress... value) {
            return toEmailAddress(Lists.newArrayList(value));
        }

        private ContactPersonAddress.ContactPersonAddressBuilder toFaxNumber(final List<FaxNumber> value) {
            toFaxNumber.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_FaxNumber</b> for <b>ContactPersonAddress</b> to multiple <b>FaxNumber</b>.
         * 
         * @param value
         *     The FaxNumbers to build this ContactPersonAddress with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public ContactPersonAddress.ContactPersonAddressBuilder faxNumber(FaxNumber... value) {
            return toFaxNumber(Lists.newArrayList(value));
        }

        private ContactPersonAddress.ContactPersonAddressBuilder toMobilePhoneNumber(final List<PhoneNumber> value) {
            toMobilePhoneNumber.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_MobilePhoneNumber</b> for <b>ContactPersonAddress</b> to multiple <b>PhoneNumber</b>.
         * 
         * @param value
         *     The PhoneNumbers to build this ContactPersonAddress with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public ContactPersonAddress.ContactPersonAddressBuilder mobilePhoneNumber(PhoneNumber... value) {
            return toMobilePhoneNumber(Lists.newArrayList(value));
        }

        private ContactPersonAddress.ContactPersonAddressBuilder toPhoneNumber(final List<PhoneNumber> value) {
            toPhoneNumber.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_PhoneNumber</b> for <b>ContactPersonAddress</b> to multiple <b>PhoneNumber</b>.
         * 
         * @param value
         *     The PhoneNumbers to build this ContactPersonAddress with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public ContactPersonAddress.ContactPersonAddressBuilder phoneNumber(PhoneNumber... value) {
            return toPhoneNumber(Lists.newArrayList(value));
        }

        private ContactPersonAddress.ContactPersonAddressBuilder toURLAddress(final List<HomePageURL> value) {
            toURLAddress.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_URLAddress</b> for <b>ContactPersonAddress</b> to multiple <b>HomePageURL</b>.
         * 
         * @param value
         *     The HomePageURLs to build this ContactPersonAddress with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public ContactPersonAddress.ContactPersonAddressBuilder urlAddress(HomePageURL... value) {
            return toURLAddress(Lists.newArrayList(value));
        }

    }

}
