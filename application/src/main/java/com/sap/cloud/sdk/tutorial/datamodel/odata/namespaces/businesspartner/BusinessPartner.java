
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.1.0
 */

package com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner;

import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.sap.cloud.sdk.cloudplatform.connectivity.Destination;
import com.sap.cloud.sdk.datamodel.odata.client.exception.ODataException;
import com.sap.cloud.sdk.datamodel.odata.helper.VdmEntity;
import com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataField;
import com.sap.cloud.sdk.s4hana.datamodel.odata.annotation.Key;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.field.BusinessPartnerField;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.link.BusinessPartnerLink;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.link.BusinessPartnerOneToOneLink;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.selectable.BusinessPartnerSelectable;
import com.sap.cloud.sdk.typeconverter.TypeConverter;
import io.vavr.control.Option;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;


/**
 * Business Partner<p></p><p>Original entity name from the Odata EDM: <b>A_BusinessPartnerType</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataVdmEntityAdapterFactory.class)
public class BusinessPartner
    extends VdmEntity<BusinessPartner>
{

    /**
     * Selector for all available fields of BusinessPartner.
     * 
     */
    public final static BusinessPartnerSelectable ALL_FIELDS = () -> "*";
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartner</b></p>
     * 
     * @return
     *     Business Partner Number
     */
    @Key
    @SerializedName("BusinessPartner")
    @JsonProperty("BusinessPartner")
    @Nullable
    @ODataField(odataName = "BusinessPartner")
    private String businessPartner;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartner</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> BUSINESS_PARTNER = new BusinessPartnerField<String>("BusinessPartner");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Customer</b></p>
     * 
     * @return
     *     Customer Number
     */
    @SerializedName("Customer")
    @JsonProperty("Customer")
    @Nullable
    @ODataField(odataName = "Customer")
    private String customer;
    /**
     * Use with available fluent helpers to apply the <b>Customer</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> CUSTOMER = new BusinessPartnerField<String>("Customer");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Supplier</b></p>
     * 
     * @return
     *     Account Number of Supplier
     */
    @SerializedName("Supplier")
    @JsonProperty("Supplier")
    @Nullable
    @ODataField(odataName = "Supplier")
    private String supplier;
    /**
     * Use with available fluent helpers to apply the <b>Supplier</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> SUPPLIER = new BusinessPartnerField<String>("Supplier");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>AcademicTitle</b></p>
     * 
     * @return
     *     Academic Title: Key
     */
    @SerializedName("AcademicTitle")
    @JsonProperty("AcademicTitle")
    @Nullable
    @ODataField(odataName = "AcademicTitle")
    private String academicTitle1;
    /**
     * Use with available fluent helpers to apply the <b>AcademicTitle</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> ACADEMIC_TITLE1 = new BusinessPartnerField<String>("AcademicTitle");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>AuthorizationGroup</b></p>
     * 
     * @return
     *     Authorization Group
     */
    @SerializedName("AuthorizationGroup")
    @JsonProperty("AuthorizationGroup")
    @Nullable
    @ODataField(odataName = "AuthorizationGroup")
    private String authorizationGroup;
    /**
     * Use with available fluent helpers to apply the <b>AuthorizationGroup</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> AUTHORIZATION_GROUP = new BusinessPartnerField<String>("AuthorizationGroup");
    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>BusinessPartnerCategory</b></p>
     * 
     * @return
     *     Business Partner Category
     */
    @SerializedName("BusinessPartnerCategory")
    @JsonProperty("BusinessPartnerCategory")
    @Nullable
    @ODataField(odataName = "BusinessPartnerCategory")
    private String bPCategory;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerCategory</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> BP_CATEGORY = new BusinessPartnerField<String>("BusinessPartnerCategory");
    /**
     * Constraints: Not nullable, Maximum length: 81 <p>Original property name from the Odata EDM: <b>BusinessPartnerFullName</b></p>
     * 
     * @return
     *     The businessPartnerFullName contained in this entity.
     */
    @SerializedName("BusinessPartnerFullName")
    @JsonProperty("BusinessPartnerFullName")
    @Nullable
    @ODataField(odataName = "BusinessPartnerFullName")
    private String businessPartnerFullName;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerFullName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> BUSINESS_PARTNER_FULL_NAME = new BusinessPartnerField<String>("BusinessPartnerFullName");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>BusinessPartnerGrouping</b></p>
     * 
     * @return
     *     Business Partner Grouping
     */
    @SerializedName("BusinessPartnerGrouping")
    @JsonProperty("BusinessPartnerGrouping")
    @Nullable
    @ODataField(odataName = "BusinessPartnerGrouping")
    private String grouping;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerGrouping</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> GROUPING = new BusinessPartnerField<String>("BusinessPartnerGrouping");
    /**
     * Constraints: Not nullable, Maximum length: 81 <p>Original property name from the Odata EDM: <b>BusinessPartnerName</b></p>
     * 
     * @return
     *     The businessPartnerName contained in this entity.
     */
    @SerializedName("BusinessPartnerName")
    @JsonProperty("BusinessPartnerName")
    @Nullable
    @ODataField(odataName = "BusinessPartnerName")
    private String businessPartnerName;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> BUSINESS_PARTNER_NAME = new BusinessPartnerField<String>("BusinessPartnerName");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>BusinessPartnerUUID</b></p>
     * 
     * @return
     *     Business Partner GUID
     */
    @SerializedName("BusinessPartnerUUID")
    @JsonProperty("BusinessPartnerUUID")
    @Nullable
    @ODataField(odataName = "BusinessPartnerUUID")
    private UUID bPGUID;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerUUID</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<UUID> BPGUID = new BusinessPartnerField<UUID>("BusinessPartnerUUID");
    /**
     * Constraints: Not nullable, Maximum length: 2 <p>Original property name from the Odata EDM: <b>CorrespondenceLanguage</b></p>
     * 
     * @return
     *     Business Partner: Correspondence Language
     */
    @SerializedName("CorrespondenceLanguage")
    @JsonProperty("CorrespondenceLanguage")
    @Nullable
    @ODataField(odataName = "CorrespondenceLanguage")
    private String correspondenceLang;
    /**
     * Use with available fluent helpers to apply the <b>CorrespondenceLanguage</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> CORRESPONDENCE_LANG = new BusinessPartnerField<String>("CorrespondenceLanguage");
    /**
     * Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>CreatedByUser</b></p>
     * 
     * @return
     *     User who created the object
     */
    @SerializedName("CreatedByUser")
    @JsonProperty("CreatedByUser")
    @Nullable
    @ODataField(odataName = "CreatedByUser")
    private String createdBy;
    /**
     * Use with available fluent helpers to apply the <b>CreatedByUser</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> CREATED_BY = new BusinessPartnerField<String>("CreatedByUser");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>CreationDate</b></p>
     * 
     * @return
     *     Date on which the object was created
     */
    @SerializedName("CreationDate")
    @JsonProperty("CreationDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "CreationDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime createdOn;
    /**
     * Use with available fluent helpers to apply the <b>CreationDate</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<LocalDateTime> CREATED_ON = new BusinessPartnerField<LocalDateTime>("CreationDate");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>CreationTime</b></p>
     * 
     * @return
     *     Time at which the object was created
     */
    @SerializedName("CreationTime")
    @JsonProperty("CreationTime")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalTimeAdapter.class)
    @ODataField(odataName = "CreationTime", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalTimeCalendarConverter.class)
    private LocalTime createdAt;
    /**
     * Use with available fluent helpers to apply the <b>CreationTime</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<LocalTime> CREATED_AT = new BusinessPartnerField<LocalTime>("CreationTime");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>FirstName</b></p>
     * 
     * @return
     *     First Name of Business Partner (Person)
     */
    @SerializedName("FirstName")
    @JsonProperty("FirstName")
    @Nullable
    @ODataField(odataName = "FirstName")
    private String firstName;
    /**
     * Use with available fluent helpers to apply the <b>FirstName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> FIRST_NAME = new BusinessPartnerField<String>("FirstName");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>FormOfAddress</b></p>
     * 
     * @return
     *     Form-of-Address Key
     */
    @SerializedName("FormOfAddress")
    @JsonProperty("FormOfAddress")
    @Nullable
    @ODataField(odataName = "FormOfAddress")
    private String titleKey;
    /**
     * Use with available fluent helpers to apply the <b>FormOfAddress</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> TITLE_KEY = new BusinessPartnerField<String>("FormOfAddress");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Industry</b></p>
     * 
     * @return
     *     Industry sector
     */
    @SerializedName("Industry")
    @JsonProperty("Industry")
    @Nullable
    @ODataField(odataName = "Industry")
    private String industrySector;
    /**
     * Use with available fluent helpers to apply the <b>Industry</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> INDUSTRY_SECTOR = new BusinessPartnerField<String>("Industry");
    /**
     * Constraints: Not nullable, Maximum length: 7 <p>Original property name from the Odata EDM: <b>InternationalLocationNumber1</b></p>
     * 
     * @return
     *     International location number  (part 1)
     */
    @SerializedName("InternationalLocationNumber1")
    @JsonProperty("InternationalLocationNumber1")
    @Nullable
    @ODataField(odataName = "InternationalLocationNumber1")
    private String intLocationNo1;
    /**
     * Use with available fluent helpers to apply the <b>InternationalLocationNumber1</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> INT_LOCATION_NO1 = new BusinessPartnerField<String>("InternationalLocationNumber1");
    /**
     * Constraints: Not nullable, Maximum length: 5 <p>Original property name from the Odata EDM: <b>InternationalLocationNumber2</b></p>
     * 
     * @return
     *     International location number (Part 2)
     */
    @SerializedName("InternationalLocationNumber2")
    @JsonProperty("InternationalLocationNumber2")
    @Nullable
    @ODataField(odataName = "InternationalLocationNumber2")
    private String intLocationNo2;
    /**
     * Use with available fluent helpers to apply the <b>InternationalLocationNumber2</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> INT_LOCATION_NO2 = new BusinessPartnerField<String>("InternationalLocationNumber2");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsFemale</b></p>
     * 
     * @return
     *     Selection: Business partner is female
     */
    @SerializedName("IsFemale")
    @JsonProperty("IsFemale")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "IsFemale")
    private Boolean female;
    /**
     * Use with available fluent helpers to apply the <b>IsFemale</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<Boolean> FEMALE = new BusinessPartnerField<Boolean>("IsFemale");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsMale</b></p>
     * 
     * @return
     *     Selection: Business partner is male
     */
    @SerializedName("IsMale")
    @JsonProperty("IsMale")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "IsMale")
    private Boolean male;
    /**
     * Use with available fluent helpers to apply the <b>IsMale</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<Boolean> MALE = new BusinessPartnerField<Boolean>("IsMale");
    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>IsNaturalPerson</b></p>
     * 
     * @return
     *     Business Partner Is a Natural Person Under the Tax Laws
     */
    @SerializedName("IsNaturalPerson")
    @JsonProperty("IsNaturalPerson")
    @Nullable
    @ODataField(odataName = "IsNaturalPerson")
    private String naturalPerson;
    /**
     * Use with available fluent helpers to apply the <b>IsNaturalPerson</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NATURAL_PERSON = new BusinessPartnerField<String>("IsNaturalPerson");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsSexUnknown</b></p>
     * 
     * @return
     *     Selection: Sex of business partner is not known
     */
    @SerializedName("IsSexUnknown")
    @JsonProperty("IsSexUnknown")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "IsSexUnknown")
    private Boolean unknown;
    /**
     * Use with available fluent helpers to apply the <b>IsSexUnknown</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<Boolean> UNKNOWN = new BusinessPartnerField<Boolean>("IsSexUnknown");
    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>GenderCodeName</b></p>
     * 
     * @return
     *     Gender of Business Partner (Person)
     */
    @SerializedName("GenderCodeName")
    @JsonProperty("GenderCodeName")
    @Nullable
    @ODataField(odataName = "GenderCodeName")
    private String gender;
    /**
     * Use with available fluent helpers to apply the <b>GenderCodeName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> GENDER = new BusinessPartnerField<String>("GenderCodeName");
    /**
     * Constraints: Not nullable, Maximum length: 2 <p>Original property name from the Odata EDM: <b>Language</b></p>
     * 
     * @return
     *     Business partner: Language
     */
    @SerializedName("Language")
    @JsonProperty("Language")
    @Nullable
    @ODataField(odataName = "Language")
    private String language;
    /**
     * Use with available fluent helpers to apply the <b>Language</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> LANGUAGE = new BusinessPartnerField<String>("Language");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>LastChangeDate</b></p>
     * 
     * @return
     *     Date when object was last changed
     */
    @SerializedName("LastChangeDate")
    @JsonProperty("LastChangeDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "LastChangeDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime changedOn;
    /**
     * Use with available fluent helpers to apply the <b>LastChangeDate</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<LocalDateTime> CHANGED_ON = new BusinessPartnerField<LocalDateTime>("LastChangeDate");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>LastChangeTime</b></p>
     * 
     * @return
     *     Time at which object was last changed
     */
    @SerializedName("LastChangeTime")
    @JsonProperty("LastChangeTime")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalTimeAdapter.class)
    @ODataField(odataName = "LastChangeTime", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalTimeCalendarConverter.class)
    private LocalTime changedAt;
    /**
     * Use with available fluent helpers to apply the <b>LastChangeTime</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<LocalTime> CHANGED_AT = new BusinessPartnerField<LocalTime>("LastChangeTime");
    /**
     * Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>LastChangedByUser</b></p>
     * 
     * @return
     *     Last user to change object
     */
    @SerializedName("LastChangedByUser")
    @JsonProperty("LastChangedByUser")
    @Nullable
    @ODataField(odataName = "LastChangedByUser")
    private String changedBy;
    /**
     * Use with available fluent helpers to apply the <b>LastChangedByUser</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> CHANGED_BY = new BusinessPartnerField<String>("LastChangedByUser");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>LastName</b></p>
     * 
     * @return
     *     Last Name of Business Partner (Person)
     */
    @SerializedName("LastName")
    @JsonProperty("LastName")
    @Nullable
    @ODataField(odataName = "LastName")
    private String lastName;
    /**
     * Use with available fluent helpers to apply the <b>LastName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> LAST_NAME = new BusinessPartnerField<String>("LastName");
    /**
     * Constraints: Not nullable, Maximum length: 2 <p>Original property name from the Odata EDM: <b>LegalForm</b></p>
     * 
     * @return
     *     BP: Legal form of organization
     */
    @SerializedName("LegalForm")
    @JsonProperty("LegalForm")
    @Nullable
    @ODataField(odataName = "LegalForm")
    private String legalForm;
    /**
     * Use with available fluent helpers to apply the <b>LegalForm</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> LEGAL_FORM = new BusinessPartnerField<String>("LegalForm");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>OrganizationBPName1</b></p>
     * 
     * @return
     *     Name 1 of organization
     */
    @SerializedName("OrganizationBPName1")
    @JsonProperty("OrganizationBPName1")
    @Nullable
    @ODataField(odataName = "OrganizationBPName1")
    private String name1;
    /**
     * Use with available fluent helpers to apply the <b>OrganizationBPName1</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NAME1 = new BusinessPartnerField<String>("OrganizationBPName1");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>OrganizationBPName2</b></p>
     * 
     * @return
     *     Name 2 of organization
     */
    @SerializedName("OrganizationBPName2")
    @JsonProperty("OrganizationBPName2")
    @Nullable
    @ODataField(odataName = "OrganizationBPName2")
    private String name2;
    /**
     * Use with available fluent helpers to apply the <b>OrganizationBPName2</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NAME2 = new BusinessPartnerField<String>("OrganizationBPName2");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>OrganizationBPName3</b></p>
     * 
     * @return
     *     Name 3 of organization
     */
    @SerializedName("OrganizationBPName3")
    @JsonProperty("OrganizationBPName3")
    @Nullable
    @ODataField(odataName = "OrganizationBPName3")
    private String name3;
    /**
     * Use with available fluent helpers to apply the <b>OrganizationBPName3</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NAME3 = new BusinessPartnerField<String>("OrganizationBPName3");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>OrganizationBPName4</b></p>
     * 
     * @return
     *     Name 4 of organization
     */
    @SerializedName("OrganizationBPName4")
    @JsonProperty("OrganizationBPName4")
    @Nullable
    @ODataField(odataName = "OrganizationBPName4")
    private String name4;
    /**
     * Use with available fluent helpers to apply the <b>OrganizationBPName4</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NAME4 = new BusinessPartnerField<String>("OrganizationBPName4");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>OrganizationFoundationDate</b></p>
     * 
     * @return
     *     Date organization founded
     */
    @SerializedName("OrganizationFoundationDate")
    @JsonProperty("OrganizationFoundationDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "OrganizationFoundationDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime dateFounded;
    /**
     * Use with available fluent helpers to apply the <b>OrganizationFoundationDate</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<LocalDateTime> DATE_FOUNDED = new BusinessPartnerField<LocalDateTime>("OrganizationFoundationDate");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>OrganizationLiquidationDate</b></p>
     * 
     * @return
     *     Liquidation date of organization
     */
    @SerializedName("OrganizationLiquidationDate")
    @JsonProperty("OrganizationLiquidationDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "OrganizationLiquidationDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime liquidationDate;
    /**
     * Use with available fluent helpers to apply the <b>OrganizationLiquidationDate</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<LocalDateTime> LIQUIDATION_DATE = new BusinessPartnerField<LocalDateTime>("OrganizationLiquidationDate");
    /**
     * Constraints: Not nullable, Maximum length: 20 <p>Original property name from the Odata EDM: <b>SearchTerm1</b></p>
     * 
     * @return
     *     Search Term 1 for Business Partner
     */
    @SerializedName("SearchTerm1")
    @JsonProperty("SearchTerm1")
    @Nullable
    @ODataField(odataName = "SearchTerm1")
    private String searchTerm1;
    /**
     * Use with available fluent helpers to apply the <b>SearchTerm1</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> SEARCH_TERM1 = new BusinessPartnerField<String>("SearchTerm1");
    /**
     * Constraints: Not nullable, Maximum length: 20 <p>Original property name from the Odata EDM: <b>SearchTerm2</b></p>
     * 
     * @return
     *     Search Term 2 for Business Partner
     */
    @SerializedName("SearchTerm2")
    @JsonProperty("SearchTerm2")
    @Nullable
    @ODataField(odataName = "SearchTerm2")
    private String searchTerm2;
    /**
     * Use with available fluent helpers to apply the <b>SearchTerm2</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> SEARCH_TERM2 = new BusinessPartnerField<String>("SearchTerm2");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>AdditionalLastName</b></p>
     * 
     * @return
     *     Other Last Name of a Person
     */
    @SerializedName("AdditionalLastName")
    @JsonProperty("AdditionalLastName")
    @Nullable
    @ODataField(odataName = "AdditionalLastName")
    private String otherLastName;
    /**
     * Use with available fluent helpers to apply the <b>AdditionalLastName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> OTHER_LAST_NAME = new BusinessPartnerField<String>("AdditionalLastName");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>BirthDate</b></p>
     * 
     * @return
     *     Date of Birth of Business Partner
     */
    @SerializedName("BirthDate")
    @JsonProperty("BirthDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "BirthDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime dateOfBirth;
    /**
     * Use with available fluent helpers to apply the <b>BirthDate</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<LocalDateTime> DATE_OF_BIRTH = new BusinessPartnerField<LocalDateTime>("BirthDate");
    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>BusinessPartnerBirthDateStatus</b></p>
     * 
     * @return
     *     Date of Birth: Status
     */
    @SerializedName("BusinessPartnerBirthDateStatus")
    @JsonProperty("BusinessPartnerBirthDateStatus")
    @Nullable
    @ODataField(odataName = "BusinessPartnerBirthDateStatus")
    private String birthDateStatus;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerBirthDateStatus</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> BIRTH_DATE_STATUS = new BusinessPartnerField<String>("BusinessPartnerBirthDateStatus");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>BusinessPartnerBirthplaceName</b></p>
     * 
     * @return
     *     Birthplace of business partner
     */
    @SerializedName("BusinessPartnerBirthplaceName")
    @JsonProperty("BusinessPartnerBirthplaceName")
    @Nullable
    @ODataField(odataName = "BusinessPartnerBirthplaceName")
    private String birthplace;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerBirthplaceName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> BIRTHPLACE = new BusinessPartnerField<String>("BusinessPartnerBirthplaceName");
    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>BusinessPartnerDeathDate</b></p>
     * 
     * @return
     *     Date of death of business partner
     */
    @SerializedName("BusinessPartnerDeathDate")
    @JsonProperty("BusinessPartnerDeathDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "BusinessPartnerDeathDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime deathDate;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerDeathDate</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<LocalDateTime> DEATH_DATE = new BusinessPartnerField<LocalDateTime>("BusinessPartnerDeathDate");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>BusinessPartnerIsBlocked</b></p>
     * 
     * @return
     *     Central Block for Business Partner
     */
    @SerializedName("BusinessPartnerIsBlocked")
    @JsonProperty("BusinessPartnerIsBlocked")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "BusinessPartnerIsBlocked")
    private Boolean centralBlock;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerIsBlocked</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<Boolean> CENTRAL_BLOCK = new BusinessPartnerField<Boolean>("BusinessPartnerIsBlocked");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>BusinessPartnerType</b></p>
     * 
     * @return
     *     Business Partner Type
     */
    @SerializedName("BusinessPartnerType")
    @JsonProperty("BusinessPartnerType")
    @Nullable
    @ODataField(odataName = "BusinessPartnerType")
    private String bPType;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerType</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> BP_TYPE = new BusinessPartnerField<String>("BusinessPartnerType");
    /**
     * Constraints: Not nullable, Maximum length: 26 <p>Original property name from the Odata EDM: <b>ETag</b></p>
     * 
     * @return
     *     The eTag contained in this entity.
     */
    @SerializedName("ETag")
    @JsonProperty("ETag")
    @Nullable
    @ODataField(odataName = "ETag")
    private String eTag;
    /**
     * Use with available fluent helpers to apply the <b>ETag</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> E_TAG = new BusinessPartnerField<String>("ETag");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>GroupBusinessPartnerName1</b></p>
     * 
     * @return
     *     Name 1 (group)
     */
    @SerializedName("GroupBusinessPartnerName1")
    @JsonProperty("GroupBusinessPartnerName1")
    @Nullable
    @ODataField(odataName = "GroupBusinessPartnerName1")
    private String name1_2;
    /**
     * Use with available fluent helpers to apply the <b>GroupBusinessPartnerName1</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NAME1_2 = new BusinessPartnerField<String>("GroupBusinessPartnerName1");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>GroupBusinessPartnerName2</b></p>
     * 
     * @return
     *     Name 2 (group)
     */
    @SerializedName("GroupBusinessPartnerName2")
    @JsonProperty("GroupBusinessPartnerName2")
    @Nullable
    @ODataField(odataName = "GroupBusinessPartnerName2")
    private String name2_2;
    /**
     * Use with available fluent helpers to apply the <b>GroupBusinessPartnerName2</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NAME2_2 = new BusinessPartnerField<String>("GroupBusinessPartnerName2");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>IndependentAddressID</b></p>
     * 
     * @return
     *     Address Number
     */
    @SerializedName("IndependentAddressID")
    @JsonProperty("IndependentAddressID")
    @Nullable
    @ODataField(odataName = "IndependentAddressID")
    private String addressNumber;
    /**
     * Use with available fluent helpers to apply the <b>IndependentAddressID</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> ADDRESS_NUMBER = new BusinessPartnerField<String>("IndependentAddressID");
    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>InternationalLocationNumber3</b></p>
     * 
     * @return
     *     Check digit for the international location number
     */
    @SerializedName("InternationalLocationNumber3")
    @JsonProperty("InternationalLocationNumber3")
    @Nullable
    @ODataField(odataName = "InternationalLocationNumber3")
    private String checkDigit;
    /**
     * Use with available fluent helpers to apply the <b>InternationalLocationNumber3</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> CHECK_DIGIT = new BusinessPartnerField<String>("InternationalLocationNumber3");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>MiddleName</b></p>
     * 
     * @return
     *     Middle Name or Second Forename of a Person
     */
    @SerializedName("MiddleName")
    @JsonProperty("MiddleName")
    @Nullable
    @ODataField(odataName = "MiddleName")
    private String middleName;
    /**
     * Use with available fluent helpers to apply the <b>MiddleName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> MIDDLE_NAME = new BusinessPartnerField<String>("MiddleName");
    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>NameCountry</b></p>
     * 
     * @return
     *     Country/Region for Name Format Rule
     */
    @SerializedName("NameCountry")
    @JsonProperty("NameCountry")
    @Nullable
    @ODataField(odataName = "NameCountry")
    private String ctryRegForFormat;
    /**
     * Use with available fluent helpers to apply the <b>NameCountry</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> CTRY_REG_FOR_FORMAT = new BusinessPartnerField<String>("NameCountry");
    /**
     * Constraints: Not nullable, Maximum length: 2 <p>Original property name from the Odata EDM: <b>NameFormat</b></p>
     * 
     * @return
     *     Name format
     */
    @SerializedName("NameFormat")
    @JsonProperty("NameFormat")
    @Nullable
    @ODataField(odataName = "NameFormat")
    private String nameFormat;
    /**
     * Use with available fluent helpers to apply the <b>NameFormat</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NAME_FORMAT = new BusinessPartnerField<String>("NameFormat");
    /**
     * Constraints: Not nullable, Maximum length: 80 <p>Original property name from the Odata EDM: <b>PersonFullName</b></p>
     * 
     * @return
     *     Full Name
     */
    @SerializedName("PersonFullName")
    @JsonProperty("PersonFullName")
    @Nullable
    @ODataField(odataName = "PersonFullName")
    private String fullName;
    /**
     * Use with available fluent helpers to apply the <b>PersonFullName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> FULL_NAME = new BusinessPartnerField<String>("PersonFullName");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>PersonNumber</b></p>
     * 
     * @return
     *     Person Number
     */
    @SerializedName("PersonNumber")
    @JsonProperty("PersonNumber")
    @Nullable
    @ODataField(odataName = "PersonNumber")
    private String personNumber;
    /**
     * Use with available fluent helpers to apply the <b>PersonNumber</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> PERSON_NUMBER = new BusinessPartnerField<String>("PersonNumber");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsMarkedForArchiving</b></p>
     * 
     * @return
     *     Central Archiving Flag
     */
    @SerializedName("IsMarkedForArchiving")
    @JsonProperty("IsMarkedForArchiving")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "IsMarkedForArchiving")
    private Boolean archivingFlag;
    /**
     * Use with available fluent helpers to apply the <b>IsMarkedForArchiving</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<Boolean> ARCHIVING_FLAG = new BusinessPartnerField<Boolean>("IsMarkedForArchiving");
    /**
     * Constraints: Not nullable, Maximum length: 20 <p>Original property name from the Odata EDM: <b>BusinessPartnerIDByExtSystem</b></p>
     * 
     * @return
     *     Business Partner Number in External System
     */
    @SerializedName("BusinessPartnerIDByExtSystem")
    @JsonProperty("BusinessPartnerIDByExtSystem")
    @Nullable
    @ODataField(odataName = "BusinessPartnerIDByExtSystem")
    private String externalBPNumber;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerIDByExtSystem</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> EXTERNAL_BP_NUMBER = new BusinessPartnerField<String>("BusinessPartnerIDByExtSystem");
    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>BusinessPartnerPrintFormat</b></p>
     * 
     * @return
     *     Business Partner Print Format
     */
    @SerializedName("BusinessPartnerPrintFormat")
    @JsonProperty("BusinessPartnerPrintFormat")
    @Nullable
    @ODataField(odataName = "BusinessPartnerPrintFormat")
    private String printFormat;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerPrintFormat</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> PRINT_FORMAT = new BusinessPartnerField<String>("BusinessPartnerPrintFormat");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>BusinessPartnerOccupation</b></p>
     * 
     * @return
     *     Occupation/group
     */
    @SerializedName("BusinessPartnerOccupation")
    @JsonProperty("BusinessPartnerOccupation")
    @Nullable
    @ODataField(odataName = "BusinessPartnerOccupation")
    private String occupation;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerOccupation</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> OCCUPATION = new BusinessPartnerField<String>("BusinessPartnerOccupation");
    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>BusPartMaritalStatus</b></p>
     * 
     * @return
     *     Marital Status of Business Partner
     */
    @SerializedName("BusPartMaritalStatus")
    @JsonProperty("BusPartMaritalStatus")
    @Nullable
    @ODataField(odataName = "BusPartMaritalStatus")
    private String maritalStatus;
    /**
     * Use with available fluent helpers to apply the <b>BusPartMaritalStatus</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> MARITAL_STATUS = new BusinessPartnerField<String>("BusPartMaritalStatus");
    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>BusPartNationality</b></p>
     * 
     * @return
     *     Nationality
     */
    @SerializedName("BusPartNationality")
    @JsonProperty("BusPartNationality")
    @Nullable
    @ODataField(odataName = "BusPartNationality")
    private String nationality;
    /**
     * Use with available fluent helpers to apply the <b>BusPartNationality</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NATIONALITY = new BusinessPartnerField<String>("BusPartNationality");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>BusinessPartnerBirthName</b></p>
     * 
     * @return
     *     Name at birth of business partner
     */
    @SerializedName("BusinessPartnerBirthName")
    @JsonProperty("BusinessPartnerBirthName")
    @Nullable
    @ODataField(odataName = "BusinessPartnerBirthName")
    private String nameAtBirth;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerBirthName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NAME_AT_BIRTH = new BusinessPartnerField<String>("BusinessPartnerBirthName");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>BusinessPartnerSupplementName</b></p>
     * 
     * @return
     *     Name supplement, e.g. noble title (key)
     */
    @SerializedName("BusinessPartnerSupplementName")
    @JsonProperty("BusinessPartnerSupplementName")
    @Nullable
    @ODataField(odataName = "BusinessPartnerSupplementName")
    private String nameSupplement;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerSupplementName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> NAME_SUPPLEMENT = new BusinessPartnerField<String>("BusinessPartnerSupplementName");
    /**
     * Constraints: Not nullable, Maximum length: 35 <p>Original property name from the Odata EDM: <b>NaturalPersonEmployerName</b></p>
     * 
     * @return
     *     Name of Employer of a Natural Person
     */
    @SerializedName("NaturalPersonEmployerName")
    @JsonProperty("NaturalPersonEmployerName")
    @Nullable
    @ODataField(odataName = "NaturalPersonEmployerName")
    private String employer;
    /**
     * Use with available fluent helpers to apply the <b>NaturalPersonEmployerName</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> EMPLOYER = new BusinessPartnerField<String>("NaturalPersonEmployerName");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>LastNamePrefix</b></p>
     * 
     * @return
     *     Name Prefix (Key)
     */
    @SerializedName("LastNamePrefix")
    @JsonProperty("LastNamePrefix")
    @Nullable
    @ODataField(odataName = "LastNamePrefix")
    private String prefixKey;
    /**
     * Use with available fluent helpers to apply the <b>LastNamePrefix</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> PREFIX_KEY = new BusinessPartnerField<String>("LastNamePrefix");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>LastNameSecondPrefix</b></p>
     * 
     * @return
     *      2nd name prefix (key)
     */
    @SerializedName("LastNameSecondPrefix")
    @JsonProperty("LastNameSecondPrefix")
    @Nullable
    @ODataField(odataName = "LastNameSecondPrefix")
    private String ndPrefix;
    /**
     * Use with available fluent helpers to apply the <b>LastNameSecondPrefix</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> ND_PREFIX = new BusinessPartnerField<String>("LastNameSecondPrefix");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Initials</b></p>
     * 
     * @return
     *     "Middle Initial" or personal initials
     */
    @SerializedName("Initials")
    @JsonProperty("Initials")
    @Nullable
    @ODataField(odataName = "Initials")
    private String initials;
    /**
     * Use with available fluent helpers to apply the <b>Initials</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> INITIALS = new BusinessPartnerField<String>("Initials");
    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>BPDataControllerIsNotRequired</b></p>
     * 
     * @return
     *     BP: Data Controller Not Required
     */
    @SerializedName("BPDataControllerIsNotRequired")
    @JsonProperty("BPDataControllerIsNotRequired")
    @Nullable
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataBooleanAdapter.class)
    @ODataField(odataName = "BPDataControllerIsNotRequired")
    private Boolean dCNotRequired;
    /**
     * Use with available fluent helpers to apply the <b>BPDataControllerIsNotRequired</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<Boolean> DC_NOT_REQUIRED = new BusinessPartnerField<Boolean>("BPDataControllerIsNotRequired");
    /**
     * Constraints: Not nullable, Maximum length: 6 <p>Original property name from the Odata EDM: <b>TradingPartner</b></p>
     * 
     * @return
     *     Company ID of Trading Partner
     */
    @SerializedName("TradingPartner")
    @JsonProperty("TradingPartner")
    @Nullable
    @ODataField(odataName = "TradingPartner")
    private String tradingPartnerNo;
    /**
     * Use with available fluent helpers to apply the <b>TradingPartner</b> field to query operations.
     * 
     */
    public final static BusinessPartnerField<String> TRADING_PARTNER_NO = new BusinessPartnerField<String>("TradingPartner");
    /**
     * Navigation property <b>to_BPCreditWorthiness</b> for <b>BusinessPartner</b> to single <b>CreditWorthiness</b>.
     * 
     */
    @SerializedName("to_BPCreditWorthiness")
    @JsonProperty("to_BPCreditWorthiness")
    @ODataField(odataName = "to_BPCreditWorthiness")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private CreditWorthiness toBPCreditWorthiness;
    /**
     * Navigation property <b>to_BPDataController</b> for <b>BusinessPartner</b> to multiple <b>BusinessPartnerDataController</b>.
     * 
     */
    @SerializedName("to_BPDataController")
    @JsonProperty("to_BPDataController")
    @ODataField(odataName = "to_BPDataController")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<BusinessPartnerDataController> toBPDataController;
    /**
     * Navigation property <b>to_BPFinServicesReporting</b> for <b>BusinessPartner</b> to single <b>FinancialServicesReporting</b>.
     * 
     */
    @SerializedName("to_BPFinServicesReporting")
    @JsonProperty("to_BPFinServicesReporting")
    @ODataField(odataName = "to_BPFinServicesReporting")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private FinancialServicesReporting toBPFinServicesReporting;
    /**
     * Navigation property <b>to_BPFiscalYearInformation</b> for <b>BusinessPartner</b> to multiple <b>FiscalYearInformation</b>.
     * 
     */
    @SerializedName("to_BPFiscalYearInformation")
    @JsonProperty("to_BPFiscalYearInformation")
    @ODataField(odataName = "to_BPFiscalYearInformation")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<FiscalYearInformation> toBPFiscalYearInformation;
    /**
     * Navigation property <b>to_BPRelationship</b> for <b>BusinessPartner</b> to multiple <b>BusinessPartnerRelationship</b>.
     * 
     */
    @SerializedName("to_BPRelationship")
    @JsonProperty("to_BPRelationship")
    @ODataField(odataName = "to_BPRelationship")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<BusinessPartnerRelationship> toBPRelationship;
    /**
     * Navigation property <b>to_BuPaIdentification</b> for <b>BusinessPartner</b> to multiple <b>Identification</b>.
     * 
     */
    @SerializedName("to_BuPaIdentification")
    @JsonProperty("to_BuPaIdentification")
    @ODataField(odataName = "to_BuPaIdentification")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Identification> toBuPaIdentification;
    /**
     * Navigation property <b>to_BuPaIndustry</b> for <b>BusinessPartner</b> to multiple <b>Industry</b>.
     * 
     */
    @SerializedName("to_BuPaIndustry")
    @JsonProperty("to_BuPaIndustry")
    @ODataField(odataName = "to_BuPaIndustry")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Industry> toBuPaIndustry;
    /**
     * Navigation property <b>to_BusinessPartner</b> for <b>BusinessPartner</b> to single <b>FinancialServicesDetails</b>.
     * 
     */
    @SerializedName("to_BusinessPartner")
    @JsonProperty("to_BusinessPartner")
    @ODataField(odataName = "to_BusinessPartner")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private FinancialServicesDetails toBusinessPartner;
    /**
     * Navigation property <b>to_BusinessPartnerAddress</b> for <b>BusinessPartner</b> to multiple <b>Address</b>.
     * 
     */
    @SerializedName("to_BusinessPartnerAddress")
    @JsonProperty("to_BusinessPartnerAddress")
    @ODataField(odataName = "to_BusinessPartnerAddress")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Address> toBusinessPartnerAddress;
    /**
     * Navigation property <b>to_BusinessPartnerBank</b> for <b>BusinessPartner</b> to multiple <b>Bank</b>.
     * 
     */
    @SerializedName("to_BusinessPartnerBank")
    @JsonProperty("to_BusinessPartnerBank")
    @ODataField(odataName = "to_BusinessPartnerBank")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Bank> toBusinessPartnerBank;
    /**
     * Navigation property <b>to_BusinessPartnerContact</b> for <b>BusinessPartner</b> to multiple <b>Contact</b>.
     * 
     */
    @SerializedName("to_BusinessPartnerContact")
    @JsonProperty("to_BusinessPartnerContact")
    @ODataField(odataName = "to_BusinessPartnerContact")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Contact> toBusinessPartnerContact;
    /**
     * Navigation property <b>to_BusinessPartnerRating</b> for <b>BusinessPartner</b> to multiple <b>Ratings</b>.
     * 
     */
    @SerializedName("to_BusinessPartnerRating")
    @JsonProperty("to_BusinessPartnerRating")
    @ODataField(odataName = "to_BusinessPartnerRating")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Ratings> toBusinessPartnerRating;
    /**
     * Navigation property <b>to_BusinessPartnerRole</b> for <b>BusinessPartner</b> to multiple <b>Role</b>.
     * 
     */
    @SerializedName("to_BusinessPartnerRole")
    @JsonProperty("to_BusinessPartnerRole")
    @ODataField(odataName = "to_BusinessPartnerRole")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<Role> toBusinessPartnerRole;
    /**
     * Navigation property <b>to_BusinessPartnerTax</b> for <b>BusinessPartner</b> to multiple <b>TaxNumber</b>.
     * 
     */
    @SerializedName("to_BusinessPartnerTax")
    @JsonProperty("to_BusinessPartnerTax")
    @ODataField(odataName = "to_BusinessPartnerTax")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<TaxNumber> toBusinessPartnerTax;
    /**
     * Navigation property <b>to_BusPartAddrDepdntTaxNmbr</b> for <b>BusinessPartner</b> to multiple <b>BusinessPartnerAddressDependentTaxNumbers</b>.
     * 
     */
    @SerializedName("to_BusPartAddrDepdntTaxNmbr")
    @JsonProperty("to_BusPartAddrDepdntTaxNmbr")
    @ODataField(odataName = "to_BusPartAddrDepdntTaxNmbr")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<BusinessPartnerAddressDependentTaxNumbers> toBusPartAddrDepdntTaxNmbr;
    /**
     * Navigation property <b>to_Customer</b> for <b>BusinessPartner</b> to single <b>Customer</b>.
     * 
     */
    @SerializedName("to_Customer")
    @JsonProperty("to_Customer")
    @ODataField(odataName = "to_Customer")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private Customer toCustomer;
    /**
     * Navigation property <b>to_PaymentCard</b> for <b>BusinessPartner</b> to multiple <b>BusinessPartnerPaymentCard</b>.
     * 
     */
    @SerializedName("to_PaymentCard")
    @JsonProperty("to_PaymentCard")
    @ODataField(odataName = "to_PaymentCard")
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private List<BusinessPartnerPaymentCard> toPaymentCard;
    /**
     * Navigation property <b>to_Supplier</b> for <b>BusinessPartner</b> to single <b>Supplier</b>.
     * 
     */
    @SerializedName("to_Supplier")
    @JsonProperty("to_Supplier")
    @ODataField(odataName = "to_Supplier")
    @Nullable
    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    private Supplier toSupplier;
    /**
     * Use with available fluent helpers to apply the <b>to_BPCreditWorthiness</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerOneToOneLink<CreditWorthiness> TO_BP_CREDIT_WORTHINESS = new BusinessPartnerOneToOneLink<CreditWorthiness>("to_BPCreditWorthiness");
    /**
     * Use with available fluent helpers to apply the <b>to_BPDataController</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<BusinessPartnerDataController> TO_BP_DATA_CONTROLLER = new BusinessPartnerLink<BusinessPartnerDataController>("to_BPDataController");
    /**
     * Use with available fluent helpers to apply the <b>to_BPFinServicesReporting</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerOneToOneLink<FinancialServicesReporting> TO_BP_FIN_SERVICES_REPORTING = new BusinessPartnerOneToOneLink<FinancialServicesReporting>("to_BPFinServicesReporting");
    /**
     * Use with available fluent helpers to apply the <b>to_BPFiscalYearInformation</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<FiscalYearInformation> TO_BP_FISCAL_YEAR_INFORMATION = new BusinessPartnerLink<FiscalYearInformation>("to_BPFiscalYearInformation");
    /**
     * Use with available fluent helpers to apply the <b>to_BPRelationship</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<BusinessPartnerRelationship> TO_BP_RELATIONSHIP = new BusinessPartnerLink<BusinessPartnerRelationship>("to_BPRelationship");
    /**
     * Use with available fluent helpers to apply the <b>to_BuPaIdentification</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<Identification> TO_BU_PA_IDENTIFICATION = new BusinessPartnerLink<Identification>("to_BuPaIdentification");
    /**
     * Use with available fluent helpers to apply the <b>to_BuPaIndustry</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<Industry> TO_BU_PA_INDUSTRY = new BusinessPartnerLink<Industry>("to_BuPaIndustry");
    /**
     * Use with available fluent helpers to apply the <b>to_BusinessPartner</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerOneToOneLink<FinancialServicesDetails> TO_BUSINESS_PARTNER = new BusinessPartnerOneToOneLink<FinancialServicesDetails>("to_BusinessPartner");
    /**
     * Use with available fluent helpers to apply the <b>to_BusinessPartnerAddress</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<Address> TO_BUSINESS_PARTNER_ADDRESS = new BusinessPartnerLink<Address>("to_BusinessPartnerAddress");
    /**
     * Use with available fluent helpers to apply the <b>to_BusinessPartnerBank</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<Bank> TO_BUSINESS_PARTNER_BANK = new BusinessPartnerLink<Bank>("to_BusinessPartnerBank");
    /**
     * Use with available fluent helpers to apply the <b>to_BusinessPartnerContact</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<Contact> TO_BUSINESS_PARTNER_CONTACT = new BusinessPartnerLink<Contact>("to_BusinessPartnerContact");
    /**
     * Use with available fluent helpers to apply the <b>to_BusinessPartnerRating</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<Ratings> TO_BUSINESS_PARTNER_RATING = new BusinessPartnerLink<Ratings>("to_BusinessPartnerRating");
    /**
     * Use with available fluent helpers to apply the <b>to_BusinessPartnerRole</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<Role> TO_BUSINESS_PARTNER_ROLE = new BusinessPartnerLink<Role>("to_BusinessPartnerRole");
    /**
     * Use with available fluent helpers to apply the <b>to_BusinessPartnerTax</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<TaxNumber> TO_BUSINESS_PARTNER_TAX = new BusinessPartnerLink<TaxNumber>("to_BusinessPartnerTax");
    /**
     * Use with available fluent helpers to apply the <b>to_BusPartAddrDepdntTaxNmbr</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<BusinessPartnerAddressDependentTaxNumbers> TO_BUS_PART_ADDR_DEPDNT_TAX_NMBR = new BusinessPartnerLink<BusinessPartnerAddressDependentTaxNumbers>("to_BusPartAddrDepdntTaxNmbr");
    /**
     * Use with available fluent helpers to apply the <b>to_Customer</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerOneToOneLink<Customer> TO_CUSTOMER = new BusinessPartnerOneToOneLink<Customer>("to_Customer");
    /**
     * Use with available fluent helpers to apply the <b>to_PaymentCard</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerLink<BusinessPartnerPaymentCard> TO_PAYMENT_CARD = new BusinessPartnerLink<BusinessPartnerPaymentCard>("to_PaymentCard");
    /**
     * Use with available fluent helpers to apply the <b>to_Supplier</b> navigation property to query operations.
     * 
     */
    public final static BusinessPartnerOneToOneLink<Supplier> TO_SUPPLIER = new BusinessPartnerOneToOneLink<Supplier>("to_Supplier");

    @Nonnull
    @Override
    public Class<BusinessPartner> getType() {
        return BusinessPartner.class;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartner</b></p>
     * 
     * @param businessPartner
     *     Business Partner Number
     */
    public void setBusinessPartner(
        @Nullable
        final String businessPartner) {
        rememberChangedField("BusinessPartner", this.businessPartner);
        this.businessPartner = businessPartner;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Customer</b></p>
     * 
     * @param customer
     *     Customer Number
     */
    public void setCustomer(
        @Nullable
        final String customer) {
        rememberChangedField("Customer", this.customer);
        this.customer = customer;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Supplier</b></p>
     * 
     * @param supplier
     *     Account Number of Supplier
     */
    public void setSupplier(
        @Nullable
        final String supplier) {
        rememberChangedField("Supplier", this.supplier);
        this.supplier = supplier;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>AcademicTitle</b></p>
     * 
     * @param academicTitle1
     *     Academic Title: Key
     */
    public void setAcademicTitle1(
        @Nullable
        final String academicTitle1) {
        rememberChangedField("AcademicTitle", this.academicTitle1);
        this.academicTitle1 = academicTitle1;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>AuthorizationGroup</b></p>
     * 
     * @param authorizationGroup
     *     Authorization Group
     */
    public void setAuthorizationGroup(
        @Nullable
        final String authorizationGroup) {
        rememberChangedField("AuthorizationGroup", this.authorizationGroup);
        this.authorizationGroup = authorizationGroup;
    }

    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>BusinessPartnerCategory</b></p>
     * 
     * @param bPCategory
     *     Business Partner Category
     */
    public void setBPCategory(
        @Nullable
        final String bPCategory) {
        rememberChangedField("BusinessPartnerCategory", this.bPCategory);
        this.bPCategory = bPCategory;
    }

    /**
     * Constraints: Not nullable, Maximum length: 81 <p>Original property name from the Odata EDM: <b>BusinessPartnerFullName</b></p>
     * 
     * @param businessPartnerFullName
     *     The businessPartnerFullName to set.
     */
    public void setBusinessPartnerFullName(
        @Nullable
        final String businessPartnerFullName) {
        rememberChangedField("BusinessPartnerFullName", this.businessPartnerFullName);
        this.businessPartnerFullName = businessPartnerFullName;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>BusinessPartnerGrouping</b></p>
     * 
     * @param grouping
     *     Business Partner Grouping
     */
    public void setGrouping(
        @Nullable
        final String grouping) {
        rememberChangedField("BusinessPartnerGrouping", this.grouping);
        this.grouping = grouping;
    }

    /**
     * Constraints: Not nullable, Maximum length: 81 <p>Original property name from the Odata EDM: <b>BusinessPartnerName</b></p>
     * 
     * @param businessPartnerName
     *     The businessPartnerName to set.
     */
    public void setBusinessPartnerName(
        @Nullable
        final String businessPartnerName) {
        rememberChangedField("BusinessPartnerName", this.businessPartnerName);
        this.businessPartnerName = businessPartnerName;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>BusinessPartnerUUID</b></p>
     * 
     * @param bPGUID
     *     Business Partner GUID
     */
    public void setBPGUID(
        @Nullable
        final UUID bPGUID) {
        rememberChangedField("BusinessPartnerUUID", this.bPGUID);
        this.bPGUID = bPGUID;
    }

    /**
     * Constraints: Not nullable, Maximum length: 2 <p>Original property name from the Odata EDM: <b>CorrespondenceLanguage</b></p>
     * 
     * @param correspondenceLang
     *     Business Partner: Correspondence Language
     */
    public void setCorrespondenceLang(
        @Nullable
        final String correspondenceLang) {
        rememberChangedField("CorrespondenceLanguage", this.correspondenceLang);
        this.correspondenceLang = correspondenceLang;
    }

    /**
     * Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>CreatedByUser</b></p>
     * 
     * @param createdBy
     *     User who created the object
     */
    public void setCreatedBy(
        @Nullable
        final String createdBy) {
        rememberChangedField("CreatedByUser", this.createdBy);
        this.createdBy = createdBy;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>CreationDate</b></p>
     * 
     * @param createdOn
     *     Date on which the object was created
     */
    public void setCreatedOn(
        @Nullable
        final LocalDateTime createdOn) {
        rememberChangedField("CreationDate", this.createdOn);
        this.createdOn = createdOn;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>CreationTime</b></p>
     * 
     * @param createdAt
     *     Time at which the object was created
     */
    public void setCreatedAt(
        @Nullable
        final LocalTime createdAt) {
        rememberChangedField("CreationTime", this.createdAt);
        this.createdAt = createdAt;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>FirstName</b></p>
     * 
     * @param firstName
     *     First Name of Business Partner (Person)
     */
    public void setFirstName(
        @Nullable
        final String firstName) {
        rememberChangedField("FirstName", this.firstName);
        this.firstName = firstName;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>FormOfAddress</b></p>
     * 
     * @param titleKey
     *     Form-of-Address Key
     */
    public void setTitleKey(
        @Nullable
        final String titleKey) {
        rememberChangedField("FormOfAddress", this.titleKey);
        this.titleKey = titleKey;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Industry</b></p>
     * 
     * @param industrySector
     *     Industry sector
     */
    public void setIndustrySector(
        @Nullable
        final String industrySector) {
        rememberChangedField("Industry", this.industrySector);
        this.industrySector = industrySector;
    }

    /**
     * Constraints: Not nullable, Maximum length: 7 <p>Original property name from the Odata EDM: <b>InternationalLocationNumber1</b></p>
     * 
     * @param intLocationNo1
     *     International location number  (part 1)
     */
    public void setIntLocationNo1(
        @Nullable
        final String intLocationNo1) {
        rememberChangedField("InternationalLocationNumber1", this.intLocationNo1);
        this.intLocationNo1 = intLocationNo1;
    }

    /**
     * Constraints: Not nullable, Maximum length: 5 <p>Original property name from the Odata EDM: <b>InternationalLocationNumber2</b></p>
     * 
     * @param intLocationNo2
     *     International location number (Part 2)
     */
    public void setIntLocationNo2(
        @Nullable
        final String intLocationNo2) {
        rememberChangedField("InternationalLocationNumber2", this.intLocationNo2);
        this.intLocationNo2 = intLocationNo2;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsFemale</b></p>
     * 
     * @param female
     *     Selection: Business partner is female
     */
    public void setFemale(
        @Nullable
        final Boolean female) {
        rememberChangedField("IsFemale", this.female);
        this.female = female;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsMale</b></p>
     * 
     * @param male
     *     Selection: Business partner is male
     */
    public void setMale(
        @Nullable
        final Boolean male) {
        rememberChangedField("IsMale", this.male);
        this.male = male;
    }

    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>IsNaturalPerson</b></p>
     * 
     * @param naturalPerson
     *     Business Partner Is a Natural Person Under the Tax Laws
     */
    public void setNaturalPerson(
        @Nullable
        final String naturalPerson) {
        rememberChangedField("IsNaturalPerson", this.naturalPerson);
        this.naturalPerson = naturalPerson;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsSexUnknown</b></p>
     * 
     * @param unknown
     *     Selection: Sex of business partner is not known
     */
    public void setUnknown(
        @Nullable
        final Boolean unknown) {
        rememberChangedField("IsSexUnknown", this.unknown);
        this.unknown = unknown;
    }

    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>GenderCodeName</b></p>
     * 
     * @param gender
     *     Gender of Business Partner (Person)
     */
    public void setGender(
        @Nullable
        final String gender) {
        rememberChangedField("GenderCodeName", this.gender);
        this.gender = gender;
    }

    /**
     * Constraints: Not nullable, Maximum length: 2 <p>Original property name from the Odata EDM: <b>Language</b></p>
     * 
     * @param language
     *     Business partner: Language
     */
    public void setLanguage(
        @Nullable
        final String language) {
        rememberChangedField("Language", this.language);
        this.language = language;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>LastChangeDate</b></p>
     * 
     * @param changedOn
     *     Date when object was last changed
     */
    public void setChangedOn(
        @Nullable
        final LocalDateTime changedOn) {
        rememberChangedField("LastChangeDate", this.changedOn);
        this.changedOn = changedOn;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>LastChangeTime</b></p>
     * 
     * @param changedAt
     *     Time at which object was last changed
     */
    public void setChangedAt(
        @Nullable
        final LocalTime changedAt) {
        rememberChangedField("LastChangeTime", this.changedAt);
        this.changedAt = changedAt;
    }

    /**
     * Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>LastChangedByUser</b></p>
     * 
     * @param changedBy
     *     Last user to change object
     */
    public void setChangedBy(
        @Nullable
        final String changedBy) {
        rememberChangedField("LastChangedByUser", this.changedBy);
        this.changedBy = changedBy;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>LastName</b></p>
     * 
     * @param lastName
     *     Last Name of Business Partner (Person)
     */
    public void setLastName(
        @Nullable
        final String lastName) {
        rememberChangedField("LastName", this.lastName);
        this.lastName = lastName;
    }

    /**
     * Constraints: Not nullable, Maximum length: 2 <p>Original property name from the Odata EDM: <b>LegalForm</b></p>
     * 
     * @param legalForm
     *     BP: Legal form of organization
     */
    public void setLegalForm(
        @Nullable
        final String legalForm) {
        rememberChangedField("LegalForm", this.legalForm);
        this.legalForm = legalForm;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>OrganizationBPName1</b></p>
     * 
     * @param name1
     *     Name 1 of organization
     */
    public void setName1(
        @Nullable
        final String name1) {
        rememberChangedField("OrganizationBPName1", this.name1);
        this.name1 = name1;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>OrganizationBPName2</b></p>
     * 
     * @param name2
     *     Name 2 of organization
     */
    public void setName2(
        @Nullable
        final String name2) {
        rememberChangedField("OrganizationBPName2", this.name2);
        this.name2 = name2;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>OrganizationBPName3</b></p>
     * 
     * @param name3
     *     Name 3 of organization
     */
    public void setName3(
        @Nullable
        final String name3) {
        rememberChangedField("OrganizationBPName3", this.name3);
        this.name3 = name3;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>OrganizationBPName4</b></p>
     * 
     * @param name4
     *     Name 4 of organization
     */
    public void setName4(
        @Nullable
        final String name4) {
        rememberChangedField("OrganizationBPName4", this.name4);
        this.name4 = name4;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>OrganizationFoundationDate</b></p>
     * 
     * @param dateFounded
     *     Date organization founded
     */
    public void setDateFounded(
        @Nullable
        final LocalDateTime dateFounded) {
        rememberChangedField("OrganizationFoundationDate", this.dateFounded);
        this.dateFounded = dateFounded;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>OrganizationLiquidationDate</b></p>
     * 
     * @param liquidationDate
     *     Liquidation date of organization
     */
    public void setLiquidationDate(
        @Nullable
        final LocalDateTime liquidationDate) {
        rememberChangedField("OrganizationLiquidationDate", this.liquidationDate);
        this.liquidationDate = liquidationDate;
    }

    /**
     * Constraints: Not nullable, Maximum length: 20 <p>Original property name from the Odata EDM: <b>SearchTerm1</b></p>
     * 
     * @param searchTerm1
     *     Search Term 1 for Business Partner
     */
    public void setSearchTerm1(
        @Nullable
        final String searchTerm1) {
        rememberChangedField("SearchTerm1", this.searchTerm1);
        this.searchTerm1 = searchTerm1;
    }

    /**
     * Constraints: Not nullable, Maximum length: 20 <p>Original property name from the Odata EDM: <b>SearchTerm2</b></p>
     * 
     * @param searchTerm2
     *     Search Term 2 for Business Partner
     */
    public void setSearchTerm2(
        @Nullable
        final String searchTerm2) {
        rememberChangedField("SearchTerm2", this.searchTerm2);
        this.searchTerm2 = searchTerm2;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>AdditionalLastName</b></p>
     * 
     * @param otherLastName
     *     Other Last Name of a Person
     */
    public void setOtherLastName(
        @Nullable
        final String otherLastName) {
        rememberChangedField("AdditionalLastName", this.otherLastName);
        this.otherLastName = otherLastName;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>BirthDate</b></p>
     * 
     * @param dateOfBirth
     *     Date of Birth of Business Partner
     */
    public void setDateOfBirth(
        @Nullable
        final LocalDateTime dateOfBirth) {
        rememberChangedField("BirthDate", this.dateOfBirth);
        this.dateOfBirth = dateOfBirth;
    }

    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>BusinessPartnerBirthDateStatus</b></p>
     * 
     * @param birthDateStatus
     *     Date of Birth: Status
     */
    public void setBirthDateStatus(
        @Nullable
        final String birthDateStatus) {
        rememberChangedField("BusinessPartnerBirthDateStatus", this.birthDateStatus);
        this.birthDateStatus = birthDateStatus;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>BusinessPartnerBirthplaceName</b></p>
     * 
     * @param birthplace
     *     Birthplace of business partner
     */
    public void setBirthplace(
        @Nullable
        final String birthplace) {
        rememberChangedField("BusinessPartnerBirthplaceName", this.birthplace);
        this.birthplace = birthplace;
    }

    /**
     * Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>BusinessPartnerDeathDate</b></p>
     * 
     * @param deathDate
     *     Date of death of business partner
     */
    public void setDeathDate(
        @Nullable
        final LocalDateTime deathDate) {
        rememberChangedField("BusinessPartnerDeathDate", this.deathDate);
        this.deathDate = deathDate;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>BusinessPartnerIsBlocked</b></p>
     * 
     * @param centralBlock
     *     Central Block for Business Partner
     */
    public void setCentralBlock(
        @Nullable
        final Boolean centralBlock) {
        rememberChangedField("BusinessPartnerIsBlocked", this.centralBlock);
        this.centralBlock = centralBlock;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>BusinessPartnerType</b></p>
     * 
     * @param bPType
     *     Business Partner Type
     */
    public void setBPType(
        @Nullable
        final String bPType) {
        rememberChangedField("BusinessPartnerType", this.bPType);
        this.bPType = bPType;
    }

    /**
     * Constraints: Not nullable, Maximum length: 26 <p>Original property name from the Odata EDM: <b>ETag</b></p>
     * 
     * @param eTag
     *     The eTag to set.
     */
    public void setETag(
        @Nullable
        final String eTag) {
        rememberChangedField("ETag", this.eTag);
        this.eTag = eTag;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>GroupBusinessPartnerName1</b></p>
     * 
     * @param name1_2
     *     Name 1 (group)
     */
    public void setName1_2(
        @Nullable
        final String name1_2) {
        rememberChangedField("GroupBusinessPartnerName1", this.name1_2);
        this.name1_2 = name1_2;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>GroupBusinessPartnerName2</b></p>
     * 
     * @param name2_2
     *     Name 2 (group)
     */
    public void setName2_2(
        @Nullable
        final String name2_2) {
        rememberChangedField("GroupBusinessPartnerName2", this.name2_2);
        this.name2_2 = name2_2;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>IndependentAddressID</b></p>
     * 
     * @param addressNumber
     *     Address Number
     */
    public void setAddressNumber(
        @Nullable
        final String addressNumber) {
        rememberChangedField("IndependentAddressID", this.addressNumber);
        this.addressNumber = addressNumber;
    }

    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>InternationalLocationNumber3</b></p>
     * 
     * @param checkDigit
     *     Check digit for the international location number
     */
    public void setCheckDigit(
        @Nullable
        final String checkDigit) {
        rememberChangedField("InternationalLocationNumber3", this.checkDigit);
        this.checkDigit = checkDigit;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>MiddleName</b></p>
     * 
     * @param middleName
     *     Middle Name or Second Forename of a Person
     */
    public void setMiddleName(
        @Nullable
        final String middleName) {
        rememberChangedField("MiddleName", this.middleName);
        this.middleName = middleName;
    }

    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>NameCountry</b></p>
     * 
     * @param ctryRegForFormat
     *     Country/Region for Name Format Rule
     */
    public void setCtryRegForFormat(
        @Nullable
        final String ctryRegForFormat) {
        rememberChangedField("NameCountry", this.ctryRegForFormat);
        this.ctryRegForFormat = ctryRegForFormat;
    }

    /**
     * Constraints: Not nullable, Maximum length: 2 <p>Original property name from the Odata EDM: <b>NameFormat</b></p>
     * 
     * @param nameFormat
     *     Name format
     */
    public void setNameFormat(
        @Nullable
        final String nameFormat) {
        rememberChangedField("NameFormat", this.nameFormat);
        this.nameFormat = nameFormat;
    }

    /**
     * Constraints: Not nullable, Maximum length: 80 <p>Original property name from the Odata EDM: <b>PersonFullName</b></p>
     * 
     * @param fullName
     *     Full Name
     */
    public void setFullName(
        @Nullable
        final String fullName) {
        rememberChangedField("PersonFullName", this.fullName);
        this.fullName = fullName;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>PersonNumber</b></p>
     * 
     * @param personNumber
     *     Person Number
     */
    public void setPersonNumber(
        @Nullable
        final String personNumber) {
        rememberChangedField("PersonNumber", this.personNumber);
        this.personNumber = personNumber;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>IsMarkedForArchiving</b></p>
     * 
     * @param archivingFlag
     *     Central Archiving Flag
     */
    public void setArchivingFlag(
        @Nullable
        final Boolean archivingFlag) {
        rememberChangedField("IsMarkedForArchiving", this.archivingFlag);
        this.archivingFlag = archivingFlag;
    }

    /**
     * Constraints: Not nullable, Maximum length: 20 <p>Original property name from the Odata EDM: <b>BusinessPartnerIDByExtSystem</b></p>
     * 
     * @param externalBPNumber
     *     Business Partner Number in External System
     */
    public void setExternalBPNumber(
        @Nullable
        final String externalBPNumber) {
        rememberChangedField("BusinessPartnerIDByExtSystem", this.externalBPNumber);
        this.externalBPNumber = externalBPNumber;
    }

    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>BusinessPartnerPrintFormat</b></p>
     * 
     * @param printFormat
     *     Business Partner Print Format
     */
    public void setPrintFormat(
        @Nullable
        final String printFormat) {
        rememberChangedField("BusinessPartnerPrintFormat", this.printFormat);
        this.printFormat = printFormat;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>BusinessPartnerOccupation</b></p>
     * 
     * @param occupation
     *     Occupation/group
     */
    public void setOccupation(
        @Nullable
        final String occupation) {
        rememberChangedField("BusinessPartnerOccupation", this.occupation);
        this.occupation = occupation;
    }

    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>BusPartMaritalStatus</b></p>
     * 
     * @param maritalStatus
     *     Marital Status of Business Partner
     */
    public void setMaritalStatus(
        @Nullable
        final String maritalStatus) {
        rememberChangedField("BusPartMaritalStatus", this.maritalStatus);
        this.maritalStatus = maritalStatus;
    }

    /**
     * Constraints: Not nullable, Maximum length: 3 <p>Original property name from the Odata EDM: <b>BusPartNationality</b></p>
     * 
     * @param nationality
     *     Nationality
     */
    public void setNationality(
        @Nullable
        final String nationality) {
        rememberChangedField("BusPartNationality", this.nationality);
        this.nationality = nationality;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>BusinessPartnerBirthName</b></p>
     * 
     * @param nameAtBirth
     *     Name at birth of business partner
     */
    public void setNameAtBirth(
        @Nullable
        final String nameAtBirth) {
        rememberChangedField("BusinessPartnerBirthName", this.nameAtBirth);
        this.nameAtBirth = nameAtBirth;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>BusinessPartnerSupplementName</b></p>
     * 
     * @param nameSupplement
     *     Name supplement, e.g. noble title (key)
     */
    public void setNameSupplement(
        @Nullable
        final String nameSupplement) {
        rememberChangedField("BusinessPartnerSupplementName", this.nameSupplement);
        this.nameSupplement = nameSupplement;
    }

    /**
     * Constraints: Not nullable, Maximum length: 35 <p>Original property name from the Odata EDM: <b>NaturalPersonEmployerName</b></p>
     * 
     * @param employer
     *     Name of Employer of a Natural Person
     */
    public void setEmployer(
        @Nullable
        final String employer) {
        rememberChangedField("NaturalPersonEmployerName", this.employer);
        this.employer = employer;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>LastNamePrefix</b></p>
     * 
     * @param prefixKey
     *     Name Prefix (Key)
     */
    public void setPrefixKey(
        @Nullable
        final String prefixKey) {
        rememberChangedField("LastNamePrefix", this.prefixKey);
        this.prefixKey = prefixKey;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>LastNameSecondPrefix</b></p>
     * 
     * @param ndPrefix
     *      2nd name prefix (key)
     */
    public void setNdPrefix(
        @Nullable
        final String ndPrefix) {
        rememberChangedField("LastNameSecondPrefix", this.ndPrefix);
        this.ndPrefix = ndPrefix;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Initials</b></p>
     * 
     * @param initials
     *     "Middle Initial" or personal initials
     */
    public void setInitials(
        @Nullable
        final String initials) {
        rememberChangedField("Initials", this.initials);
        this.initials = initials;
    }

    /**
     * Constraints: none<p>Original property name from the Odata EDM: <b>BPDataControllerIsNotRequired</b></p>
     * 
     * @param dCNotRequired
     *     BP: Data Controller Not Required
     */
    public void setDCNotRequired(
        @Nullable
        final Boolean dCNotRequired) {
        rememberChangedField("BPDataControllerIsNotRequired", this.dCNotRequired);
        this.dCNotRequired = dCNotRequired;
    }

    /**
     * Constraints: Not nullable, Maximum length: 6 <p>Original property name from the Odata EDM: <b>TradingPartner</b></p>
     * 
     * @param tradingPartnerNo
     *     Company ID of Trading Partner
     */
    public void setTradingPartnerNo(
        @Nullable
        final String tradingPartnerNo) {
        rememberChangedField("TradingPartner", this.tradingPartnerNo);
        this.tradingPartnerNo = tradingPartnerNo;
    }

    @Override
    protected String getEntityCollection() {
        return "A_BusinessPartner";
    }

    @Nonnull
    @Override
    protected Map<String, Object> getKey() {
        final Map<String, Object> result = Maps.newHashMap();
        result.put("BusinessPartner", getBusinessPartner());
        return result;
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfFields() {
        final Map<String, Object> values = super.toMapOfFields();
        values.put("BusinessPartner", getBusinessPartner());
        values.put("Customer", getCustomer());
        values.put("Supplier", getSupplier());
        values.put("AcademicTitle", getAcademicTitle1());
        values.put("AuthorizationGroup", getAuthorizationGroup());
        values.put("BusinessPartnerCategory", getBPCategory());
        values.put("BusinessPartnerFullName", getBusinessPartnerFullName());
        values.put("BusinessPartnerGrouping", getGrouping());
        values.put("BusinessPartnerName", getBusinessPartnerName());
        values.put("BusinessPartnerUUID", getBPGUID());
        values.put("CorrespondenceLanguage", getCorrespondenceLang());
        values.put("CreatedByUser", getCreatedBy());
        values.put("CreationDate", getCreatedOn());
        values.put("CreationTime", getCreatedAt());
        values.put("FirstName", getFirstName());
        values.put("FormOfAddress", getTitleKey());
        values.put("Industry", getIndustrySector());
        values.put("InternationalLocationNumber1", getIntLocationNo1());
        values.put("InternationalLocationNumber2", getIntLocationNo2());
        values.put("IsFemale", getFemale());
        values.put("IsMale", getMale());
        values.put("IsNaturalPerson", getNaturalPerson());
        values.put("IsSexUnknown", getUnknown());
        values.put("GenderCodeName", getGender());
        values.put("Language", getLanguage());
        values.put("LastChangeDate", getChangedOn());
        values.put("LastChangeTime", getChangedAt());
        values.put("LastChangedByUser", getChangedBy());
        values.put("LastName", getLastName());
        values.put("LegalForm", getLegalForm());
        values.put("OrganizationBPName1", getName1());
        values.put("OrganizationBPName2", getName2());
        values.put("OrganizationBPName3", getName3());
        values.put("OrganizationBPName4", getName4());
        values.put("OrganizationFoundationDate", getDateFounded());
        values.put("OrganizationLiquidationDate", getLiquidationDate());
        values.put("SearchTerm1", getSearchTerm1());
        values.put("SearchTerm2", getSearchTerm2());
        values.put("AdditionalLastName", getOtherLastName());
        values.put("BirthDate", getDateOfBirth());
        values.put("BusinessPartnerBirthDateStatus", getBirthDateStatus());
        values.put("BusinessPartnerBirthplaceName", getBirthplace());
        values.put("BusinessPartnerDeathDate", getDeathDate());
        values.put("BusinessPartnerIsBlocked", getCentralBlock());
        values.put("BusinessPartnerType", getBPType());
        values.put("ETag", getETag());
        values.put("GroupBusinessPartnerName1", getName1_2());
        values.put("GroupBusinessPartnerName2", getName2_2());
        values.put("IndependentAddressID", getAddressNumber());
        values.put("InternationalLocationNumber3", getCheckDigit());
        values.put("MiddleName", getMiddleName());
        values.put("NameCountry", getCtryRegForFormat());
        values.put("NameFormat", getNameFormat());
        values.put("PersonFullName", getFullName());
        values.put("PersonNumber", getPersonNumber());
        values.put("IsMarkedForArchiving", getArchivingFlag());
        values.put("BusinessPartnerIDByExtSystem", getExternalBPNumber());
        values.put("BusinessPartnerPrintFormat", getPrintFormat());
        values.put("BusinessPartnerOccupation", getOccupation());
        values.put("BusPartMaritalStatus", getMaritalStatus());
        values.put("BusPartNationality", getNationality());
        values.put("BusinessPartnerBirthName", getNameAtBirth());
        values.put("BusinessPartnerSupplementName", getNameSupplement());
        values.put("NaturalPersonEmployerName", getEmployer());
        values.put("LastNamePrefix", getPrefixKey());
        values.put("LastNameSecondPrefix", getNdPrefix());
        values.put("Initials", getInitials());
        values.put("BPDataControllerIsNotRequired", getDCNotRequired());
        values.put("TradingPartner", getTradingPartnerNo());
        return values;
    }

    @Override
    protected void fromMap(final Map<String, Object> inputValues) {
        final Map<String, Object> values = Maps.newHashMap(inputValues);
        // simple properties
        {
            if (values.containsKey("BusinessPartner")) {
                final Object value = values.remove("BusinessPartner");
                if ((value == null)||(!value.equals(getBusinessPartner()))) {
                    setBusinessPartner(((String) value));
                }
            }
            if (values.containsKey("Customer")) {
                final Object value = values.remove("Customer");
                if ((value == null)||(!value.equals(getCustomer()))) {
                    setCustomer(((String) value));
                }
            }
            if (values.containsKey("Supplier")) {
                final Object value = values.remove("Supplier");
                if ((value == null)||(!value.equals(getSupplier()))) {
                    setSupplier(((String) value));
                }
            }
            if (values.containsKey("AcademicTitle")) {
                final Object value = values.remove("AcademicTitle");
                if ((value == null)||(!value.equals(getAcademicTitle1()))) {
                    setAcademicTitle1(((String) value));
                }
            }
            if (values.containsKey("AuthorizationGroup")) {
                final Object value = values.remove("AuthorizationGroup");
                if ((value == null)||(!value.equals(getAuthorizationGroup()))) {
                    setAuthorizationGroup(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerCategory")) {
                final Object value = values.remove("BusinessPartnerCategory");
                if ((value == null)||(!value.equals(getBPCategory()))) {
                    setBPCategory(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerFullName")) {
                final Object value = values.remove("BusinessPartnerFullName");
                if ((value == null)||(!value.equals(getBusinessPartnerFullName()))) {
                    setBusinessPartnerFullName(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerGrouping")) {
                final Object value = values.remove("BusinessPartnerGrouping");
                if ((value == null)||(!value.equals(getGrouping()))) {
                    setGrouping(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerName")) {
                final Object value = values.remove("BusinessPartnerName");
                if ((value == null)||(!value.equals(getBusinessPartnerName()))) {
                    setBusinessPartnerName(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerUUID")) {
                final Object value = values.remove("BusinessPartnerUUID");
                if ((value == null)||(!value.equals(getBPGUID()))) {
                    setBPGUID(((UUID) value));
                }
            }
            if (values.containsKey("CorrespondenceLanguage")) {
                final Object value = values.remove("CorrespondenceLanguage");
                if ((value == null)||(!value.equals(getCorrespondenceLang()))) {
                    setCorrespondenceLang(((String) value));
                }
            }
            if (values.containsKey("CreatedByUser")) {
                final Object value = values.remove("CreatedByUser");
                if ((value == null)||(!value.equals(getCreatedBy()))) {
                    setCreatedBy(((String) value));
                }
            }
            if (values.containsKey("CreationDate")) {
                final Object value = values.remove("CreationDate");
                if ((value == null)||(!value.equals(getCreatedOn()))) {
                    setCreatedOn(((LocalDateTime) value));
                }
            }
            if (values.containsKey("CreationTime")) {
                final Object value = values.remove("CreationTime");
                if ((value == null)||(!value.equals(getCreatedAt()))) {
                    setCreatedAt(((LocalTime) value));
                }
            }
            if (values.containsKey("FirstName")) {
                final Object value = values.remove("FirstName");
                if ((value == null)||(!value.equals(getFirstName()))) {
                    setFirstName(((String) value));
                }
            }
            if (values.containsKey("FormOfAddress")) {
                final Object value = values.remove("FormOfAddress");
                if ((value == null)||(!value.equals(getTitleKey()))) {
                    setTitleKey(((String) value));
                }
            }
            if (values.containsKey("Industry")) {
                final Object value = values.remove("Industry");
                if ((value == null)||(!value.equals(getIndustrySector()))) {
                    setIndustrySector(((String) value));
                }
            }
            if (values.containsKey("InternationalLocationNumber1")) {
                final Object value = values.remove("InternationalLocationNumber1");
                if ((value == null)||(!value.equals(getIntLocationNo1()))) {
                    setIntLocationNo1(((String) value));
                }
            }
            if (values.containsKey("InternationalLocationNumber2")) {
                final Object value = values.remove("InternationalLocationNumber2");
                if ((value == null)||(!value.equals(getIntLocationNo2()))) {
                    setIntLocationNo2(((String) value));
                }
            }
            if (values.containsKey("IsFemale")) {
                final Object value = values.remove("IsFemale");
                if ((value == null)||(!value.equals(getFemale()))) {
                    setFemale(((Boolean) value));
                }
            }
            if (values.containsKey("IsMale")) {
                final Object value = values.remove("IsMale");
                if ((value == null)||(!value.equals(getMale()))) {
                    setMale(((Boolean) value));
                }
            }
            if (values.containsKey("IsNaturalPerson")) {
                final Object value = values.remove("IsNaturalPerson");
                if ((value == null)||(!value.equals(getNaturalPerson()))) {
                    setNaturalPerson(((String) value));
                }
            }
            if (values.containsKey("IsSexUnknown")) {
                final Object value = values.remove("IsSexUnknown");
                if ((value == null)||(!value.equals(getUnknown()))) {
                    setUnknown(((Boolean) value));
                }
            }
            if (values.containsKey("GenderCodeName")) {
                final Object value = values.remove("GenderCodeName");
                if ((value == null)||(!value.equals(getGender()))) {
                    setGender(((String) value));
                }
            }
            if (values.containsKey("Language")) {
                final Object value = values.remove("Language");
                if ((value == null)||(!value.equals(getLanguage()))) {
                    setLanguage(((String) value));
                }
            }
            if (values.containsKey("LastChangeDate")) {
                final Object value = values.remove("LastChangeDate");
                if ((value == null)||(!value.equals(getChangedOn()))) {
                    setChangedOn(((LocalDateTime) value));
                }
            }
            if (values.containsKey("LastChangeTime")) {
                final Object value = values.remove("LastChangeTime");
                if ((value == null)||(!value.equals(getChangedAt()))) {
                    setChangedAt(((LocalTime) value));
                }
            }
            if (values.containsKey("LastChangedByUser")) {
                final Object value = values.remove("LastChangedByUser");
                if ((value == null)||(!value.equals(getChangedBy()))) {
                    setChangedBy(((String) value));
                }
            }
            if (values.containsKey("LastName")) {
                final Object value = values.remove("LastName");
                if ((value == null)||(!value.equals(getLastName()))) {
                    setLastName(((String) value));
                }
            }
            if (values.containsKey("LegalForm")) {
                final Object value = values.remove("LegalForm");
                if ((value == null)||(!value.equals(getLegalForm()))) {
                    setLegalForm(((String) value));
                }
            }
            if (values.containsKey("OrganizationBPName1")) {
                final Object value = values.remove("OrganizationBPName1");
                if ((value == null)||(!value.equals(getName1()))) {
                    setName1(((String) value));
                }
            }
            if (values.containsKey("OrganizationBPName2")) {
                final Object value = values.remove("OrganizationBPName2");
                if ((value == null)||(!value.equals(getName2()))) {
                    setName2(((String) value));
                }
            }
            if (values.containsKey("OrganizationBPName3")) {
                final Object value = values.remove("OrganizationBPName3");
                if ((value == null)||(!value.equals(getName3()))) {
                    setName3(((String) value));
                }
            }
            if (values.containsKey("OrganizationBPName4")) {
                final Object value = values.remove("OrganizationBPName4");
                if ((value == null)||(!value.equals(getName4()))) {
                    setName4(((String) value));
                }
            }
            if (values.containsKey("OrganizationFoundationDate")) {
                final Object value = values.remove("OrganizationFoundationDate");
                if ((value == null)||(!value.equals(getDateFounded()))) {
                    setDateFounded(((LocalDateTime) value));
                }
            }
            if (values.containsKey("OrganizationLiquidationDate")) {
                final Object value = values.remove("OrganizationLiquidationDate");
                if ((value == null)||(!value.equals(getLiquidationDate()))) {
                    setLiquidationDate(((LocalDateTime) value));
                }
            }
            if (values.containsKey("SearchTerm1")) {
                final Object value = values.remove("SearchTerm1");
                if ((value == null)||(!value.equals(getSearchTerm1()))) {
                    setSearchTerm1(((String) value));
                }
            }
            if (values.containsKey("SearchTerm2")) {
                final Object value = values.remove("SearchTerm2");
                if ((value == null)||(!value.equals(getSearchTerm2()))) {
                    setSearchTerm2(((String) value));
                }
            }
            if (values.containsKey("AdditionalLastName")) {
                final Object value = values.remove("AdditionalLastName");
                if ((value == null)||(!value.equals(getOtherLastName()))) {
                    setOtherLastName(((String) value));
                }
            }
            if (values.containsKey("BirthDate")) {
                final Object value = values.remove("BirthDate");
                if ((value == null)||(!value.equals(getDateOfBirth()))) {
                    setDateOfBirth(((LocalDateTime) value));
                }
            }
            if (values.containsKey("BusinessPartnerBirthDateStatus")) {
                final Object value = values.remove("BusinessPartnerBirthDateStatus");
                if ((value == null)||(!value.equals(getBirthDateStatus()))) {
                    setBirthDateStatus(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerBirthplaceName")) {
                final Object value = values.remove("BusinessPartnerBirthplaceName");
                if ((value == null)||(!value.equals(getBirthplace()))) {
                    setBirthplace(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerDeathDate")) {
                final Object value = values.remove("BusinessPartnerDeathDate");
                if ((value == null)||(!value.equals(getDeathDate()))) {
                    setDeathDate(((LocalDateTime) value));
                }
            }
            if (values.containsKey("BusinessPartnerIsBlocked")) {
                final Object value = values.remove("BusinessPartnerIsBlocked");
                if ((value == null)||(!value.equals(getCentralBlock()))) {
                    setCentralBlock(((Boolean) value));
                }
            }
            if (values.containsKey("BusinessPartnerType")) {
                final Object value = values.remove("BusinessPartnerType");
                if ((value == null)||(!value.equals(getBPType()))) {
                    setBPType(((String) value));
                }
            }
            if (values.containsKey("ETag")) {
                final Object value = values.remove("ETag");
                if ((value == null)||(!value.equals(getETag()))) {
                    setETag(((String) value));
                }
            }
            if (values.containsKey("GroupBusinessPartnerName1")) {
                final Object value = values.remove("GroupBusinessPartnerName1");
                if ((value == null)||(!value.equals(getName1_2()))) {
                    setName1_2(((String) value));
                }
            }
            if (values.containsKey("GroupBusinessPartnerName2")) {
                final Object value = values.remove("GroupBusinessPartnerName2");
                if ((value == null)||(!value.equals(getName2_2()))) {
                    setName2_2(((String) value));
                }
            }
            if (values.containsKey("IndependentAddressID")) {
                final Object value = values.remove("IndependentAddressID");
                if ((value == null)||(!value.equals(getAddressNumber()))) {
                    setAddressNumber(((String) value));
                }
            }
            if (values.containsKey("InternationalLocationNumber3")) {
                final Object value = values.remove("InternationalLocationNumber3");
                if ((value == null)||(!value.equals(getCheckDigit()))) {
                    setCheckDigit(((String) value));
                }
            }
            if (values.containsKey("MiddleName")) {
                final Object value = values.remove("MiddleName");
                if ((value == null)||(!value.equals(getMiddleName()))) {
                    setMiddleName(((String) value));
                }
            }
            if (values.containsKey("NameCountry")) {
                final Object value = values.remove("NameCountry");
                if ((value == null)||(!value.equals(getCtryRegForFormat()))) {
                    setCtryRegForFormat(((String) value));
                }
            }
            if (values.containsKey("NameFormat")) {
                final Object value = values.remove("NameFormat");
                if ((value == null)||(!value.equals(getNameFormat()))) {
                    setNameFormat(((String) value));
                }
            }
            if (values.containsKey("PersonFullName")) {
                final Object value = values.remove("PersonFullName");
                if ((value == null)||(!value.equals(getFullName()))) {
                    setFullName(((String) value));
                }
            }
            if (values.containsKey("PersonNumber")) {
                final Object value = values.remove("PersonNumber");
                if ((value == null)||(!value.equals(getPersonNumber()))) {
                    setPersonNumber(((String) value));
                }
            }
            if (values.containsKey("IsMarkedForArchiving")) {
                final Object value = values.remove("IsMarkedForArchiving");
                if ((value == null)||(!value.equals(getArchivingFlag()))) {
                    setArchivingFlag(((Boolean) value));
                }
            }
            if (values.containsKey("BusinessPartnerIDByExtSystem")) {
                final Object value = values.remove("BusinessPartnerIDByExtSystem");
                if ((value == null)||(!value.equals(getExternalBPNumber()))) {
                    setExternalBPNumber(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerPrintFormat")) {
                final Object value = values.remove("BusinessPartnerPrintFormat");
                if ((value == null)||(!value.equals(getPrintFormat()))) {
                    setPrintFormat(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerOccupation")) {
                final Object value = values.remove("BusinessPartnerOccupation");
                if ((value == null)||(!value.equals(getOccupation()))) {
                    setOccupation(((String) value));
                }
            }
            if (values.containsKey("BusPartMaritalStatus")) {
                final Object value = values.remove("BusPartMaritalStatus");
                if ((value == null)||(!value.equals(getMaritalStatus()))) {
                    setMaritalStatus(((String) value));
                }
            }
            if (values.containsKey("BusPartNationality")) {
                final Object value = values.remove("BusPartNationality");
                if ((value == null)||(!value.equals(getNationality()))) {
                    setNationality(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerBirthName")) {
                final Object value = values.remove("BusinessPartnerBirthName");
                if ((value == null)||(!value.equals(getNameAtBirth()))) {
                    setNameAtBirth(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerSupplementName")) {
                final Object value = values.remove("BusinessPartnerSupplementName");
                if ((value == null)||(!value.equals(getNameSupplement()))) {
                    setNameSupplement(((String) value));
                }
            }
            if (values.containsKey("NaturalPersonEmployerName")) {
                final Object value = values.remove("NaturalPersonEmployerName");
                if ((value == null)||(!value.equals(getEmployer()))) {
                    setEmployer(((String) value));
                }
            }
            if (values.containsKey("LastNamePrefix")) {
                final Object value = values.remove("LastNamePrefix");
                if ((value == null)||(!value.equals(getPrefixKey()))) {
                    setPrefixKey(((String) value));
                }
            }
            if (values.containsKey("LastNameSecondPrefix")) {
                final Object value = values.remove("LastNameSecondPrefix");
                if ((value == null)||(!value.equals(getNdPrefix()))) {
                    setNdPrefix(((String) value));
                }
            }
            if (values.containsKey("Initials")) {
                final Object value = values.remove("Initials");
                if ((value == null)||(!value.equals(getInitials()))) {
                    setInitials(((String) value));
                }
            }
            if (values.containsKey("BPDataControllerIsNotRequired")) {
                final Object value = values.remove("BPDataControllerIsNotRequired");
                if ((value == null)||(!value.equals(getDCNotRequired()))) {
                    setDCNotRequired(((Boolean) value));
                }
            }
            if (values.containsKey("TradingPartner")) {
                final Object value = values.remove("TradingPartner");
                if ((value == null)||(!value.equals(getTradingPartnerNo()))) {
                    setTradingPartnerNo(((String) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
            if ((values).containsKey("to_BPCreditWorthiness")) {
                final Object value = (values).remove("to_BPCreditWorthiness");
                if (value instanceof Map) {
                    if (toBPCreditWorthiness == null) {
                        toBPCreditWorthiness = new CreditWorthiness();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<String, Object> inputMap = ((Map<String, Object> ) value);
                    toBPCreditWorthiness.fromMap(inputMap);
                }
            }
            if ((values).containsKey("to_BPDataController")) {
                final Object value = (values).remove("to_BPDataController");
                if (value instanceof Iterable) {
                    if (toBPDataController == null) {
                        toBPDataController = Lists.newArrayList();
                    } else {
                        toBPDataController = Lists.newArrayList(toBPDataController);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        BusinessPartnerDataController entity;
                        if (toBPDataController.size()>i) {
                            entity = toBPDataController.get(i);
                        } else {
                            entity = new BusinessPartnerDataController();
                            toBPDataController.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BPFinServicesReporting")) {
                final Object value = (values).remove("to_BPFinServicesReporting");
                if (value instanceof Map) {
                    if (toBPFinServicesReporting == null) {
                        toBPFinServicesReporting = new FinancialServicesReporting();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<String, Object> inputMap = ((Map<String, Object> ) value);
                    toBPFinServicesReporting.fromMap(inputMap);
                }
            }
            if ((values).containsKey("to_BPFiscalYearInformation")) {
                final Object value = (values).remove("to_BPFiscalYearInformation");
                if (value instanceof Iterable) {
                    if (toBPFiscalYearInformation == null) {
                        toBPFiscalYearInformation = Lists.newArrayList();
                    } else {
                        toBPFiscalYearInformation = Lists.newArrayList(toBPFiscalYearInformation);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        FiscalYearInformation entity;
                        if (toBPFiscalYearInformation.size()>i) {
                            entity = toBPFiscalYearInformation.get(i);
                        } else {
                            entity = new FiscalYearInformation();
                            toBPFiscalYearInformation.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BPRelationship")) {
                final Object value = (values).remove("to_BPRelationship");
                if (value instanceof Iterable) {
                    if (toBPRelationship == null) {
                        toBPRelationship = Lists.newArrayList();
                    } else {
                        toBPRelationship = Lists.newArrayList(toBPRelationship);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        BusinessPartnerRelationship entity;
                        if (toBPRelationship.size()>i) {
                            entity = toBPRelationship.get(i);
                        } else {
                            entity = new BusinessPartnerRelationship();
                            toBPRelationship.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BuPaIdentification")) {
                final Object value = (values).remove("to_BuPaIdentification");
                if (value instanceof Iterable) {
                    if (toBuPaIdentification == null) {
                        toBuPaIdentification = Lists.newArrayList();
                    } else {
                        toBuPaIdentification = Lists.newArrayList(toBuPaIdentification);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Identification entity;
                        if (toBuPaIdentification.size()>i) {
                            entity = toBuPaIdentification.get(i);
                        } else {
                            entity = new Identification();
                            toBuPaIdentification.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BuPaIndustry")) {
                final Object value = (values).remove("to_BuPaIndustry");
                if (value instanceof Iterable) {
                    if (toBuPaIndustry == null) {
                        toBuPaIndustry = Lists.newArrayList();
                    } else {
                        toBuPaIndustry = Lists.newArrayList(toBuPaIndustry);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Industry entity;
                        if (toBuPaIndustry.size()>i) {
                            entity = toBuPaIndustry.get(i);
                        } else {
                            entity = new Industry();
                            toBuPaIndustry.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BusinessPartner")) {
                final Object value = (values).remove("to_BusinessPartner");
                if (value instanceof Map) {
                    if (toBusinessPartner == null) {
                        toBusinessPartner = new FinancialServicesDetails();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<String, Object> inputMap = ((Map<String, Object> ) value);
                    toBusinessPartner.fromMap(inputMap);
                }
            }
            if ((values).containsKey("to_BusinessPartnerAddress")) {
                final Object value = (values).remove("to_BusinessPartnerAddress");
                if (value instanceof Iterable) {
                    if (toBusinessPartnerAddress == null) {
                        toBusinessPartnerAddress = Lists.newArrayList();
                    } else {
                        toBusinessPartnerAddress = Lists.newArrayList(toBusinessPartnerAddress);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Address entity;
                        if (toBusinessPartnerAddress.size()>i) {
                            entity = toBusinessPartnerAddress.get(i);
                        } else {
                            entity = new Address();
                            toBusinessPartnerAddress.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BusinessPartnerBank")) {
                final Object value = (values).remove("to_BusinessPartnerBank");
                if (value instanceof Iterable) {
                    if (toBusinessPartnerBank == null) {
                        toBusinessPartnerBank = Lists.newArrayList();
                    } else {
                        toBusinessPartnerBank = Lists.newArrayList(toBusinessPartnerBank);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Bank entity;
                        if (toBusinessPartnerBank.size()>i) {
                            entity = toBusinessPartnerBank.get(i);
                        } else {
                            entity = new Bank();
                            toBusinessPartnerBank.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BusinessPartnerContact")) {
                final Object value = (values).remove("to_BusinessPartnerContact");
                if (value instanceof Iterable) {
                    if (toBusinessPartnerContact == null) {
                        toBusinessPartnerContact = Lists.newArrayList();
                    } else {
                        toBusinessPartnerContact = Lists.newArrayList(toBusinessPartnerContact);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Contact entity;
                        if (toBusinessPartnerContact.size()>i) {
                            entity = toBusinessPartnerContact.get(i);
                        } else {
                            entity = new Contact();
                            toBusinessPartnerContact.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BusinessPartnerRating")) {
                final Object value = (values).remove("to_BusinessPartnerRating");
                if (value instanceof Iterable) {
                    if (toBusinessPartnerRating == null) {
                        toBusinessPartnerRating = Lists.newArrayList();
                    } else {
                        toBusinessPartnerRating = Lists.newArrayList(toBusinessPartnerRating);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Ratings entity;
                        if (toBusinessPartnerRating.size()>i) {
                            entity = toBusinessPartnerRating.get(i);
                        } else {
                            entity = new Ratings();
                            toBusinessPartnerRating.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BusinessPartnerRole")) {
                final Object value = (values).remove("to_BusinessPartnerRole");
                if (value instanceof Iterable) {
                    if (toBusinessPartnerRole == null) {
                        toBusinessPartnerRole = Lists.newArrayList();
                    } else {
                        toBusinessPartnerRole = Lists.newArrayList(toBusinessPartnerRole);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        Role entity;
                        if (toBusinessPartnerRole.size()>i) {
                            entity = toBusinessPartnerRole.get(i);
                        } else {
                            entity = new Role();
                            toBusinessPartnerRole.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BusinessPartnerTax")) {
                final Object value = (values).remove("to_BusinessPartnerTax");
                if (value instanceof Iterable) {
                    if (toBusinessPartnerTax == null) {
                        toBusinessPartnerTax = Lists.newArrayList();
                    } else {
                        toBusinessPartnerTax = Lists.newArrayList(toBusinessPartnerTax);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        TaxNumber entity;
                        if (toBusinessPartnerTax.size()>i) {
                            entity = toBusinessPartnerTax.get(i);
                        } else {
                            entity = new TaxNumber();
                            toBusinessPartnerTax.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_BusPartAddrDepdntTaxNmbr")) {
                final Object value = (values).remove("to_BusPartAddrDepdntTaxNmbr");
                if (value instanceof Iterable) {
                    if (toBusPartAddrDepdntTaxNmbr == null) {
                        toBusPartAddrDepdntTaxNmbr = Lists.newArrayList();
                    } else {
                        toBusPartAddrDepdntTaxNmbr = Lists.newArrayList(toBusPartAddrDepdntTaxNmbr);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        BusinessPartnerAddressDependentTaxNumbers entity;
                        if (toBusPartAddrDepdntTaxNmbr.size()>i) {
                            entity = toBusPartAddrDepdntTaxNmbr.get(i);
                        } else {
                            entity = new BusinessPartnerAddressDependentTaxNumbers();
                            toBusPartAddrDepdntTaxNmbr.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_Customer")) {
                final Object value = (values).remove("to_Customer");
                if (value instanceof Map) {
                    if (toCustomer == null) {
                        toCustomer = new Customer();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<String, Object> inputMap = ((Map<String, Object> ) value);
                    toCustomer.fromMap(inputMap);
                }
            }
            if ((values).containsKey("to_PaymentCard")) {
                final Object value = (values).remove("to_PaymentCard");
                if (value instanceof Iterable) {
                    if (toPaymentCard == null) {
                        toPaymentCard = Lists.newArrayList();
                    } else {
                        toPaymentCard = Lists.newArrayList(toPaymentCard);
                    }
                    int i = 0;
                    for (Object item: ((Iterable<?> ) value)) {
                        if (!(item instanceof Map)) {
                            continue;
                        }
                        BusinessPartnerPaymentCard entity;
                        if (toPaymentCard.size()>i) {
                            entity = toPaymentCard.get(i);
                        } else {
                            entity = new BusinessPartnerPaymentCard();
                            toPaymentCard.add(entity);
                        }
                        i = (i + 1);
                        @SuppressWarnings("unchecked")
                        final Map<String, Object> inputMap = ((Map<String, Object> ) item);
                        entity.fromMap(inputMap);
                    }
                }
            }
            if ((values).containsKey("to_Supplier")) {
                final Object value = (values).remove("to_Supplier");
                if (value instanceof Map) {
                    if (toSupplier == null) {
                        toSupplier = new Supplier();
                    }
                    @SuppressWarnings("unchecked")
                    final Map<String, Object> inputMap = ((Map<String, Object> ) value);
                    toSupplier.fromMap(inputMap);
                }
            }
        }
        super.fromMap(values);
    }

    /**
     * Use with available fluent helpers to apply an extension field to query operations.
     * 
     * @param fieldName
     *     The name of the extension field as returned by the OData service.
     * @param <T>
     *     The type of the extension field when performing value comparisons.
     * @param fieldType
     *     The Java type to use for the extension field when performing value comparisons.
     * @return
     *     A representation of an extension field from this entity.
     */
    @Nonnull
    public static<T >BusinessPartnerField<T> field(
        @Nonnull
        final String fieldName,
        @Nonnull
        final Class<T> fieldType) {
        return new BusinessPartnerField<T>(fieldName);
    }

    /**
     * Use with available fluent helpers to apply an extension field to query operations.
     * 
     * @param typeConverter
     *     A TypeConverter<T, DomainT> instance whose first generic type matches the Java type of the field
     * @param fieldName
     *     The name of the extension field as returned by the OData service.
     * @param <T>
     *     The type of the extension field when performing value comparisons.
     * @param <DomainT>
     *     The type of the extension field as returned by the OData service.
     * @return
     *     A representation of an extension field from this entity, holding a reference to the given TypeConverter.
     */
    @Nonnull
    public static<T,DomainT >BusinessPartnerField<T> field(
        @Nonnull
        final String fieldName,
        @Nonnull
        final TypeConverter<T, DomainT> typeConverter) {
        return new BusinessPartnerField<T>(fieldName, typeConverter);
    }

    @Override
    @Nullable
    public Destination getDestinationForFetch() {
        return super.getDestinationForFetch();
    }

    @Override
    protected void setServicePathForFetch(
        @Nullable
        final String servicePathForFetch) {
        super.setServicePathForFetch(servicePathForFetch);
    }

    @Override
    public void attachToService(
        @Nullable
        final String servicePath,
        @Nonnull
        final Destination destination) {
        super.attachToService(servicePath, destination);
    }

    @Override
    protected String getDefaultServicePath() {
        return (com.sap.cloud.sdk.tutorial.datamodel.odata.services.BusinessPartnerService.DEFAULT_SERVICE_PATH);
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfNavigationProperties() {
        final Map<String, Object> values = super.toMapOfNavigationProperties();
        if (toBPCreditWorthiness!= null) {
            (values).put("to_BPCreditWorthiness", toBPCreditWorthiness);
        }
        if (toBPDataController!= null) {
            (values).put("to_BPDataController", toBPDataController);
        }
        if (toBPFinServicesReporting!= null) {
            (values).put("to_BPFinServicesReporting", toBPFinServicesReporting);
        }
        if (toBPFiscalYearInformation!= null) {
            (values).put("to_BPFiscalYearInformation", toBPFiscalYearInformation);
        }
        if (toBPRelationship!= null) {
            (values).put("to_BPRelationship", toBPRelationship);
        }
        if (toBuPaIdentification!= null) {
            (values).put("to_BuPaIdentification", toBuPaIdentification);
        }
        if (toBuPaIndustry!= null) {
            (values).put("to_BuPaIndustry", toBuPaIndustry);
        }
        if (toBusinessPartner!= null) {
            (values).put("to_BusinessPartner", toBusinessPartner);
        }
        if (toBusinessPartnerAddress!= null) {
            (values).put("to_BusinessPartnerAddress", toBusinessPartnerAddress);
        }
        if (toBusinessPartnerBank!= null) {
            (values).put("to_BusinessPartnerBank", toBusinessPartnerBank);
        }
        if (toBusinessPartnerContact!= null) {
            (values).put("to_BusinessPartnerContact", toBusinessPartnerContact);
        }
        if (toBusinessPartnerRating!= null) {
            (values).put("to_BusinessPartnerRating", toBusinessPartnerRating);
        }
        if (toBusinessPartnerRole!= null) {
            (values).put("to_BusinessPartnerRole", toBusinessPartnerRole);
        }
        if (toBusinessPartnerTax!= null) {
            (values).put("to_BusinessPartnerTax", toBusinessPartnerTax);
        }
        if (toBusPartAddrDepdntTaxNmbr!= null) {
            (values).put("to_BusPartAddrDepdntTaxNmbr", toBusPartAddrDepdntTaxNmbr);
        }
        if (toCustomer!= null) {
            (values).put("to_Customer", toCustomer);
        }
        if (toPaymentCard!= null) {
            (values).put("to_PaymentCard", toPaymentCard);
        }
        if (toSupplier!= null) {
            (values).put("to_Supplier", toSupplier);
        }
        return values;
    }

    /**
     * Fetches the <b>CreditWorthiness</b> entity (one to one) associated with this entity. This corresponds to the OData navigation property <b>to_BPCreditWorthiness</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     The single associated <b>CreditWorthiness</b> entity, or {@code null} if an entity is not associated. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public CreditWorthiness fetchBPCreditWorthiness() {
        return fetchFieldAsSingle("to_BPCreditWorthiness", CreditWorthiness.class);
    }

    /**
     * Retrieval of associated <b>CreditWorthiness</b> entity (one to one). This corresponds to the OData navigation property <b>to_BPCreditWorthiness</b>.
     * <p>
     * If the navigation property <b>to_BPCreditWorthiness</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>CreditWorthiness</b> entity.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public CreditWorthiness getBPCreditWorthinessOrFetch() {
        if (toBPCreditWorthiness == null) {
            toBPCreditWorthiness = fetchBPCreditWorthiness();
        }
        return toBPCreditWorthiness;
    }

    /**
     * Retrieval of associated <b>CreditWorthiness</b> entity (one to one). This corresponds to the OData navigation property <b>to_BPCreditWorthiness</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BPCreditWorthiness</b> is already loaded, the result will contain the <b>CreditWorthiness</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<CreditWorthiness> getBPCreditWorthinessIfPresent() {
        return Option.of(toBPCreditWorthiness);
    }

    /**
     * Overwrites the associated <b>CreditWorthiness</b> entity for the loaded navigation property <b>to_BPCreditWorthiness</b>.
     * 
     * @param value
     *     New <b>CreditWorthiness</b> entity.
     */
    public void setBPCreditWorthiness(final CreditWorthiness value) {
        toBPCreditWorthiness = value;
    }

    /**
     * Fetches the <b>BusinessPartnerDataController</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BPDataController</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>BusinessPartnerDataController</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<BusinessPartnerDataController> fetchBPDataController() {
        return fetchFieldAsList("to_BPDataController", BusinessPartnerDataController.class);
    }

    /**
     * Retrieval of associated <b>BusinessPartnerDataController</b> entities (one to many). This corresponds to the OData navigation property <b>to_BPDataController</b>.
     * <p>
     * If the navigation property <b>to_BPDataController</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>BusinessPartnerDataController</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<BusinessPartnerDataController> getBPDataControllerOrFetch() {
        if (toBPDataController == null) {
            toBPDataController = fetchBPDataController();
        }
        return toBPDataController;
    }

    /**
     * Retrieval of associated <b>BusinessPartnerDataController</b> entities (one to many). This corresponds to the OData navigation property <b>to_BPDataController</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BPDataController</b> is already loaded, the result will contain the <b>BusinessPartnerDataController</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<BusinessPartnerDataController>> getBPDataControllerIfPresent() {
        return Option.of(toBPDataController);
    }

    /**
     * Overwrites the list of associated <b>BusinessPartnerDataController</b> entities for the loaded navigation property <b>to_BPDataController</b>.
     * <p>
     * If the navigation property <b>to_BPDataController</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>BusinessPartnerDataController</b> entities.
     */
    public void setBPDataController(
        @Nonnull
        final List<BusinessPartnerDataController> value) {
        if (toBPDataController == null) {
            toBPDataController = Lists.newArrayList();
        }
        toBPDataController.clear();
        toBPDataController.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>BusinessPartnerDataController</b> entities. This corresponds to the OData navigation property <b>to_BPDataController</b>.
     * <p>
     * If the navigation property <b>to_BPDataController</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>BusinessPartnerDataController</b> entities.
     */
    public void addBPDataController(BusinessPartnerDataController... entity) {
        if (toBPDataController == null) {
            toBPDataController = Lists.newArrayList();
        }
        toBPDataController.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>FinancialServicesReporting</b> entity (one to one) associated with this entity. This corresponds to the OData navigation property <b>to_BPFinServicesReporting</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     The single associated <b>FinancialServicesReporting</b> entity, or {@code null} if an entity is not associated. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public FinancialServicesReporting fetchBPFinServicesReporting() {
        return fetchFieldAsSingle("to_BPFinServicesReporting", FinancialServicesReporting.class);
    }

    /**
     * Retrieval of associated <b>FinancialServicesReporting</b> entity (one to one). This corresponds to the OData navigation property <b>to_BPFinServicesReporting</b>.
     * <p>
     * If the navigation property <b>to_BPFinServicesReporting</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>FinancialServicesReporting</b> entity.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public FinancialServicesReporting getBPFinServicesReportingOrFetch() {
        if (toBPFinServicesReporting == null) {
            toBPFinServicesReporting = fetchBPFinServicesReporting();
        }
        return toBPFinServicesReporting;
    }

    /**
     * Retrieval of associated <b>FinancialServicesReporting</b> entity (one to one). This corresponds to the OData navigation property <b>to_BPFinServicesReporting</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BPFinServicesReporting</b> is already loaded, the result will contain the <b>FinancialServicesReporting</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<FinancialServicesReporting> getBPFinServicesReportingIfPresent() {
        return Option.of(toBPFinServicesReporting);
    }

    /**
     * Overwrites the associated <b>FinancialServicesReporting</b> entity for the loaded navigation property <b>to_BPFinServicesReporting</b>.
     * 
     * @param value
     *     New <b>FinancialServicesReporting</b> entity.
     */
    public void setBPFinServicesReporting(final FinancialServicesReporting value) {
        toBPFinServicesReporting = value;
    }

    /**
     * Fetches the <b>FiscalYearInformation</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BPFiscalYearInformation</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>FiscalYearInformation</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<FiscalYearInformation> fetchBPFiscalYearInformation() {
        return fetchFieldAsList("to_BPFiscalYearInformation", FiscalYearInformation.class);
    }

    /**
     * Retrieval of associated <b>FiscalYearInformation</b> entities (one to many). This corresponds to the OData navigation property <b>to_BPFiscalYearInformation</b>.
     * <p>
     * If the navigation property <b>to_BPFiscalYearInformation</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>FiscalYearInformation</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<FiscalYearInformation> getBPFiscalYearInformationOrFetch() {
        if (toBPFiscalYearInformation == null) {
            toBPFiscalYearInformation = fetchBPFiscalYearInformation();
        }
        return toBPFiscalYearInformation;
    }

    /**
     * Retrieval of associated <b>FiscalYearInformation</b> entities (one to many). This corresponds to the OData navigation property <b>to_BPFiscalYearInformation</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BPFiscalYearInformation</b> is already loaded, the result will contain the <b>FiscalYearInformation</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<FiscalYearInformation>> getBPFiscalYearInformationIfPresent() {
        return Option.of(toBPFiscalYearInformation);
    }

    /**
     * Overwrites the list of associated <b>FiscalYearInformation</b> entities for the loaded navigation property <b>to_BPFiscalYearInformation</b>.
     * <p>
     * If the navigation property <b>to_BPFiscalYearInformation</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>FiscalYearInformation</b> entities.
     */
    public void setBPFiscalYearInformation(
        @Nonnull
        final List<FiscalYearInformation> value) {
        if (toBPFiscalYearInformation == null) {
            toBPFiscalYearInformation = Lists.newArrayList();
        }
        toBPFiscalYearInformation.clear();
        toBPFiscalYearInformation.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>FiscalYearInformation</b> entities. This corresponds to the OData navigation property <b>to_BPFiscalYearInformation</b>.
     * <p>
     * If the navigation property <b>to_BPFiscalYearInformation</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>FiscalYearInformation</b> entities.
     */
    public void addBPFiscalYearInformation(FiscalYearInformation... entity) {
        if (toBPFiscalYearInformation == null) {
            toBPFiscalYearInformation = Lists.newArrayList();
        }
        toBPFiscalYearInformation.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>BusinessPartnerRelationship</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BPRelationship</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>BusinessPartnerRelationship</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<BusinessPartnerRelationship> fetchBPRelationship() {
        return fetchFieldAsList("to_BPRelationship", BusinessPartnerRelationship.class);
    }

    /**
     * Retrieval of associated <b>BusinessPartnerRelationship</b> entities (one to many). This corresponds to the OData navigation property <b>to_BPRelationship</b>.
     * <p>
     * If the navigation property <b>to_BPRelationship</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>BusinessPartnerRelationship</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<BusinessPartnerRelationship> getBPRelationshipOrFetch() {
        if (toBPRelationship == null) {
            toBPRelationship = fetchBPRelationship();
        }
        return toBPRelationship;
    }

    /**
     * Retrieval of associated <b>BusinessPartnerRelationship</b> entities (one to many). This corresponds to the OData navigation property <b>to_BPRelationship</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BPRelationship</b> is already loaded, the result will contain the <b>BusinessPartnerRelationship</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<BusinessPartnerRelationship>> getBPRelationshipIfPresent() {
        return Option.of(toBPRelationship);
    }

    /**
     * Overwrites the list of associated <b>BusinessPartnerRelationship</b> entities for the loaded navigation property <b>to_BPRelationship</b>.
     * <p>
     * If the navigation property <b>to_BPRelationship</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>BusinessPartnerRelationship</b> entities.
     */
    public void setBPRelationship(
        @Nonnull
        final List<BusinessPartnerRelationship> value) {
        if (toBPRelationship == null) {
            toBPRelationship = Lists.newArrayList();
        }
        toBPRelationship.clear();
        toBPRelationship.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>BusinessPartnerRelationship</b> entities. This corresponds to the OData navigation property <b>to_BPRelationship</b>.
     * <p>
     * If the navigation property <b>to_BPRelationship</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>BusinessPartnerRelationship</b> entities.
     */
    public void addBPRelationship(BusinessPartnerRelationship... entity) {
        if (toBPRelationship == null) {
            toBPRelationship = Lists.newArrayList();
        }
        toBPRelationship.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>Identification</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BuPaIdentification</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>Identification</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Identification> fetchBuPaIdentification() {
        return fetchFieldAsList("to_BuPaIdentification", Identification.class);
    }

    /**
     * Retrieval of associated <b>Identification</b> entities (one to many). This corresponds to the OData navigation property <b>to_BuPaIdentification</b>.
     * <p>
     * If the navigation property <b>to_BuPaIdentification</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Identification</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Identification> getBuPaIdentificationOrFetch() {
        if (toBuPaIdentification == null) {
            toBuPaIdentification = fetchBuPaIdentification();
        }
        return toBuPaIdentification;
    }

    /**
     * Retrieval of associated <b>Identification</b> entities (one to many). This corresponds to the OData navigation property <b>to_BuPaIdentification</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BuPaIdentification</b> is already loaded, the result will contain the <b>Identification</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Identification>> getBuPaIdentificationIfPresent() {
        return Option.of(toBuPaIdentification);
    }

    /**
     * Overwrites the list of associated <b>Identification</b> entities for the loaded navigation property <b>to_BuPaIdentification</b>.
     * <p>
     * If the navigation property <b>to_BuPaIdentification</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>Identification</b> entities.
     */
    public void setBuPaIdentification(
        @Nonnull
        final List<Identification> value) {
        if (toBuPaIdentification == null) {
            toBuPaIdentification = Lists.newArrayList();
        }
        toBuPaIdentification.clear();
        toBuPaIdentification.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>Identification</b> entities. This corresponds to the OData navigation property <b>to_BuPaIdentification</b>.
     * <p>
     * If the navigation property <b>to_BuPaIdentification</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Identification</b> entities.
     */
    public void addBuPaIdentification(Identification... entity) {
        if (toBuPaIdentification == null) {
            toBuPaIdentification = Lists.newArrayList();
        }
        toBuPaIdentification.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>Industry</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BuPaIndustry</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>Industry</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Industry> fetchBuPaIndustry() {
        return fetchFieldAsList("to_BuPaIndustry", Industry.class);
    }

    /**
     * Retrieval of associated <b>Industry</b> entities (one to many). This corresponds to the OData navigation property <b>to_BuPaIndustry</b>.
     * <p>
     * If the navigation property <b>to_BuPaIndustry</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Industry</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Industry> getBuPaIndustryOrFetch() {
        if (toBuPaIndustry == null) {
            toBuPaIndustry = fetchBuPaIndustry();
        }
        return toBuPaIndustry;
    }

    /**
     * Retrieval of associated <b>Industry</b> entities (one to many). This corresponds to the OData navigation property <b>to_BuPaIndustry</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BuPaIndustry</b> is already loaded, the result will contain the <b>Industry</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Industry>> getBuPaIndustryIfPresent() {
        return Option.of(toBuPaIndustry);
    }

    /**
     * Overwrites the list of associated <b>Industry</b> entities for the loaded navigation property <b>to_BuPaIndustry</b>.
     * <p>
     * If the navigation property <b>to_BuPaIndustry</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>Industry</b> entities.
     */
    public void setBuPaIndustry(
        @Nonnull
        final List<Industry> value) {
        if (toBuPaIndustry == null) {
            toBuPaIndustry = Lists.newArrayList();
        }
        toBuPaIndustry.clear();
        toBuPaIndustry.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>Industry</b> entities. This corresponds to the OData navigation property <b>to_BuPaIndustry</b>.
     * <p>
     * If the navigation property <b>to_BuPaIndustry</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Industry</b> entities.
     */
    public void addBuPaIndustry(Industry... entity) {
        if (toBuPaIndustry == null) {
            toBuPaIndustry = Lists.newArrayList();
        }
        toBuPaIndustry.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>FinancialServicesDetails</b> entity (one to one) associated with this entity. This corresponds to the OData navigation property <b>to_BusinessPartner</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     The single associated <b>FinancialServicesDetails</b> entity, or {@code null} if an entity is not associated. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public FinancialServicesDetails fetchBusinessPartner() {
        return fetchFieldAsSingle("to_BusinessPartner", FinancialServicesDetails.class);
    }

    /**
     * Retrieval of associated <b>FinancialServicesDetails</b> entity (one to one). This corresponds to the OData navigation property <b>to_BusinessPartner</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartner</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>FinancialServicesDetails</b> entity.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public FinancialServicesDetails getBusinessPartnerOrFetch() {
        if (toBusinessPartner == null) {
            toBusinessPartner = fetchBusinessPartner();
        }
        return toBusinessPartner;
    }

    /**
     * Retrieval of associated <b>FinancialServicesDetails</b> entity (one to one). This corresponds to the OData navigation property <b>to_BusinessPartner</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BusinessPartner</b> is already loaded, the result will contain the <b>FinancialServicesDetails</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<FinancialServicesDetails> getBusinessPartnerIfPresent() {
        return Option.of(toBusinessPartner);
    }

    /**
     * Overwrites the associated <b>FinancialServicesDetails</b> entity for the loaded navigation property <b>to_BusinessPartner</b>.
     * 
     * @param value
     *     New <b>FinancialServicesDetails</b> entity.
     */
    public void setBusinessPartner(final FinancialServicesDetails value) {
        toBusinessPartner = value;
    }

    /**
     * Fetches the <b>Address</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BusinessPartnerAddress</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>Address</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Address> fetchBusinessPartnerAddress() {
        return fetchFieldAsList("to_BusinessPartnerAddress", Address.class);
    }

    /**
     * Retrieval of associated <b>Address</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerAddress</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerAddress</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Address</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Address> getBusinessPartnerAddressOrFetch() {
        if (toBusinessPartnerAddress == null) {
            toBusinessPartnerAddress = fetchBusinessPartnerAddress();
        }
        return toBusinessPartnerAddress;
    }

    /**
     * Retrieval of associated <b>Address</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerAddress</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BusinessPartnerAddress</b> is already loaded, the result will contain the <b>Address</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Address>> getBusinessPartnerAddressIfPresent() {
        return Option.of(toBusinessPartnerAddress);
    }

    /**
     * Overwrites the list of associated <b>Address</b> entities for the loaded navigation property <b>to_BusinessPartnerAddress</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerAddress</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>Address</b> entities.
     */
    public void setBusinessPartnerAddress(
        @Nonnull
        final List<Address> value) {
        if (toBusinessPartnerAddress == null) {
            toBusinessPartnerAddress = Lists.newArrayList();
        }
        toBusinessPartnerAddress.clear();
        toBusinessPartnerAddress.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>Address</b> entities. This corresponds to the OData navigation property <b>to_BusinessPartnerAddress</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerAddress</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Address</b> entities.
     */
    public void addBusinessPartnerAddress(Address... entity) {
        if (toBusinessPartnerAddress == null) {
            toBusinessPartnerAddress = Lists.newArrayList();
        }
        toBusinessPartnerAddress.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>Bank</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BusinessPartnerBank</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>Bank</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Bank> fetchBusinessPartnerBank() {
        return fetchFieldAsList("to_BusinessPartnerBank", Bank.class);
    }

    /**
     * Retrieval of associated <b>Bank</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerBank</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerBank</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Bank</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Bank> getBusinessPartnerBankOrFetch() {
        if (toBusinessPartnerBank == null) {
            toBusinessPartnerBank = fetchBusinessPartnerBank();
        }
        return toBusinessPartnerBank;
    }

    /**
     * Retrieval of associated <b>Bank</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerBank</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BusinessPartnerBank</b> is already loaded, the result will contain the <b>Bank</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Bank>> getBusinessPartnerBankIfPresent() {
        return Option.of(toBusinessPartnerBank);
    }

    /**
     * Overwrites the list of associated <b>Bank</b> entities for the loaded navigation property <b>to_BusinessPartnerBank</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerBank</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>Bank</b> entities.
     */
    public void setBusinessPartnerBank(
        @Nonnull
        final List<Bank> value) {
        if (toBusinessPartnerBank == null) {
            toBusinessPartnerBank = Lists.newArrayList();
        }
        toBusinessPartnerBank.clear();
        toBusinessPartnerBank.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>Bank</b> entities. This corresponds to the OData navigation property <b>to_BusinessPartnerBank</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerBank</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Bank</b> entities.
     */
    public void addBusinessPartnerBank(Bank... entity) {
        if (toBusinessPartnerBank == null) {
            toBusinessPartnerBank = Lists.newArrayList();
        }
        toBusinessPartnerBank.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>Contact</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BusinessPartnerContact</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>Contact</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Contact> fetchBusinessPartnerContact() {
        return fetchFieldAsList("to_BusinessPartnerContact", Contact.class);
    }

    /**
     * Retrieval of associated <b>Contact</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerContact</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerContact</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Contact</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Contact> getBusinessPartnerContactOrFetch() {
        if (toBusinessPartnerContact == null) {
            toBusinessPartnerContact = fetchBusinessPartnerContact();
        }
        return toBusinessPartnerContact;
    }

    /**
     * Retrieval of associated <b>Contact</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerContact</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BusinessPartnerContact</b> is already loaded, the result will contain the <b>Contact</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Contact>> getBusinessPartnerContactIfPresent() {
        return Option.of(toBusinessPartnerContact);
    }

    /**
     * Overwrites the list of associated <b>Contact</b> entities for the loaded navigation property <b>to_BusinessPartnerContact</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerContact</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>Contact</b> entities.
     */
    public void setBusinessPartnerContact(
        @Nonnull
        final List<Contact> value) {
        if (toBusinessPartnerContact == null) {
            toBusinessPartnerContact = Lists.newArrayList();
        }
        toBusinessPartnerContact.clear();
        toBusinessPartnerContact.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>Contact</b> entities. This corresponds to the OData navigation property <b>to_BusinessPartnerContact</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerContact</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Contact</b> entities.
     */
    public void addBusinessPartnerContact(Contact... entity) {
        if (toBusinessPartnerContact == null) {
            toBusinessPartnerContact = Lists.newArrayList();
        }
        toBusinessPartnerContact.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>Ratings</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BusinessPartnerRating</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>Ratings</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Ratings> fetchBusinessPartnerRating() {
        return fetchFieldAsList("to_BusinessPartnerRating", Ratings.class);
    }

    /**
     * Retrieval of associated <b>Ratings</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerRating</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerRating</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Ratings</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Ratings> getBusinessPartnerRatingOrFetch() {
        if (toBusinessPartnerRating == null) {
            toBusinessPartnerRating = fetchBusinessPartnerRating();
        }
        return toBusinessPartnerRating;
    }

    /**
     * Retrieval of associated <b>Ratings</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerRating</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BusinessPartnerRating</b> is already loaded, the result will contain the <b>Ratings</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Ratings>> getBusinessPartnerRatingIfPresent() {
        return Option.of(toBusinessPartnerRating);
    }

    /**
     * Overwrites the list of associated <b>Ratings</b> entities for the loaded navigation property <b>to_BusinessPartnerRating</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerRating</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>Ratings</b> entities.
     */
    public void setBusinessPartnerRating(
        @Nonnull
        final List<Ratings> value) {
        if (toBusinessPartnerRating == null) {
            toBusinessPartnerRating = Lists.newArrayList();
        }
        toBusinessPartnerRating.clear();
        toBusinessPartnerRating.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>Ratings</b> entities. This corresponds to the OData navigation property <b>to_BusinessPartnerRating</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerRating</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Ratings</b> entities.
     */
    public void addBusinessPartnerRating(Ratings... entity) {
        if (toBusinessPartnerRating == null) {
            toBusinessPartnerRating = Lists.newArrayList();
        }
        toBusinessPartnerRating.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>Role</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BusinessPartnerRole</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>Role</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Role> fetchBusinessPartnerRole() {
        return fetchFieldAsList("to_BusinessPartnerRole", Role.class);
    }

    /**
     * Retrieval of associated <b>Role</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerRole</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerRole</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Role</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<Role> getBusinessPartnerRoleOrFetch() {
        if (toBusinessPartnerRole == null) {
            toBusinessPartnerRole = fetchBusinessPartnerRole();
        }
        return toBusinessPartnerRole;
    }

    /**
     * Retrieval of associated <b>Role</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerRole</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BusinessPartnerRole</b> is already loaded, the result will contain the <b>Role</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<Role>> getBusinessPartnerRoleIfPresent() {
        return Option.of(toBusinessPartnerRole);
    }

    /**
     * Overwrites the list of associated <b>Role</b> entities for the loaded navigation property <b>to_BusinessPartnerRole</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerRole</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>Role</b> entities.
     */
    public void setBusinessPartnerRole(
        @Nonnull
        final List<Role> value) {
        if (toBusinessPartnerRole == null) {
            toBusinessPartnerRole = Lists.newArrayList();
        }
        toBusinessPartnerRole.clear();
        toBusinessPartnerRole.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>Role</b> entities. This corresponds to the OData navigation property <b>to_BusinessPartnerRole</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerRole</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>Role</b> entities.
     */
    public void addBusinessPartnerRole(Role... entity) {
        if (toBusinessPartnerRole == null) {
            toBusinessPartnerRole = Lists.newArrayList();
        }
        toBusinessPartnerRole.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>TaxNumber</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BusinessPartnerTax</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>TaxNumber</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<TaxNumber> fetchBusinessPartnerTax() {
        return fetchFieldAsList("to_BusinessPartnerTax", TaxNumber.class);
    }

    /**
     * Retrieval of associated <b>TaxNumber</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerTax</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerTax</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>TaxNumber</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<TaxNumber> getBusinessPartnerTaxOrFetch() {
        if (toBusinessPartnerTax == null) {
            toBusinessPartnerTax = fetchBusinessPartnerTax();
        }
        return toBusinessPartnerTax;
    }

    /**
     * Retrieval of associated <b>TaxNumber</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusinessPartnerTax</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BusinessPartnerTax</b> is already loaded, the result will contain the <b>TaxNumber</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<TaxNumber>> getBusinessPartnerTaxIfPresent() {
        return Option.of(toBusinessPartnerTax);
    }

    /**
     * Overwrites the list of associated <b>TaxNumber</b> entities for the loaded navigation property <b>to_BusinessPartnerTax</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerTax</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>TaxNumber</b> entities.
     */
    public void setBusinessPartnerTax(
        @Nonnull
        final List<TaxNumber> value) {
        if (toBusinessPartnerTax == null) {
            toBusinessPartnerTax = Lists.newArrayList();
        }
        toBusinessPartnerTax.clear();
        toBusinessPartnerTax.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>TaxNumber</b> entities. This corresponds to the OData navigation property <b>to_BusinessPartnerTax</b>.
     * <p>
     * If the navigation property <b>to_BusinessPartnerTax</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>TaxNumber</b> entities.
     */
    public void addBusinessPartnerTax(TaxNumber... entity) {
        if (toBusinessPartnerTax == null) {
            toBusinessPartnerTax = Lists.newArrayList();
        }
        toBusinessPartnerTax.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>BusinessPartnerAddressDependentTaxNumbers</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_BusPartAddrDepdntTaxNmbr</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>BusinessPartnerAddressDependentTaxNumbers</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<BusinessPartnerAddressDependentTaxNumbers> fetchBusPartAddrDepdntTaxNmbr() {
        return fetchFieldAsList("to_BusPartAddrDepdntTaxNmbr", BusinessPartnerAddressDependentTaxNumbers.class);
    }

    /**
     * Retrieval of associated <b>BusinessPartnerAddressDependentTaxNumbers</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusPartAddrDepdntTaxNmbr</b>.
     * <p>
     * If the navigation property <b>to_BusPartAddrDepdntTaxNmbr</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>BusinessPartnerAddressDependentTaxNumbers</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<BusinessPartnerAddressDependentTaxNumbers> getBusPartAddrDepdntTaxNmbrOrFetch() {
        if (toBusPartAddrDepdntTaxNmbr == null) {
            toBusPartAddrDepdntTaxNmbr = fetchBusPartAddrDepdntTaxNmbr();
        }
        return toBusPartAddrDepdntTaxNmbr;
    }

    /**
     * Retrieval of associated <b>BusinessPartnerAddressDependentTaxNumbers</b> entities (one to many). This corresponds to the OData navigation property <b>to_BusPartAddrDepdntTaxNmbr</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_BusPartAddrDepdntTaxNmbr</b> is already loaded, the result will contain the <b>BusinessPartnerAddressDependentTaxNumbers</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<BusinessPartnerAddressDependentTaxNumbers>> getBusPartAddrDepdntTaxNmbrIfPresent() {
        return Option.of(toBusPartAddrDepdntTaxNmbr);
    }

    /**
     * Overwrites the list of associated <b>BusinessPartnerAddressDependentTaxNumbers</b> entities for the loaded navigation property <b>to_BusPartAddrDepdntTaxNmbr</b>.
     * <p>
     * If the navigation property <b>to_BusPartAddrDepdntTaxNmbr</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>BusinessPartnerAddressDependentTaxNumbers</b> entities.
     */
    public void setBusPartAddrDepdntTaxNmbr(
        @Nonnull
        final List<BusinessPartnerAddressDependentTaxNumbers> value) {
        if (toBusPartAddrDepdntTaxNmbr == null) {
            toBusPartAddrDepdntTaxNmbr = Lists.newArrayList();
        }
        toBusPartAddrDepdntTaxNmbr.clear();
        toBusPartAddrDepdntTaxNmbr.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>BusinessPartnerAddressDependentTaxNumbers</b> entities. This corresponds to the OData navigation property <b>to_BusPartAddrDepdntTaxNmbr</b>.
     * <p>
     * If the navigation property <b>to_BusPartAddrDepdntTaxNmbr</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>BusinessPartnerAddressDependentTaxNumbers</b> entities.
     */
    public void addBusPartAddrDepdntTaxNmbr(BusinessPartnerAddressDependentTaxNumbers... entity) {
        if (toBusPartAddrDepdntTaxNmbr == null) {
            toBusPartAddrDepdntTaxNmbr = Lists.newArrayList();
        }
        toBusPartAddrDepdntTaxNmbr.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>Customer</b> entity (one to one) associated with this entity. This corresponds to the OData navigation property <b>to_Customer</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     The single associated <b>Customer</b> entity, or {@code null} if an entity is not associated. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public Customer fetchCustomer() {
        return fetchFieldAsSingle("to_Customer", Customer.class);
    }

    /**
     * Retrieval of associated <b>Customer</b> entity (one to one). This corresponds to the OData navigation property <b>to_Customer</b>.
     * <p>
     * If the navigation property <b>to_Customer</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Customer</b> entity.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public Customer getCustomerOrFetch() {
        if (toCustomer == null) {
            toCustomer = fetchCustomer();
        }
        return toCustomer;
    }

    /**
     * Retrieval of associated <b>Customer</b> entity (one to one). This corresponds to the OData navigation property <b>to_Customer</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_Customer</b> is already loaded, the result will contain the <b>Customer</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<Customer> getCustomerIfPresent() {
        return Option.of(toCustomer);
    }

    /**
     * Overwrites the associated <b>Customer</b> entity for the loaded navigation property <b>to_Customer</b>.
     * 
     * @param value
     *     New <b>Customer</b> entity.
     */
    public void setCustomer(final Customer value) {
        toCustomer = value;
    }

    /**
     * Fetches the <b>BusinessPartnerPaymentCard</b> entities (one to many) associated with this entity. This corresponds to the OData navigation property <b>to_PaymentCard</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     List containing one or more associated <b>BusinessPartnerPaymentCard</b> entities. If no entities are associated then an empty list is returned. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<BusinessPartnerPaymentCard> fetchPaymentCard() {
        return fetchFieldAsList("to_PaymentCard", BusinessPartnerPaymentCard.class);
    }

    /**
     * Retrieval of associated <b>BusinessPartnerPaymentCard</b> entities (one to many). This corresponds to the OData navigation property <b>to_PaymentCard</b>.
     * <p>
     * If the navigation property <b>to_PaymentCard</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>BusinessPartnerPaymentCard</b> entities.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nonnull
    public List<BusinessPartnerPaymentCard> getPaymentCardOrFetch() {
        if (toPaymentCard == null) {
            toPaymentCard = fetchPaymentCard();
        }
        return toPaymentCard;
    }

    /**
     * Retrieval of associated <b>BusinessPartnerPaymentCard</b> entities (one to many). This corresponds to the OData navigation property <b>to_PaymentCard</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_PaymentCard</b> is already loaded, the result will contain the <b>BusinessPartnerPaymentCard</b> entities. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<List<BusinessPartnerPaymentCard>> getPaymentCardIfPresent() {
        return Option.of(toPaymentCard);
    }

    /**
     * Overwrites the list of associated <b>BusinessPartnerPaymentCard</b> entities for the loaded navigation property <b>to_PaymentCard</b>.
     * <p>
     * If the navigation property <b>to_PaymentCard</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param value
     *     List of <b>BusinessPartnerPaymentCard</b> entities.
     */
    public void setPaymentCard(
        @Nonnull
        final List<BusinessPartnerPaymentCard> value) {
        if (toPaymentCard == null) {
            toPaymentCard = Lists.newArrayList();
        }
        toPaymentCard.clear();
        toPaymentCard.addAll(value);
    }

    /**
     * Adds elements to the list of associated <b>BusinessPartnerPaymentCard</b> entities. This corresponds to the OData navigation property <b>to_PaymentCard</b>.
     * <p>
     * If the navigation property <b>to_PaymentCard</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @param entity
     *     Array of <b>BusinessPartnerPaymentCard</b> entities.
     */
    public void addPaymentCard(BusinessPartnerPaymentCard... entity) {
        if (toPaymentCard == null) {
            toPaymentCard = Lists.newArrayList();
        }
        toPaymentCard.addAll(Lists.newArrayList(entity));
    }

    /**
     * Fetches the <b>Supplier</b> entity (one to one) associated with this entity. This corresponds to the OData navigation property <b>to_Supplier</b>.
     * <p>
     * Please note: This method will not cache or persist the query results.
     * 
     * @return
     *     The single associated <b>Supplier</b> entity, or {@code null} if an entity is not associated. 
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public Supplier fetchSupplier() {
        return fetchFieldAsSingle("to_Supplier", Supplier.class);
    }

    /**
     * Retrieval of associated <b>Supplier</b> entity (one to one). This corresponds to the OData navigation property <b>to_Supplier</b>.
     * <p>
     * If the navigation property <b>to_Supplier</b> of a queried <b>BusinessPartner</b> is operated lazily, an <b>ODataException</b> can be thrown in case of an OData query error.
     * <p>
     * Please note: <i>Lazy</i> loading of OData entity associations is the process of asynchronous retrieval and persisting of items from a navigation property. If a <i>lazy</i> property is requested by the application for the first time and it has not yet been loaded, an OData query will be run in order to load the missing information and its result will get cached for future invocations.
     * 
     * @return
     *     List of associated <b>Supplier</b> entity.
     * @throws ODataException
     *     If the entity is unmanaged, i.e. it has not been retrieved using the OData VDM's services and therefore has no ERP configuration context assigned. An entity is managed if it has been either retrieved using the VDM's services or returned from the VDM's services as the result of a CREATE or UPDATE call. 
     */
    @Nullable
    public Supplier getSupplierOrFetch() {
        if (toSupplier == null) {
            toSupplier = fetchSupplier();
        }
        return toSupplier;
    }

    /**
     * Retrieval of associated <b>Supplier</b> entity (one to one). This corresponds to the OData navigation property <b>to_Supplier</b>.
     * <p>
     * If the navigation property for an entity <b>BusinessPartner</b> has not been resolved yet, this method will <b>not query</b> further information. Instead its <code>Option</code> result state will be <code>empty</code>.
     * 
     * @return
     *     If the information for navigation property <b>to_Supplier</b> is already loaded, the result will contain the <b>Supplier</b> entity. If not, an <code>Option</code> with result state <code>empty</code> is returned.
     */
    @Nonnull
    public Option<Supplier> getSupplierIfPresent() {
        return Option.of(toSupplier);
    }

    /**
     * Overwrites the associated <b>Supplier</b> entity for the loaded navigation property <b>to_Supplier</b>.
     * 
     * @param value
     *     New <b>Supplier</b> entity.
     */
    public void setSupplier(final Supplier value) {
        toSupplier = value;
    }


    /**
     * Helper class to allow for fluent creation of BusinessPartner instances.
     * 
     */
    public final static class BusinessPartnerBuilder {

        private CreditWorthiness toBPCreditWorthiness;
        private List<BusinessPartnerDataController> toBPDataController = Lists.newArrayList();
        private FinancialServicesReporting toBPFinServicesReporting;
        private List<FiscalYearInformation> toBPFiscalYearInformation = Lists.newArrayList();
        private List<BusinessPartnerRelationship> toBPRelationship = Lists.newArrayList();
        private List<Identification> toBuPaIdentification = Lists.newArrayList();
        private List<Industry> toBuPaIndustry = Lists.newArrayList();
        private FinancialServicesDetails toBusinessPartner;
        private String businessPartner = null;
        private List<Address> toBusinessPartnerAddress = Lists.newArrayList();
        private List<Bank> toBusinessPartnerBank = Lists.newArrayList();
        private List<Contact> toBusinessPartnerContact = Lists.newArrayList();
        private List<Ratings> toBusinessPartnerRating = Lists.newArrayList();
        private List<Role> toBusinessPartnerRole = Lists.newArrayList();
        private List<TaxNumber> toBusinessPartnerTax = Lists.newArrayList();
        private List<BusinessPartnerAddressDependentTaxNumbers> toBusPartAddrDepdntTaxNmbr = Lists.newArrayList();
        private Customer toCustomer;
        private String customer = null;
        private List<BusinessPartnerPaymentCard> toPaymentCard = Lists.newArrayList();
        private Supplier toSupplier;
        private String supplier = null;

        private BusinessPartner.BusinessPartnerBuilder toBPCreditWorthiness(final CreditWorthiness value) {
            toBPCreditWorthiness = value;
            return this;
        }

        /**
         * Navigation property <b>to_BPCreditWorthiness</b> for <b>BusinessPartner</b> to single <b>CreditWorthiness</b>.
         * 
         * @param value
         *     The CreditWorthiness to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder bpCreditWorthiness(final CreditWorthiness value) {
            return toBPCreditWorthiness(value);
        }

        private BusinessPartner.BusinessPartnerBuilder toBPDataController(final List<BusinessPartnerDataController> value) {
            toBPDataController.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BPDataController</b> for <b>BusinessPartner</b> to multiple <b>BusinessPartnerDataController</b>.
         * 
         * @param value
         *     The BusinessPartnerDataControllers to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder bpDataController(BusinessPartnerDataController... value) {
            return toBPDataController(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBPFinServicesReporting(final FinancialServicesReporting value) {
            toBPFinServicesReporting = value;
            return this;
        }

        /**
         * Navigation property <b>to_BPFinServicesReporting</b> for <b>BusinessPartner</b> to single <b>FinancialServicesReporting</b>.
         * 
         * @param value
         *     The FinancialServicesReporting to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder bpFinServicesReporting(final FinancialServicesReporting value) {
            return toBPFinServicesReporting(value);
        }

        private BusinessPartner.BusinessPartnerBuilder toBPFiscalYearInformation(final List<FiscalYearInformation> value) {
            toBPFiscalYearInformation.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BPFiscalYearInformation</b> for <b>BusinessPartner</b> to multiple <b>FiscalYearInformation</b>.
         * 
         * @param value
         *     The FiscalYearInformations to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder bpFiscalYearInformation(FiscalYearInformation... value) {
            return toBPFiscalYearInformation(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBPRelationship(final List<BusinessPartnerRelationship> value) {
            toBPRelationship.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BPRelationship</b> for <b>BusinessPartner</b> to multiple <b>BusinessPartnerRelationship</b>.
         * 
         * @param value
         *     The BusinessPartnerRelationships to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder bpRelationship(BusinessPartnerRelationship... value) {
            return toBPRelationship(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBuPaIdentification(final List<Identification> value) {
            toBuPaIdentification.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BuPaIdentification</b> for <b>BusinessPartner</b> to multiple <b>Identification</b>.
         * 
         * @param value
         *     The Identifications to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder buPaIdentification(Identification... value) {
            return toBuPaIdentification(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBuPaIndustry(final List<Industry> value) {
            toBuPaIndustry.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BuPaIndustry</b> for <b>BusinessPartner</b> to multiple <b>Industry</b>.
         * 
         * @param value
         *     The Industrys to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder buPaIndustry(Industry... value) {
            return toBuPaIndustry(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBusinessPartner(final FinancialServicesDetails value) {
            toBusinessPartner = value;
            return this;
        }

        /**
         * Navigation property <b>to_BusinessPartner</b> for <b>BusinessPartner</b> to single <b>FinancialServicesDetails</b>.
         * 
         * @param value
         *     The FinancialServicesDetails to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder businessPartner(final FinancialServicesDetails value) {
            return toBusinessPartner(value);
        }

        /**
         * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartner</b></p>
         * 
         * @param value
         *     The businessPartner to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder businessPartner(final String value) {
            businessPartner = value;
            return this;
        }

        private BusinessPartner.BusinessPartnerBuilder toBusinessPartnerAddress(final List<Address> value) {
            toBusinessPartnerAddress.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BusinessPartnerAddress</b> for <b>BusinessPartner</b> to multiple <b>Address</b>.
         * 
         * @param value
         *     The Addresss to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder businessPartnerAddress(Address... value) {
            return toBusinessPartnerAddress(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBusinessPartnerBank(final List<Bank> value) {
            toBusinessPartnerBank.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BusinessPartnerBank</b> for <b>BusinessPartner</b> to multiple <b>Bank</b>.
         * 
         * @param value
         *     The Banks to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder businessPartnerBank(Bank... value) {
            return toBusinessPartnerBank(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBusinessPartnerContact(final List<Contact> value) {
            toBusinessPartnerContact.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BusinessPartnerContact</b> for <b>BusinessPartner</b> to multiple <b>Contact</b>.
         * 
         * @param value
         *     The Contacts to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder businessPartnerContact(Contact... value) {
            return toBusinessPartnerContact(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBusinessPartnerRating(final List<Ratings> value) {
            toBusinessPartnerRating.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BusinessPartnerRating</b> for <b>BusinessPartner</b> to multiple <b>Ratings</b>.
         * 
         * @param value
         *     The Ratingss to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder businessPartnerRating(Ratings... value) {
            return toBusinessPartnerRating(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBusinessPartnerRole(final List<Role> value) {
            toBusinessPartnerRole.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BusinessPartnerRole</b> for <b>BusinessPartner</b> to multiple <b>Role</b>.
         * 
         * @param value
         *     The Roles to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder businessPartnerRole(Role... value) {
            return toBusinessPartnerRole(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBusinessPartnerTax(final List<TaxNumber> value) {
            toBusinessPartnerTax.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BusinessPartnerTax</b> for <b>BusinessPartner</b> to multiple <b>TaxNumber</b>.
         * 
         * @param value
         *     The TaxNumbers to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder businessPartnerTax(TaxNumber... value) {
            return toBusinessPartnerTax(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toBusPartAddrDepdntTaxNmbr(final List<BusinessPartnerAddressDependentTaxNumbers> value) {
            toBusPartAddrDepdntTaxNmbr.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_BusPartAddrDepdntTaxNmbr</b> for <b>BusinessPartner</b> to multiple <b>BusinessPartnerAddressDependentTaxNumbers</b>.
         * 
         * @param value
         *     The BusinessPartnerAddressDependentTaxNumberss to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder busPartAddrDepdntTaxNmbr(BusinessPartnerAddressDependentTaxNumbers... value) {
            return toBusPartAddrDepdntTaxNmbr(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toCustomer(final Customer value) {
            toCustomer = value;
            return this;
        }

        /**
         * Navigation property <b>to_Customer</b> for <b>BusinessPartner</b> to single <b>Customer</b>.
         * 
         * @param value
         *     The Customer to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder customer(final Customer value) {
            return toCustomer(value);
        }

        /**
         * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Customer</b></p>
         * 
         * @param value
         *     The customer to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder customer(final String value) {
            customer = value;
            return this;
        }

        private BusinessPartner.BusinessPartnerBuilder toPaymentCard(final List<BusinessPartnerPaymentCard> value) {
            toPaymentCard.addAll(value);
            return this;
        }

        /**
         * Navigation property <b>to_PaymentCard</b> for <b>BusinessPartner</b> to multiple <b>BusinessPartnerPaymentCard</b>.
         * 
         * @param value
         *     The BusinessPartnerPaymentCards to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder paymentCard(BusinessPartnerPaymentCard... value) {
            return toPaymentCard(Lists.newArrayList(value));
        }

        private BusinessPartner.BusinessPartnerBuilder toSupplier(final Supplier value) {
            toSupplier = value;
            return this;
        }

        /**
         * Navigation property <b>to_Supplier</b> for <b>BusinessPartner</b> to single <b>Supplier</b>.
         * 
         * @param value
         *     The Supplier to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder supplier(final Supplier value) {
            return toSupplier(value);
        }

        /**
         * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>Supplier</b></p>
         * 
         * @param value
         *     The supplier to build this BusinessPartner with.
         * @return
         *     This Builder to allow for a fluent interface.
         */
        @Nonnull
        public BusinessPartner.BusinessPartnerBuilder supplier(final String value) {
            supplier = value;
            return this;
        }

    }

}
