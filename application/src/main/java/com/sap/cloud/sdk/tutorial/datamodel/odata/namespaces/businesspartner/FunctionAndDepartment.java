
/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 5.1.0
 */

package com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner;

import java.time.LocalDateTime;
import java.util.Map;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Maps;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.sap.cloud.sdk.cloudplatform.connectivity.Destination;
import com.sap.cloud.sdk.datamodel.odata.helper.VdmEntity;
import com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataField;
import com.sap.cloud.sdk.s4hana.datamodel.odata.annotation.Key;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.field.FunctionAndDepartmentField;
import com.sap.cloud.sdk.tutorial.datamodel.odata.namespaces.businesspartner.selectable.FunctionAndDepartmentSelectable;
import com.sap.cloud.sdk.typeconverter.TypeConverter;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;


/**
 * Function and Department<p></p><p>Original entity name from the Odata EDM: <b>A_BPContactToFuncAndDeptType</b></p>
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString(doNotUseGetters = true, callSuper = true)
@EqualsAndHashCode(doNotUseGetters = true, callSuper = true)
@JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.ODataVdmEntityAdapterFactory.class)
public class FunctionAndDepartment
    extends VdmEntity<FunctionAndDepartment>
{

    /**
     * Selector for all available fields of FunctionAndDepartment.
     * 
     */
    public final static FunctionAndDepartmentSelectable ALL_FIELDS = () -> "*";
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>RelationshipNumber</b></p>
     * 
     * @return
     *     BP Relationship Number
     */
    @Key
    @SerializedName("RelationshipNumber")
    @JsonProperty("RelationshipNumber")
    @Nullable
    @ODataField(odataName = "RelationshipNumber")
    private String bPRelationshipNo;
    /**
     * Use with available fluent helpers to apply the <b>RelationshipNumber</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> BP_RELATIONSHIP_NO = new FunctionAndDepartmentField<String>("RelationshipNumber");
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartnerCompany</b></p>
     * 
     * @return
     *     Business Partner Number
     */
    @Key
    @SerializedName("BusinessPartnerCompany")
    @JsonProperty("BusinessPartnerCompany")
    @Nullable
    @ODataField(odataName = "BusinessPartnerCompany")
    private String businessPartner;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerCompany</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> BUSINESS_PARTNER = new FunctionAndDepartmentField<String>("BusinessPartnerCompany");
    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartnerPerson</b></p>
     * 
     * @return
     *     Business Partner Number
     */
    @Key
    @SerializedName("BusinessPartnerPerson")
    @JsonProperty("BusinessPartnerPerson")
    @Nullable
    @ODataField(odataName = "BusinessPartnerPerson")
    private String businessPartner_2;
    /**
     * Use with available fluent helpers to apply the <b>BusinessPartnerPerson</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> BUSINESS_PARTNER_2 = new FunctionAndDepartmentField<String>("BusinessPartnerPerson");
    /**
     * (Key Field) Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>ValidityEndDate</b></p>
     * 
     * @return
     *     Validity Date (Valid To)
     */
    @Key
    @SerializedName("ValidityEndDate")
    @JsonProperty("ValidityEndDate")
    @Nullable
    @JsonSerialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeSerializer.class)
    @JsonDeserialize(using = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.JacksonLocalDateTimeDeserializer.class)
    @JsonAdapter(com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeAdapter.class)
    @ODataField(odataName = "ValidityEndDate", converter = com.sap.cloud.sdk.s4hana.datamodel.odata.adapter.LocalDateTimeCalendarConverter.class)
    private LocalDateTime validTo;
    /**
     * Use with available fluent helpers to apply the <b>ValidityEndDate</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<LocalDateTime> VALID_TO = new FunctionAndDepartmentField<LocalDateTime>("ValidityEndDate");
    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>ContactPersonAuthorityType</b></p>
     * 
     * @return
     *     Partner's Authority
     */
    @SerializedName("ContactPersonAuthorityType")
    @JsonProperty("ContactPersonAuthorityType")
    @Nullable
    @ODataField(odataName = "ContactPersonAuthorityType")
    private String authority;
    /**
     * Use with available fluent helpers to apply the <b>ContactPersonAuthorityType</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> AUTHORITY = new FunctionAndDepartmentField<String>("ContactPersonAuthorityType");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>ContactPersonDepartment</b></p>
     * 
     * @return
     *     Department
     */
    @SerializedName("ContactPersonDepartment")
    @JsonProperty("ContactPersonDepartment")
    @Nullable
    @ODataField(odataName = "ContactPersonDepartment")
    private String department;
    /**
     * Use with available fluent helpers to apply the <b>ContactPersonDepartment</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> DEPARTMENT = new FunctionAndDepartmentField<String>("ContactPersonDepartment");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>ContactPersonDepartmentName</b></p>
     * 
     * @return
     *     Department at business partner
     */
    @SerializedName("ContactPersonDepartmentName")
    @JsonProperty("ContactPersonDepartmentName")
    @Nullable
    @ODataField(odataName = "ContactPersonDepartmentName")
    private String companyDepartment;
    /**
     * Use with available fluent helpers to apply the <b>ContactPersonDepartmentName</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> COMPANY_DEPARTMENT = new FunctionAndDepartmentField<String>("ContactPersonDepartmentName");
    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>ContactPersonFunction</b></p>
     * 
     * @return
     *     Function of partner
     */
    @SerializedName("ContactPersonFunction")
    @JsonProperty("ContactPersonFunction")
    @Nullable
    @ODataField(odataName = "ContactPersonFunction")
    private String function;
    /**
     * Use with available fluent helpers to apply the <b>ContactPersonFunction</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> FUNCTION = new FunctionAndDepartmentField<String>("ContactPersonFunction");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>ContactPersonFunctionName</b></p>
     * 
     * @return
     *     Function name of partner
     */
    @SerializedName("ContactPersonFunctionName")
    @JsonProperty("ContactPersonFunctionName")
    @Nullable
    @ODataField(odataName = "ContactPersonFunctionName")
    private String functionName;
    /**
     * Use with available fluent helpers to apply the <b>ContactPersonFunctionName</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> FUNCTION_NAME = new FunctionAndDepartmentField<String>("ContactPersonFunctionName");
    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>ContactPersonRemarkText</b></p>
     * 
     * @return
     *     Notes for Partner
     */
    @SerializedName("ContactPersonRemarkText")
    @JsonProperty("ContactPersonRemarkText")
    @Nullable
    @ODataField(odataName = "ContactPersonRemarkText")
    private String note;
    /**
     * Use with available fluent helpers to apply the <b>ContactPersonRemarkText</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> NOTE = new FunctionAndDepartmentField<String>("ContactPersonRemarkText");
    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>ContactPersonVIPType</b></p>
     * 
     * @return
     *     VIP Partner
     */
    @SerializedName("ContactPersonVIPType")
    @JsonProperty("ContactPersonVIPType")
    @Nullable
    @ODataField(odataName = "ContactPersonVIPType")
    private String vIP;
    /**
     * Use with available fluent helpers to apply the <b>ContactPersonVIPType</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> VIP = new FunctionAndDepartmentField<String>("ContactPersonVIPType");
    /**
     * Constraints: Not nullable, Maximum length: 241 <p>Original property name from the Odata EDM: <b>EmailAddress</b></p>
     * 
     * @return
     *     Email Address
     */
    @SerializedName("EmailAddress")
    @JsonProperty("EmailAddress")
    @Nullable
    @ODataField(odataName = "EmailAddress")
    private String emailAddress;
    /**
     * Use with available fluent helpers to apply the <b>EmailAddress</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> EMAIL_ADDRESS = new FunctionAndDepartmentField<String>("EmailAddress");
    /**
     * Constraints: Not nullable, Maximum length: 30 <p>Original property name from the Odata EDM: <b>FaxNumber</b></p>
     * 
     * @return
     *     Fax Number: Dialing Code and Number
     */
    @SerializedName("FaxNumber")
    @JsonProperty("FaxNumber")
    @Nullable
    @ODataField(odataName = "FaxNumber")
    private String fax;
    /**
     * Use with available fluent helpers to apply the <b>FaxNumber</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> FAX = new FunctionAndDepartmentField<String>("FaxNumber");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>FaxNumberExtension</b></p>
     * 
     * @return
     *     Fax no.: Extension
     */
    @SerializedName("FaxNumberExtension")
    @JsonProperty("FaxNumberExtension")
    @Nullable
    @ODataField(odataName = "FaxNumberExtension")
    private String extension;
    /**
     * Use with available fluent helpers to apply the <b>FaxNumberExtension</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> EXTENSION = new FunctionAndDepartmentField<String>("FaxNumberExtension");
    /**
     * Constraints: Not nullable, Maximum length: 30 <p>Original property name from the Odata EDM: <b>PhoneNumber</b></p>
     * 
     * @return
     *     Telephone No.: Dialing Code and Number
     */
    @SerializedName("PhoneNumber")
    @JsonProperty("PhoneNumber")
    @Nullable
    @ODataField(odataName = "PhoneNumber")
    private String telephone;
    /**
     * Use with available fluent helpers to apply the <b>PhoneNumber</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> TELEPHONE = new FunctionAndDepartmentField<String>("PhoneNumber");
    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>PhoneNumberExtension</b></p>
     * 
     * @return
     *     Telephone no.: Extension
     */
    @SerializedName("PhoneNumberExtension")
    @JsonProperty("PhoneNumberExtension")
    @Nullable
    @ODataField(odataName = "PhoneNumberExtension")
    private String extension_2;
    /**
     * Use with available fluent helpers to apply the <b>PhoneNumberExtension</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> EXTENSION_2 = new FunctionAndDepartmentField<String>("PhoneNumberExtension");
    /**
     * Constraints: Not nullable, Maximum length: 6 <p>Original property name from the Odata EDM: <b>RelationshipCategory</b></p>
     * 
     * @return
     *     Business Partner Relationship Category
     */
    @SerializedName("RelationshipCategory")
    @JsonProperty("RelationshipCategory")
    @Nullable
    @ODataField(odataName = "RelationshipCategory")
    private String relationshipCat;
    /**
     * Use with available fluent helpers to apply the <b>RelationshipCategory</b> field to query operations.
     * 
     */
    public final static FunctionAndDepartmentField<String> RELATIONSHIP_CAT = new FunctionAndDepartmentField<String>("RelationshipCategory");

    @Nonnull
    @Override
    public Class<FunctionAndDepartment> getType() {
        return FunctionAndDepartment.class;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 12 <p>Original property name from the Odata EDM: <b>RelationshipNumber</b></p>
     * 
     * @param bPRelationshipNo
     *     BP Relationship Number
     */
    public void setBPRelationshipNo(
        @Nullable
        final String bPRelationshipNo) {
        rememberChangedField("RelationshipNumber", this.bPRelationshipNo);
        this.bPRelationshipNo = bPRelationshipNo;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartnerCompany</b></p>
     * 
     * @param businessPartner
     *     Business Partner Number
     */
    public void setBusinessPartner(
        @Nullable
        final String businessPartner) {
        rememberChangedField("BusinessPartnerCompany", this.businessPartner);
        this.businessPartner = businessPartner;
    }

    /**
     * (Key Field) Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>BusinessPartnerPerson</b></p>
     * 
     * @param businessPartner_2
     *     Business Partner Number
     */
    public void setBusinessPartner_2(
        @Nullable
        final String businessPartner_2) {
        rememberChangedField("BusinessPartnerPerson", this.businessPartner_2);
        this.businessPartner_2 = businessPartner_2;
    }

    /**
     * (Key Field) Constraints: Not nullable, Precision: 0 <p>Original property name from the Odata EDM: <b>ValidityEndDate</b></p>
     * 
     * @param validTo
     *     Validity Date (Valid To)
     */
    public void setValidTo(
        @Nullable
        final LocalDateTime validTo) {
        rememberChangedField("ValidityEndDate", this.validTo);
        this.validTo = validTo;
    }

    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>ContactPersonAuthorityType</b></p>
     * 
     * @param authority
     *     Partner's Authority
     */
    public void setAuthority(
        @Nullable
        final String authority) {
        rememberChangedField("ContactPersonAuthorityType", this.authority);
        this.authority = authority;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>ContactPersonDepartment</b></p>
     * 
     * @param department
     *     Department
     */
    public void setDepartment(
        @Nullable
        final String department) {
        rememberChangedField("ContactPersonDepartment", this.department);
        this.department = department;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>ContactPersonDepartmentName</b></p>
     * 
     * @param companyDepartment
     *     Department at business partner
     */
    public void setCompanyDepartment(
        @Nullable
        final String companyDepartment) {
        rememberChangedField("ContactPersonDepartmentName", this.companyDepartment);
        this.companyDepartment = companyDepartment;
    }

    /**
     * Constraints: Not nullable, Maximum length: 4 <p>Original property name from the Odata EDM: <b>ContactPersonFunction</b></p>
     * 
     * @param function
     *     Function of partner
     */
    public void setFunction(
        @Nullable
        final String function) {
        rememberChangedField("ContactPersonFunction", this.function);
        this.function = function;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>ContactPersonFunctionName</b></p>
     * 
     * @param functionName
     *     Function name of partner
     */
    public void setFunctionName(
        @Nullable
        final String functionName) {
        rememberChangedField("ContactPersonFunctionName", this.functionName);
        this.functionName = functionName;
    }

    /**
     * Constraints: Not nullable, Maximum length: 40 <p>Original property name from the Odata EDM: <b>ContactPersonRemarkText</b></p>
     * 
     * @param note
     *     Notes for Partner
     */
    public void setNote(
        @Nullable
        final String note) {
        rememberChangedField("ContactPersonRemarkText", this.note);
        this.note = note;
    }

    /**
     * Constraints: Not nullable, Maximum length: 1 <p>Original property name from the Odata EDM: <b>ContactPersonVIPType</b></p>
     * 
     * @param vIP
     *     VIP Partner
     */
    public void setVIP(
        @Nullable
        final String vIP) {
        rememberChangedField("ContactPersonVIPType", this.vIP);
        this.vIP = vIP;
    }

    /**
     * Constraints: Not nullable, Maximum length: 241 <p>Original property name from the Odata EDM: <b>EmailAddress</b></p>
     * 
     * @param emailAddress
     *     Email Address
     */
    public void setEmailAddress(
        @Nullable
        final String emailAddress) {
        rememberChangedField("EmailAddress", this.emailAddress);
        this.emailAddress = emailAddress;
    }

    /**
     * Constraints: Not nullable, Maximum length: 30 <p>Original property name from the Odata EDM: <b>FaxNumber</b></p>
     * 
     * @param fax
     *     Fax Number: Dialing Code and Number
     */
    public void setFax(
        @Nullable
        final String fax) {
        rememberChangedField("FaxNumber", this.fax);
        this.fax = fax;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>FaxNumberExtension</b></p>
     * 
     * @param extension
     *     Fax no.: Extension
     */
    public void setExtension(
        @Nullable
        final String extension) {
        rememberChangedField("FaxNumberExtension", this.extension);
        this.extension = extension;
    }

    /**
     * Constraints: Not nullable, Maximum length: 30 <p>Original property name from the Odata EDM: <b>PhoneNumber</b></p>
     * 
     * @param telephone
     *     Telephone No.: Dialing Code and Number
     */
    public void setTelephone(
        @Nullable
        final String telephone) {
        rememberChangedField("PhoneNumber", this.telephone);
        this.telephone = telephone;
    }

    /**
     * Constraints: Not nullable, Maximum length: 10 <p>Original property name from the Odata EDM: <b>PhoneNumberExtension</b></p>
     * 
     * @param extension_2
     *     Telephone no.: Extension
     */
    public void setExtension_2(
        @Nullable
        final String extension_2) {
        rememberChangedField("PhoneNumberExtension", this.extension_2);
        this.extension_2 = extension_2;
    }

    /**
     * Constraints: Not nullable, Maximum length: 6 <p>Original property name from the Odata EDM: <b>RelationshipCategory</b></p>
     * 
     * @param relationshipCat
     *     Business Partner Relationship Category
     */
    public void setRelationshipCat(
        @Nullable
        final String relationshipCat) {
        rememberChangedField("RelationshipCategory", this.relationshipCat);
        this.relationshipCat = relationshipCat;
    }

    @Override
    protected String getEntityCollection() {
        return "A_BPContactToFuncAndDept";
    }

    @Nonnull
    @Override
    protected Map<String, Object> getKey() {
        final Map<String, Object> result = Maps.newHashMap();
        result.put("RelationshipNumber", getBPRelationshipNo());
        result.put("BusinessPartnerCompany", getBusinessPartner());
        result.put("BusinessPartnerPerson", getBusinessPartner_2());
        result.put("ValidityEndDate", getValidTo());
        return result;
    }

    @Nonnull
    @Override
    protected Map<String, Object> toMapOfFields() {
        final Map<String, Object> values = super.toMapOfFields();
        values.put("RelationshipNumber", getBPRelationshipNo());
        values.put("BusinessPartnerCompany", getBusinessPartner());
        values.put("BusinessPartnerPerson", getBusinessPartner_2());
        values.put("ValidityEndDate", getValidTo());
        values.put("ContactPersonAuthorityType", getAuthority());
        values.put("ContactPersonDepartment", getDepartment());
        values.put("ContactPersonDepartmentName", getCompanyDepartment());
        values.put("ContactPersonFunction", getFunction());
        values.put("ContactPersonFunctionName", getFunctionName());
        values.put("ContactPersonRemarkText", getNote());
        values.put("ContactPersonVIPType", getVIP());
        values.put("EmailAddress", getEmailAddress());
        values.put("FaxNumber", getFax());
        values.put("FaxNumberExtension", getExtension());
        values.put("PhoneNumber", getTelephone());
        values.put("PhoneNumberExtension", getExtension_2());
        values.put("RelationshipCategory", getRelationshipCat());
        return values;
    }

    @Override
    protected void fromMap(final Map<String, Object> inputValues) {
        final Map<String, Object> values = Maps.newHashMap(inputValues);
        // simple properties
        {
            if (values.containsKey("RelationshipNumber")) {
                final Object value = values.remove("RelationshipNumber");
                if ((value == null)||(!value.equals(getBPRelationshipNo()))) {
                    setBPRelationshipNo(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerCompany")) {
                final Object value = values.remove("BusinessPartnerCompany");
                if ((value == null)||(!value.equals(getBusinessPartner()))) {
                    setBusinessPartner(((String) value));
                }
            }
            if (values.containsKey("BusinessPartnerPerson")) {
                final Object value = values.remove("BusinessPartnerPerson");
                if ((value == null)||(!value.equals(getBusinessPartner_2()))) {
                    setBusinessPartner_2(((String) value));
                }
            }
            if (values.containsKey("ValidityEndDate")) {
                final Object value = values.remove("ValidityEndDate");
                if ((value == null)||(!value.equals(getValidTo()))) {
                    setValidTo(((LocalDateTime) value));
                }
            }
            if (values.containsKey("ContactPersonAuthorityType")) {
                final Object value = values.remove("ContactPersonAuthorityType");
                if ((value == null)||(!value.equals(getAuthority()))) {
                    setAuthority(((String) value));
                }
            }
            if (values.containsKey("ContactPersonDepartment")) {
                final Object value = values.remove("ContactPersonDepartment");
                if ((value == null)||(!value.equals(getDepartment()))) {
                    setDepartment(((String) value));
                }
            }
            if (values.containsKey("ContactPersonDepartmentName")) {
                final Object value = values.remove("ContactPersonDepartmentName");
                if ((value == null)||(!value.equals(getCompanyDepartment()))) {
                    setCompanyDepartment(((String) value));
                }
            }
            if (values.containsKey("ContactPersonFunction")) {
                final Object value = values.remove("ContactPersonFunction");
                if ((value == null)||(!value.equals(getFunction()))) {
                    setFunction(((String) value));
                }
            }
            if (values.containsKey("ContactPersonFunctionName")) {
                final Object value = values.remove("ContactPersonFunctionName");
                if ((value == null)||(!value.equals(getFunctionName()))) {
                    setFunctionName(((String) value));
                }
            }
            if (values.containsKey("ContactPersonRemarkText")) {
                final Object value = values.remove("ContactPersonRemarkText");
                if ((value == null)||(!value.equals(getNote()))) {
                    setNote(((String) value));
                }
            }
            if (values.containsKey("ContactPersonVIPType")) {
                final Object value = values.remove("ContactPersonVIPType");
                if ((value == null)||(!value.equals(getVIP()))) {
                    setVIP(((String) value));
                }
            }
            if (values.containsKey("EmailAddress")) {
                final Object value = values.remove("EmailAddress");
                if ((value == null)||(!value.equals(getEmailAddress()))) {
                    setEmailAddress(((String) value));
                }
            }
            if (values.containsKey("FaxNumber")) {
                final Object value = values.remove("FaxNumber");
                if ((value == null)||(!value.equals(getFax()))) {
                    setFax(((String) value));
                }
            }
            if (values.containsKey("FaxNumberExtension")) {
                final Object value = values.remove("FaxNumberExtension");
                if ((value == null)||(!value.equals(getExtension()))) {
                    setExtension(((String) value));
                }
            }
            if (values.containsKey("PhoneNumber")) {
                final Object value = values.remove("PhoneNumber");
                if ((value == null)||(!value.equals(getTelephone()))) {
                    setTelephone(((String) value));
                }
            }
            if (values.containsKey("PhoneNumberExtension")) {
                final Object value = values.remove("PhoneNumberExtension");
                if ((value == null)||(!value.equals(getExtension_2()))) {
                    setExtension_2(((String) value));
                }
            }
            if (values.containsKey("RelationshipCategory")) {
                final Object value = values.remove("RelationshipCategory");
                if ((value == null)||(!value.equals(getRelationshipCat()))) {
                    setRelationshipCat(((String) value));
                }
            }
        }
        // structured properties
        {
        }
        // navigation properties
        {
        }
        super.fromMap(values);
    }

    /**
     * Use with available fluent helpers to apply an extension field to query operations.
     * 
     * @param fieldName
     *     The name of the extension field as returned by the OData service.
     * @param <T>
     *     The type of the extension field when performing value comparisons.
     * @param fieldType
     *     The Java type to use for the extension field when performing value comparisons.
     * @return
     *     A representation of an extension field from this entity.
     */
    @Nonnull
    public static<T >FunctionAndDepartmentField<T> field(
        @Nonnull
        final String fieldName,
        @Nonnull
        final Class<T> fieldType) {
        return new FunctionAndDepartmentField<T>(fieldName);
    }

    /**
     * Use with available fluent helpers to apply an extension field to query operations.
     * 
     * @param typeConverter
     *     A TypeConverter<T, DomainT> instance whose first generic type matches the Java type of the field
     * @param fieldName
     *     The name of the extension field as returned by the OData service.
     * @param <T>
     *     The type of the extension field when performing value comparisons.
     * @param <DomainT>
     *     The type of the extension field as returned by the OData service.
     * @return
     *     A representation of an extension field from this entity, holding a reference to the given TypeConverter.
     */
    @Nonnull
    public static<T,DomainT >FunctionAndDepartmentField<T> field(
        @Nonnull
        final String fieldName,
        @Nonnull
        final TypeConverter<T, DomainT> typeConverter) {
        return new FunctionAndDepartmentField<T>(fieldName, typeConverter);
    }

    @Override
    @Nullable
    public Destination getDestinationForFetch() {
        return super.getDestinationForFetch();
    }

    @Override
    protected void setServicePathForFetch(
        @Nullable
        final String servicePathForFetch) {
        super.setServicePathForFetch(servicePathForFetch);
    }

    @Override
    public void attachToService(
        @Nullable
        final String servicePath,
        @Nonnull
        final Destination destination) {
        super.attachToService(servicePath, destination);
    }

    @Override
    protected String getDefaultServicePath() {
        return (com.sap.cloud.sdk.tutorial.datamodel.odata.services.BusinessPartnerService.DEFAULT_SERVICE_PATH);
    }

}
